; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc < %s -verify-machineinstrs -mtriple=aie2 | FileCheck %s

define dso_local noundef <16 x i32> @_Z11test_shiftxDv16_iS_ii_test2(<16 x i32> noundef %a, <16 x i32> noundef %b, i32 noundef %step, i32 noundef %shift) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_shiftxDv16_iS_ii_test2:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    mov s0, r0 // Delay Slot 4
; CHECK-NEXT:    vshift.align x0, x2, s0, x4, r1 // Delay Slot 3
; CHECK-NEXT:    vshift.align x0, x2, s0, x0, r1 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %a, <16 x i32> %b, i32 %step, i32 %shift)
  %1 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %a, <16 x i32> %0, i32 %step, i32 %shift)
  ret <16 x i32> %1
}


define dso_local noundef <16 x i32> @_Z11test_shiftxDv16_iS_ii(<16 x i32> noundef %a, <16 x i32> noundef %b, i32 noundef %step, i32 noundef %shift) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_shiftxDv16_iS_ii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    mov s0, r0 // Delay Slot 3
; CHECK-NEXT:    vshift.align x0, x2, s0, x4, r1 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %a, <16 x i32> %b, i32 %step, i32 %shift)
  ret <16 x i32> %0
}

define dso_local noundef <16 x i32> @_Z18test_shiftx_v16i32Dv16_iS_ii(<16 x i32> noundef %a, <16 x i32> noundef %b, i32 noundef %step, i32 noundef %shift) local_unnamed_addr #0 {
; CHECK-LABEL: _Z18test_shiftx_v16i32Dv16_iS_ii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    mov s0, r0 // Delay Slot 3
; CHECK-NEXT:    vshift.align x0, x2, s0, x4, r1 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %a, <16 x i32> %b, i32 %step, i32 %shift)
  ret <16 x i32> %0
}

define dso_local noundef <32 x i16> @_Z11test_shiftxDv32_tS_ii(<32 x i16> noundef %a, <32 x i16> noundef %b, i32 noundef %step, i32 noundef %shift) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_shiftxDv32_tS_ii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    mov s0, r0 // Delay Slot 3
; CHECK-NEXT:    vshift.align x0, x2, s0, x4, r1 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <32 x i16> %a to <16 x i32>
  %1 = bitcast <32 x i16> %b to <16 x i32>
  %2 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %0, <16 x i32> %1, i32 %step, i32 %shift)
  %3 = bitcast <16 x i32> %2 to <32 x i16>
  ret <32 x i16> %3
}

define dso_local noundef <64 x i8> @_Z16test_shift_bytesDv64_aS_i(<64 x i8> noundef %a, <64 x i8> noundef %b, i32 noundef %shift) local_unnamed_addr #0 {
; CHECK-LABEL: _Z16test_shift_bytesDv64_aS_i:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vshift x0, x2, x4, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <64 x i8> %a to <16 x i32>
  %1 = bitcast <64 x i8> %b to <16 x i32>
  %2 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %0, <16 x i32> %1, i32 0, i32 %shift)
  %3 = bitcast <16 x i32> %2 to <64 x i8>
  ret <64 x i8> %3
}

define dso_local noundef <64 x i8> @_Z10test_shiftDv64_hS_i(<64 x i8> noundef %a, <64 x i8> noundef %b, i32 noundef %shift_by) local_unnamed_addr #0 {
; CHECK-LABEL: _Z10test_shiftDv64_hS_i:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vshift x0, x2, x4, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <64 x i8> %a to <16 x i32>
  %1 = bitcast <64 x i8> %b to <16 x i32>
  %2 = tail call <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32> %0, <16 x i32> %1, i32 0, i32 %shift_by)
  %3 = bitcast <16 x i32> %2 to <64 x i8>
  ret <64 x i8> %3
}

; Function Attrs: nofree nosync nounwind readnone
declare <16 x i32> @llvm.aie2.vshift.I512.I512(<16 x i32>, <16 x i32>, i32, i32) #1
