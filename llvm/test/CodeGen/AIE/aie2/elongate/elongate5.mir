# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --start-after=aie-finalize-mi-bundles %s --filetype=obj -o - | \
# RUN: llvm-objdump --triple=aie2 -d - | FileCheck %s

# CHECK: 40: {{.*}} ret lr
--- |
  target triple = "aie2"
  
  define dso_local void @test() {
  entry:
    ret void
  }
  
  declare dso_local void @callee(i32 noundef)
...

# 16 + 5 x 6 = 2 x 16 + 14
# Initially we have only bundles that can grow by 4. We need to grow at least one bundle
# by 6
---
name:            test
alignment:       16
body:             |
  bb.0.entry (align 16):
    liveins: $p0, $p1, $r1, $cm0, $cm1
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $p0 = PADDB_ldb_ptr_inc_nrm_imm $p0, 4
      $p0 = PADDS_st_ptr_inc_idx_imm $p0, 4
      JL @callee, implicit-def $lr
      $cm0 = VADD $cm0, $cm2, $r1
    }
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $r0 = MOV_mv_scl $r1
    }
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $r0 = MOV_mv_scl $r1
    }
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $r0 = MOV_mv_scl $r1
    }
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $r0 = MOV_mv_scl $r1
    }
    BUNDLE {
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $r0 = MOV_mv_scl $r1
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOPX
    }
    BUNDLE {
      NOPX
    }
    BUNDLE {
      NOPX
    }
    BUNDLE {
      NOPX
    }
    BUNDLE {
      NOPX
    }
...
