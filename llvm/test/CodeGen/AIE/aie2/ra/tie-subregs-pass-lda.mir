# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -verify-machineinstrs --run-pass=aie-subregs %s -o - | FileCheck %s

---
name:            test_lda_2d
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $r4, $p0
    ; CHECK-LABEL: name: test_lda_2d
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $r4, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:em = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:edn = COPY $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:edj = COPY $r2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY $r3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:ed = REG_SEQUENCE [[COPY]], %subreg.sub_mod, [[COPY1]], %subreg.sub_dim_size, [[COPY2]], %subreg.sub_dim_stride, [[COPY3]], %subreg.sub_dim_count
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $r4, %6:ep, [[COPY5]].sub_dim_count:ed = LDA_2D_dms_lda [[COPY4]], [[COPY5]]
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $r4, %8:ep, [[COPY6]].sub_dim_count:ed = LDA_2D_S8_dmhb_lda [[COPY4]], [[COPY6]]
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $r4, %10:ep, [[COPY7]].sub_dim_count:ed = LDA_2D_S16_dmhb_lda [[COPY4]], [[COPY7]]
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $r4, %12:ep, [[COPY8]].sub_dim_count:ed = LDA_2D_U8_dmhb_lda [[COPY4]], [[COPY8]]
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $r4, %14:ep, [[COPY9]].sub_dim_count:ed = LDA_2D_U16_dmhb_lda [[COPY4]], [[COPY9]]
    %0:em =  COPY $r0
    %1:edn = COPY $r1
    %2:edj = COPY $r2
    %3:edc = COPY $r3
    %4:ep = COPY $p0
    %10:ed = REG_SEQUENCE %0, %subreg.sub_mod, %1, %subreg.sub_dim_size, %2, %subreg.sub_dim_stride, %3, %subreg.sub_dim_count
    $r4, %140:ep, %141:edc = LDA_2D_dms_lda %4, %10
    $r4, %150:ep, %151:edc = LDA_2D_S8_dmhb_lda %4, %10
    $r4, %160:ep, %161:edc = LDA_2D_S16_dmhb_lda %4, %10
    $r4, %170:ep, %171:edc = LDA_2D_U8_dmhb_lda %4, %10
    $r4, %180:ep, %181:edc = LDA_2D_U16_dmhb_lda %4, %10
...

---
name:            test_lda_3d
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r4, $p0, $d0_3d
    ; CHECK-LABEL: name: test_lda_3d
    ; CHECK: liveins: $r4, $p0, $d0_3d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $r4, %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_dms_lda [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $r4, %5:ep, [[COPY3]].sub_dim_count:eds, [[COPY3]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_S8_dmhb_lda [[COPY]], [[COPY3]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $r4, %8:ep, [[COPY4]].sub_dim_count:eds, [[COPY4]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_S16_dmhb_lda [[COPY]], [[COPY4]]
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $r4, %11:ep, [[COPY5]].sub_dim_count:eds, [[COPY5]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_U8_dmhb_lda [[COPY]], [[COPY5]]
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $r4, %14:ep, [[COPY6]].sub_dim_count:eds, [[COPY6]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_U16_dmhb_lda [[COPY]], [[COPY6]]
    %0:ep = COPY $p0
    %10:eds = COPY $d0_3d
    $r4, %140:ep, %141:edc, %142:edc = LDA_3D_dms_lda %0, %10
    $r4, %150:ep, %151:edc, %152:edc = LDA_3D_S8_dmhb_lda %0, %10
    $r4, %160:ep, %161:edc, %162:edc = LDA_3D_S16_dmhb_lda %0, %10
    $r4, %170:ep, %171:edc, %172:edc = LDA_3D_U8_dmhb_lda %0, %10
    $r4, %180:ep, %181:edc, %182:edc = LDA_3D_U16_dmhb_lda %0, %10
...

---
name:            test_lda_2d_q
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $p0, $q3
    ; CHECK-LABEL: name: test_lda_2d_q
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $p0, $q3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:em = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:edn = COPY $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:edj = COPY $r2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY $r3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:ed = REG_SEQUENCE [[COPY]], %subreg.sub_mod, [[COPY1]], %subreg.sub_dim_size, [[COPY2]], %subreg.sub_dim_stride, [[COPY3]], %subreg.sub_dim_count
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: $q3, %6:ep, [[COPY5]].sub_dim_count:ed = LDA_2D_dmv_lda_q [[COPY4]], [[COPY5]]
    %0:em =  COPY $r0
    %1:edn = COPY $r1
    %2:edj = COPY $r2
    %3:edc = COPY $r3
    %4:ep = COPY $p0
    %10:ed = REG_SEQUENCE %0, %subreg.sub_mod, %1, %subreg.sub_dim_size, %2, %subreg.sub_dim_stride, %3, %subreg.sub_dim_count
    $q3, %190:ep, %191:edc = LDA_2D_dmv_lda_q %4, %10

...

---
name:            test_lda_3d_q
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $q0, $p0, $d0_3d
    ; CHECK-LABEL: name: test_lda_3d_q
    ; CHECK: liveins: $q0, $p0, $d0_3d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: $q0, %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = LDA_3D_dmv_lda_q [[COPY]], [[COPY2]]
    %0:ep = COPY $p0
    %10:eds = COPY $d0_3d
    $q0, %180:ep, %181:edc, %182:edc = LDA_3D_dmv_lda_q %0, %10
...
