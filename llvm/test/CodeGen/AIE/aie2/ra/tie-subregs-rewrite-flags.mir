# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -verify-machineinstrs --run-pass=aie-subregs %s -o - | FileCheck %s

# The %200 output is dead, make sure we remove the "dead" flag when we rewrite
# it into newreg.subreg. Otherwise, this would change semantics and mean that
# the whole newreg super-reg is dead.
---
name:            test_dead_output
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $d0_3d, $p0
    ; CHECK-LABEL: name: test_dead_output
    ; CHECK: liveins: $d0_3d, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY]]
    ; CHECK-NEXT: %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = PADDA_3D [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY [[COPY2]].sub_hi_dim_then_sub_dim_count
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY3]]
    %0:eds = COPY $d0_3d
    %10:ep = COPY $p0
    %100:ep, dead %200:edc, %300:edc = PADDA_3D %10, %0
    %31:edc = COPY %300
    PseudoRET implicit $lr, implicit %31
...

# The two outputs are killed by the COPY instrs after PADDA_3D. Make sure the
# kill flag is removed when replacing %200 and %300 with a super-register.
# Otherwise, we would change semantics.
---
name:            test_killed_output
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $d0_3d, $p0
    ; CHECK-LABEL: name: test_killed_output
    ; CHECK: liveins: $d0_3d, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY]]
    ; CHECK-NEXT: %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = PADDA_3D [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY [[COPY2]].sub_dim_count
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:em = COPY [[COPY2]].sub_hi_dim_then_sub_dim_count
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY3]], implicit [[COPY4]]
    %0:eds = COPY $d0_3d
    %10:ep = COPY $p0
    %100:ep, %200:edc, %300:edc = PADDA_3D %10, %0

    %30:edc = COPY killed %200
    %31:em = COPY killed %300
    PseudoRET implicit $lr, implicit %30, implicit %31
...
