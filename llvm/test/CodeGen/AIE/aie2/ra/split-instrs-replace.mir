# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -O2 -mtriple=aie2 -verify-machineinstrs -run-pass=aie-split-instrs-replace %s -o - | FileCheck %s

# Notes on reg masks:
# 0x870 corresponds to {AIE2::sub_mod, AIE2::sub_dim_size,
#                       AIE2::sub_dim_stride, AIE2::sub_dim_count}
# 0x70000 corresponds to {AIE2::sub_hi_dim_then_sub_dim_count,
#                         AIE2::sub_hi_dim_then_sub_dim_size,
#                         AIE2::sub_hi_dim_then_sub_dim_stride}
# Therefore, 0x70870 corresponds to a 3D reg with sub_hi_dim_then_sub_mod undefined.
# For up-to-date masks, see SubRegIndexLaneMaskTable[] in AIE2GenRegisterInfo.inc


# Currently, we add a superreg livein for $d4.sub_mod even if the sub-reg was
# actually not used in PADDA_2D_split.
# This does not hurt, because $d4.sub_mod was actually live (it is equivalent to
# $m4, which is livein).
---
name:            PADDA_2D_unused_livein
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0

    ; CHECK-LABEL: name: PADDA_2D_unused_livein
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: renamable $m4 = COPY $r0
    ; CHECK-NEXT: $p0, $dc4 = PADDA_2D killed $p0, $d4
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    renamable $m4 = COPY $r0
    $p0, $dc4 = PADDA_2D_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

# Verify how liveins are rewritten when the sub-regs are defined in different
# BBs. Currently, we only update liveins in the the "use MBB".
---
name:            PADDA_2D_sources_in_multi_bb
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: PADDA_2D_sources_in_multi_bb
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2, $r3, $r4
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $m4 = COPY $r0
  ; CHECK-NEXT:   renamable $dn4 = COPY $r1
  ; CHECK-NEXT:   renamable $dc4 = COPY $r3
  ; CHECK-NEXT:   PseudoJNZ killed renamable $r4, %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r2, $dc4, $dn4, $m4, $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $dj4 = COPY killed renamable $r2
  ; CHECK-NEXT:   PseudoJ_jump_imm %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r2, $dc4, $dn4, $m4, $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $dj4 = COPY killed renamable $dc4
  ; CHECK-NEXT:   renamable $dc4 = COPY killed renamable $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $p0, $dc4 = PADDA_2D killed $p0, $d4
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
  bb.0.entry:
    successors: %bb.2, %bb.1
    liveins: $p0, $r0, $r1, $r2, $r3, $r4

    renamable $m4 = COPY $r0
    renamable $dn4 = COPY $r1
    renamable $dc4 = COPY $r3
    PseudoJNZ killed renamable $r4, %bb.2

  bb.1:
    successors: %bb.3
    liveins: $r2, $dc4, $dn4, $m4, $p0
    renamable $dj4 = COPY killed renamable $r2
    PseudoJ_jump_imm %bb.3

  bb.2:
    successors: %bb.3
    liveins: $r2, $dc4, $dn4, $m4, $p0
    renamable $dj4 = COPY killed renamable $dc4
    renamable $dc4 = COPY killed renamable $r2

  bb.3:
    liveins: $dc4, $dj4, $dn4, $m4, $p0
    $p0, $dc4 = PADDA_2D_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

# Verify how liveins are rewritten when the sub-regs are defined in different
# BBs. Currently, we only update liveins in the the "use MBB".
---
name:            PADDA_3D_sources_in_multi_bb
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: PADDA_3D_sources_in_multi_bb
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2, $r3, $r4, $m0, $dn0, $dj0, $dc0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $dn4 = COPY $r1
  ; CHECK-NEXT:   renamable $dc4 = COPY $r3
  ; CHECK-NEXT:   PseudoJNZ killed renamable $r4, %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r2, $dc4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $dj4 = COPY killed renamable $r2
  ; CHECK-NEXT:   PseudoJ_jump_imm %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r2, $dc4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $dj4 = COPY killed renamable $dc4
  ; CHECK-NEXT:   renamable $dc4 = COPY killed renamable $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $p0, $dc0, $dc4 = PADDA_3D killed $p0, $d0_3d
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
  bb.0.entry:
    successors: %bb.2, %bb.1
    liveins: $p0, $r0, $r1, $r2, $r3, $r4, $m0, $dn0, $dj0, $dc0
    renamable $dn4 = COPY $r1
    renamable $dc4 = COPY $r3
    PseudoJNZ killed renamable $r4, %bb.2

  bb.1:
    successors: %bb.3
    liveins: $r2, $dc4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    renamable $dj4 = COPY killed renamable $r2
    PseudoJ_jump_imm %bb.3

  bb.2:
    successors: %bb.3
    liveins: $r2, $dc4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    renamable $dj4 = COPY killed renamable $dc4
    renamable $dc4 = COPY killed renamable $r2

  bb.3:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    $p0, $dc0, $dc4 = PADDA_3D_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            PADD_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0

    ; CHECK-LABEL: name: PADD_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = PADDA_2D killed $p0, $d4
    ; CHECK-NEXT: $p0, $dc4 = PADDB_2D killed $p0, $d4
    ; CHECK-NEXT: $p0, $dc4 = PADDS_2D killed $p0, $d4
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = PADDA_2D_split killed $p0, $m4, $dn4, $dj4, killed $dc4
    $p0, $dc4 = PADDB_2D_split killed $p0, $m4, $dn4, $dj4, killed $dc4
    $p0, $dc4 = PADDS_2D_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            PADD_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: PADD_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = PADDA_3D killed $p0, $d0_3d
    ; CHECK-NEXT: $p0, $dc0, $dc4 = PADDB_3D killed $p0, $d0_3d
    ; CHECK-NEXT: $p0, $dc0, $dc4 = PADDS_3D killed $p0, $d0_3d
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = PADDA_3D_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4
    $p0, $dc0, $dc4 = PADDB_3D_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4
    $p0, $dc0, $dc4 = PADDS_3D_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VLD_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0

    ; CHECK-LABEL: name: VLD_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $wl0, $p0, $dc4 = VLDA_2D_dmw_lda_w killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $amll0, $p0, $dc4 = VLDA_2D_dmw_lda_am killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $wl0, $p0, $dc4 = VLDB_2D killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    dead $wl0, $p0, $dc4 = VLDA_2D_dmw_lda_w_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $amll0, $p0, $dc4 = VLDA_2D_dmw_lda_am_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $wl0, $p0, $dc4 = VLDB_2D_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VLD_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: VLD_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $wl0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_w killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $amll0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_am killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $wl0, $p0, $dc0, $dc4 = VLDB_3D killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    dead $wl0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_w_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $amll0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_am_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $wl0, $p0, $dc0, $dc4 = VLDB_3D_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VLDB_2D_UNPACK
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0

    ; CHECK-LABEL: name: VLDB_2D_UNPACK
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $x0, $p0, $dc4 = VLDB_2D_UNPACK_S8_S4 killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x1, $p0, $dc4 = VLDB_2D_UNPACK_S16_S8 killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x2, $p0, $dc4 = VLDB_2D_UNPACK_D8_D4 killed $p0, $d4, implicit $crunpacksign :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x3, $p0, $dc4 = VLDB_2D_UNPACK_D16_D8 killed $p0, $d4, implicit $crunpacksign :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    dead $x0, $p0, $dc4 = VLDB_2D_UNPACK_S8_S4_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $x1, $p0, $dc4 = VLDB_2D_UNPACK_S16_S8_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $x2, $p0, $dc4 = VLDB_2D_UNPACK_D8_D4_split killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit $crunpacksign :: (load (<8 x s32>) from unknown-address)
    dead $x3, $p0, $dc4 = VLDB_2D_UNPACK_D16_D8_split killed $p0, killed $m4, killed $dn4, killed $dj4, implicit $crunpacksign, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VLD_2D_CONV
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-LABEL: name: VLD_2D_CONV
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $bml0, $p0, $dc4 = VLDA_2D_CONV_FP32_BF16 killed $p0, $d4 :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    dead $bml0, $p0, $dc4 = VLDA_2D_CONV_FP32_BF16_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VLDB_3D_UNPACK
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: VLDB_3D_UNPACK
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S8_S4 killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S16_S8 killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D8_D4 killed $p0, $d0_3d, implicit $crunpacksign :: (load (<8 x s32>))
    ; CHECK-NEXT: dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D16_D8 killed $p0, $d0_3d, implicit $crunpacksign :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S8_S4_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S16_S8_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (<8 x s32>) from unknown-address)
    dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D8_D4_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit $crunpacksign :: (load (<8 x s32>) from unknown-address)
    dead $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D16_D8_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4, implicit $crunpacksign :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...


---
name:            VLD_3D_CONV
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: VLD_3D_CONV
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $bml0, $p0, $dc0, $dc4 = VLDA_3D_CONV_FP32_BF16 killed $p0, $d0_3d :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    dead $bml0, $p0, $dc0, $dc4 = VLDA_3D_CONV_FP32_BF16_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VST_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $wl0, $amll0

    ; CHECK-LABEL: name: VST_2D
    ; CHECK: liveins: $amll0, $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_dmw_sts_w $wl0, killed $p0, $d4 :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_128 killed $wl0, killed $p0, $d4 :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_dmw_sts_am killed $amll0, killed $p0, $d4 :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = VST_2D_dmw_sts_w_split $wl0, killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_128_split killed $wl0, killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_dmw_sts_am_split killed $amll0, killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VST_2D_PACK
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $x0

    ; CHECK-LABEL: name: VST_2D_PACK
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_PACK_D4_D8 killed $p0, $d4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_PACK_D8_D16 killed $p0, $d4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_PACK_S4_S8 killed $p0, $d4, $x0, implicit $crsat :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_PACK_S8_S16 killed $p0, $d4, $x0, implicit $crsat :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = VST_2D_PACK_D4_D8_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_PACK_D8_D16_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_PACK_S4_S8_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $x0, implicit $crsat :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_PACK_S8_S16_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4, $x0, implicit $crsat :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VST_3D_PACK
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $x0

    ; CHECK-LABEL: name: VST_3D_PACK
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $x0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_PACK_D4_D8 killed $p0, $d0_3d, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_PACK_D8_D16 killed $p0, $d0_3d, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_PACK_S4_S8 killed $p0, $d0_3d, $x0, implicit $crsat :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_PACK_S8_S16 killed $p0, $d0_3d, $x0, implicit $crsat :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc0, $dc4  = VST_3D_PACK_D4_D8_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_PACK_D8_D16_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $x0, implicit $crsat, implicit $crpacksign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_PACK_S4_S8_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $x0, implicit $crsat :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_PACK_S8_S16_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4, $x0, implicit $crsat :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...


---
name:            ST_2D_Q
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $q0

    ; CHECK-LABEL: name: ST_2D_Q
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $q0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = ST_2D_dmv_sts_q killed $q0, killed $p0, $d4 :: (store (<4 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = ST_2D_dmv_sts_q_split killed $q0, killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (store (<4 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VST_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $wl0, $amll0
    ; CHECK-LABEL: name: VST_3D
    ; CHECK: liveins: $amll0, $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $wl0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_dmw_sts_w $wl0, killed $p0, $d0_3d :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_128 killed $wl0, killed $p0, $d0_3d :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_dmw_sts_am killed $amll0, killed $p0, $d0_3d :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = VST_3D_dmw_sts_w_split $wl0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_128_split killed $wl0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_dmw_sts_am_split killed $amll0, killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            ST_3D_Q
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $q0
    ; CHECK-LABEL: name: ST_3D_Q
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $q0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_dmv_sts_q killed $q0, killed $p0, $d0_3d :: (store (<4 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = ST_3D_dmv_sts_q_split killed $q0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (store (<4 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VLD_UPS_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0, $s0

    ; CHECK-LABEL: name: VLD_UPS_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0, $s0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $bml0, $p0, $dc4 = VLDA_2D_UPS_S32_D16 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc4 = VLDA_2D_UPS_S64_D32 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc4 = VLDA_2D_UPS_S32_D8 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc4 = VLDA_2D_UPS_S64_D16 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc4 = VLDA_2D_UPS_S32_S16 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc4 = VLDA_2D_UPS_S64_S32 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc4 = VLDA_2D_UPS_S32_S8 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc4 = VLDA_2D_UPS_S64_S16 $s0, killed $p0, $d4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $bml0, $p0, $dc4 = VLDA_2D_UPS_S32_D16_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc4 = VLDA_2D_UPS_S64_D32_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc4 = VLDA_2D_UPS_S32_D8_split  $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc4 = VLDA_2D_UPS_S64_D16_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc4 = VLDA_2D_UPS_S32_S16_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc4 = VLDA_2D_UPS_S64_S32_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc4 = VLDA_2D_UPS_S32_S8_split  $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc4 = VLDA_2D_UPS_S64_S16_split $s0, killed $p0, $m4, $dn4, $dj4, killed $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VLD_UPS_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $s0
    ; CHECK-LABEL: name: VLD_UPS_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $s0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_D16 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_D32 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_D8 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_D16 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_S16 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_S32 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_S8 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: $cm1, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_S16 $s0, killed $p0, $d0_3d, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_D16_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_D32_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_D8_split  $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_D16_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat, implicit $crupssign :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_S16_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $bml0, $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_S32_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc0, $dc4 = VLDA_3D_UPS_S32_S8_split  $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    $cm1,  $p0, $dc0, $dc4 = VLDA_3D_UPS_S64_S16_split $s0, killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, implicit-def $srups_of, implicit $crsat :: (load (<8 x s32>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VST_SRS_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $bml0, $cm1, $s0

    ; CHECK-LABEL: name: VST_SRS_2D
    ; CHECK: liveins: $bml0, $cm1, $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $s0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_D8_S32 killed $p0, $d4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_D16_S64 killed $p0, $d4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_D16_S32 killed $p0, $d4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_D32_S64 killed $p0, $d4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_S8_S32 killed $p0, $d4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_S16_S64 killed $p0, $d4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_S16_S32 killed $p0, $d4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc4 = VST_2D_SRS_S32_S64 killed $p0, $d4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = VST_2D_SRS_D8_S32_split  killed $p0, $m4, $dn4, $dj4, killed $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_D16_S64_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_D16_S32_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_D32_S64_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_S8_S32_split  killed $p0, $m4, $dn4, $dj4, killed $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_S16_S64_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_S16_S32_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc4 = VST_2D_SRS_S32_S64_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VST_SRS_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $bml0, $cm1, $s0
    ; CHECK-LABEL: name: VST_SRS_3D
    ; CHECK: liveins: $bml0, $cm1, $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $s0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_D8_S32 killed $p0, $d0_3d, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_D16_S64 killed $p0, $d0_3d, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_D16_S32 killed $p0, $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_D32_S64 killed $p0, $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_S8_S32 killed $p0, $d0_3d, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_S16_S64 killed $p0, $d0_3d, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_S16_S32 killed $p0, $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_3D_SRS_S32_S64 killed $p0, $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = VST_3D_SRS_D8_S32_split  killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_D16_S64_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_D16_S32_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_D32_S64_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_S8_S32_split  killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_S16_S64_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $cm1, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_S16_S32_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    $p0, $dc0, $dc4 = VST_3D_SRS_S32_S64_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VST_CONV_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $bml0

    ; CHECK-LABEL: name: VST_CONV_2D
    ; CHECK: liveins: $bml0, $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = VST_CONV_2D_BF16_FP32 killed $p0, $d4, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = VST_CONV_2D_BF16_FP32_split killed $p0, $m4, $dn4, $dj4, killed $dc4, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VST_CONV_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $bml0

    ; CHECK-LABEL: name: VST_CONV_3D
    ; CHECK: liveins: $bml0, $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = VST_CONV_3D_BF16_FP32 killed $p0, $d0_3d, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask :: (store (<8 x s32>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = VST_CONV_3D_BF16_FP32_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask :: (store (<8 x s32>) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            VLD_2D_128
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0

    ; CHECK-LABEL: name: VLD_2D_128
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $wl0, $p0, $dc4 = VLDB_2D_128 killed $p0, $d4 :: (load (<8 x s16>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    dead $wl0, $p0, $dc4 = VLDB_2D_128_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (<8 x s16>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            VLD_3D_128
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: VLD_3D_128
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead $wl0, $p0, $dc0, $dc4 = VLDB_3D_128 killed $p0, $d0_3d :: (load (<8 x s16>))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    dead $wl0, $p0, $dc0, $dc4 = VLDB_3D_128_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (<8 x s16>) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4

...


---
name:            LDA_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-LABEL: name: LDA_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r0, $p0, $dc4 = LDA_2D_dms_lda killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc4 = LDA_2D_S8_dmhb_lda killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc4 = LDA_2D_U8_dmhb_lda killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc4 = LDA_2D_S16_dmhb_lda killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc4 = LDA_2D_U16_dmhb_lda killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $r0, $p0, $dc4 = LDA_2D_dms_lda_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc4 = LDA_2D_S8_dmhb_lda_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc4 = LDA_2D_U8_dmhb_lda_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc4 = LDA_2D_S16_dmhb_lda_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc4 = LDA_2D_U16_dmhb_lda_split killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (s32) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...


---
name:            LDA_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: LDA_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r0, $p0, $dc0, $dc4 = LDA_3D_dms_lda killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc0, $dc4 = LDA_3D_S8_dmhb_lda killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc0, $dc4 = LDA_3D_U8_dmhb_lda killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc0, $dc4 = LDA_3D_S16_dmhb_lda killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: $r0, $p0, $dc0, $dc4 = LDA_3D_U16_dmhb_lda killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $r0, $p0, $dc0, $dc4 = LDA_3D_dms_lda_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc0, $dc4 = LDA_3D_S8_dmhb_lda_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc0, $dc4 = LDA_3D_U8_dmhb_lda_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc0, $dc4 = LDA_3D_S16_dmhb_lda_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (s32) from unknown-address)
    $r0, $p0, $dc0, $dc4 = LDA_3D_U16_dmhb_lda_split killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (load (s32) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            LDA_2D_Q
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $q0
    ; CHECK-LABEL: name: LDA_2D_Q
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $q0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $q0, $p0, $dc4 = LDA_2D_dmv_lda_q killed $p0, $d4 :: (load (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $q0, $p0, $dc4 = LDA_2D_dmv_lda_q_split killed $p0, $m4, $dn4, $dj4, killed $dc4 :: (load (s32) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...


---
name:            LDA_3D_Q
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0
    ; CHECK-LABEL: name: LDA_3D_Q
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $q0, $p0, $dc0, $dc4 = LDA_3D_dmv_lda_q killed $p0, $d0_3d :: (load (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $q0, $p0, $dc0, $dc4 = LDA_3D_dmv_lda_q_split killed $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (load (s32) from unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            ST_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-LABEL: name: ST_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = ST_2D_dms_sts $r0, killed $p0, $d4 :: (store (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = ST_2D_dms_sts_split $r0, killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (s32) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            ST_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $r0
    ; CHECK-LABEL: name: ST_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $r0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_dms_sts $r0, killed $p0, $d0_3d :: (store (s32))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = ST_3D_dms_sts_split $r0, killed $p0, killed $m0, killed $dn0, killed $dj0, killed $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (s32) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...

---
name:            STHB_2D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-LABEL: name: STHB_2D
    ; CHECK: liveins: $d4:0x0000000000000870, $dc4, $dj4, $dn4, $m4, $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc4 = ST_2D_S8 $r0, $p0, $d4 :: (store (s8))
    ; CHECK-NEXT: $p0, $dc4 = ST_2D_S16 $r0, killed $p0, $d4 :: (store (s16))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
    $p0, $dc4 = ST_2D_S8_split $r0, $p0, $m4, $dn4, $dj4, $dc4 :: (store (s8) into unknown-address)
    $p0, $dc4 = ST_2D_S16_split $r0, killed $p0, killed $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (s16) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc4
...

---
name:            STHB_3D
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $dc4, $dj4, $dn4, $p0, $m0, $dn0, $dj0, $dc0, $r0
    ; CHECK-LABEL: name: STHB_3D
    ; CHECK: liveins: $dc0, $dc4, $dj0, $dj4, $dn0, $dn4, $m0, $p0, $r0, $d0_3d:0x0000000000070870
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_S8 $r0, $p0, $d0_3d :: (store (s8))
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_S16 $r0, killed $p0, $d0_3d :: (store (s16))
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
    $p0, $dc0, $dc4 = ST_3D_S8_split $r0, $p0, $m0, $dn0, $dj0, $dc0, undef $m4, $dn4, $dj4, $dc4 :: (store (s8) into unknown-address)
    $p0, $dc0, $dc4 = ST_3D_S16_split $r0, killed $p0, $m0, $dn0, $dj0, $dc0, killed undef $m4, killed $dn4, killed $dj4, killed $dc4 :: (store (s16) into unknown-address)
    PseudoRET implicit $lr, implicit killed renamable $p0, implicit killed renamable $dc0, implicit killed renamable $dc4
...
