# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -verify-machineinstrs --run-pass=aie-subregs %s -o - | FileCheck %s

---
name:            test_vst_2d
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $wl3, $amll3, $bml0, $cm0, $x0
    ; CHECK-LABEL: name: test_vst_2d
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $wl3, $amll3, $bml0, $cm0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:em = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:edn = COPY $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:edj = COPY $r2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY $r3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:ed = REG_SEQUENCE [[COPY]], %subreg.sub_mod, [[COPY1]], %subreg.sub_dim_size, [[COPY2]], %subreg.sub_dim_stride, [[COPY3]], %subreg.sub_dim_count
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %6:ep, [[COPY5]].sub_dim_count:ed = VST_2D_dmw_sts_w $wl3, [[COPY4]], [[COPY5]]
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %8:ep, [[COPY6]].sub_dim_count:ed = VST_2D_dmw_sts_am $amll3, [[COPY4]], [[COPY6]]
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %10:ep, [[COPY7]].sub_dim_count:ed = VST_2D_SRS_D16_S32 [[COPY4]], [[COPY7]], $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %12:ep, [[COPY8]].sub_dim_count:ed = VST_2D_SRS_S16_S32 [[COPY4]], [[COPY8]], $bml0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %14:ep, [[COPY9]].sub_dim_count:ed = VST_2D_SRS_D32_S64 [[COPY4]], [[COPY9]], $bml0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %16:ep, [[COPY10]].sub_dim_count:ed = VST_2D_SRS_S32_S64 [[COPY4]], [[COPY10]], $bml0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %18:ep, [[COPY11]].sub_dim_count:ed = VST_2D_SRS_D16_S64 [[COPY4]], [[COPY11]], $cm0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %20:ep, [[COPY12]].sub_dim_count:ed = VST_2D_SRS_S16_S64 [[COPY4]], [[COPY12]], $cm0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %22:ep, [[COPY13]].sub_dim_count:ed = VST_2D_SRS_D8_S32 [[COPY4]], [[COPY13]], $cm0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %24:ep, [[COPY14]].sub_dim_count:ed = VST_2D_SRS_S8_S32 [[COPY4]], [[COPY14]], $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %26:ep, [[COPY15]].sub_dim_count:ed = VST_CONV_2D_BF16_FP32 [[COPY4]], [[COPY15]], $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    ; CHECK-NEXT: [[COPY16:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %28:ep, [[COPY16]].sub_dim_count:ed = VST_2D_PACK_D4_D8 [[COPY4]], [[COPY16]], $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: [[COPY17:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %30:ep, [[COPY17]].sub_dim_count:ed = VST_2D_PACK_D8_D16 [[COPY4]], [[COPY17]], $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: [[COPY18:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %32:ep, [[COPY18]].sub_dim_count:ed = VST_2D_PACK_S4_S8 [[COPY4]], [[COPY18]], $x0, implicit $crsat
    ; CHECK-NEXT: [[COPY19:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %34:ep, [[COPY19]].sub_dim_count:ed = VST_2D_PACK_S8_S16 [[COPY4]], [[COPY19]], $x0, implicit $crsat
    ; CHECK-NEXT: [[COPY20:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %36:ep, [[COPY20]].sub_dim_count:ed = VST_2D_128 $wl3, [[COPY4]], [[COPY20]]
    %0:em =  COPY $r0
    %1:edn = COPY $r1
    %2:edj = COPY $r2
    %3:edc = COPY $r3
    %4:ep = COPY $p0

    ; ISel code for add_2d_byte
    %10:ed = REG_SEQUENCE %0, %subreg.sub_mod, %1, %subreg.sub_dim_size, %2, %subreg.sub_dim_stride, %3, %subreg.sub_dim_count
    %30:ep, %31:edc = VST_2D_dmw_sts_w $wl3, %4, %10
    %40:ep, %41:edc = VST_2D_dmw_sts_am $amll3, %4, %10
    %50:ep, %51:edc = VST_2D_SRS_D16_S32 %4, %10, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %60:ep, %61:edc = VST_2D_SRS_S16_S32 %4, %10, $bml0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %70:ep, %71:edc = VST_2D_SRS_D32_S64 %4, %10, $bml0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %80:ep, %81:edc = VST_2D_SRS_S32_S64 %4, %10, $bml0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %90:ep, %91:edc = VST_2D_SRS_D16_S64 %4, %10, $cm0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %100:ep, %101:edc = VST_2D_SRS_S16_S64 %4, %10, $cm0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %110:ep, %111:edc = VST_2D_SRS_D8_S32  %4, %10, $cm0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %120:ep, %121:edc = VST_2D_SRS_S8_S32  %4, %10, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %130:ep, %131:edc = VST_CONV_2D_BF16_FP32 %4, %10, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    %140:ep, %141:edc = VST_2D_PACK_D4_D8 %4, %10, $x0, implicit $crsat, implicit $crpacksign
    %150:ep, %151:edc = VST_2D_PACK_D8_D16 %4, %10, $x0, implicit $crsat, implicit $crpacksign
    %160:ep, %161:edc = VST_2D_PACK_S4_S8 %4, %10, $x0, implicit $crsat
    %170:ep, %171:edc = VST_2D_PACK_S8_S16 %4, %10, $x0, implicit $crsat
    %180:ep, %181:edc = VST_2D_128 $wl3, %4, %10
...

---
name:            test_vst_3d
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $wl3, $amll3, $bml0, $cm0, $x0
    ; CHECK-LABEL: name: test_vst_3d
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $wl3, $amll3, $bml0, $cm0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_dmw_sts_w $wl3, [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %5:ep, [[COPY3]].sub_dim_count:eds, [[COPY3]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_dmw_sts_am $amll3, [[COPY]], [[COPY3]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %8:ep, [[COPY4]].sub_dim_count:eds, [[COPY4]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_D16_S32 [[COPY]], [[COPY4]], $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %11:ep, [[COPY5]].sub_dim_count:eds, [[COPY5]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_S16_S32 [[COPY]], [[COPY5]], $bml0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %14:ep, [[COPY6]].sub_dim_count:eds, [[COPY6]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_D32_S64 [[COPY]], [[COPY6]], $bmh0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %17:ep, [[COPY7]].sub_dim_count:eds, [[COPY7]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_S32_S64 [[COPY]], [[COPY7]], $bmh0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %20:ep, [[COPY8]].sub_dim_count:eds, [[COPY8]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_D16_S64 [[COPY]], [[COPY8]], $cm0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %23:ep, [[COPY9]].sub_dim_count:eds, [[COPY9]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_S16_S64 [[COPY]], [[COPY9]], $cm0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %26:ep, [[COPY10]].sub_dim_count:eds, [[COPY10]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_D8_S32 [[COPY]], [[COPY10]], $cm0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %29:ep, [[COPY11]].sub_dim_count:eds, [[COPY11]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_SRS_S8_S32 [[COPY]], [[COPY11]], $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %32:ep, [[COPY12]].sub_dim_count:eds, [[COPY12]].sub_hi_dim_then_sub_dim_count:eds = VST_CONV_3D_BF16_FP32 [[COPY]], [[COPY12]], $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %35:ep, [[COPY13]].sub_dim_count:eds, [[COPY13]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_PACK_S4_S8 [[COPY]], [[COPY13]], $x0, implicit $crsat
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %38:ep, [[COPY14]].sub_dim_count:eds, [[COPY14]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_PACK_S8_S16 [[COPY]], [[COPY14]], $x0, implicit $crsat
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %41:ep, [[COPY15]].sub_dim_count:eds, [[COPY15]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_PACK_D4_D8 [[COPY]], [[COPY15]], $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: [[COPY16:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %44:ep, [[COPY16]].sub_dim_count:eds, [[COPY16]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_PACK_D8_D16 [[COPY]], [[COPY16]], $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: [[COPY17:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %47:ep, [[COPY17]].sub_dim_count:eds, [[COPY17]].sub_hi_dim_then_sub_dim_count:eds = VST_3D_128 $wl3, [[COPY]], [[COPY17]]
    %0:ep = COPY $p0
    %10:eds = COPY $d0_3d
    %30:ep, %31:edc, %32:edc = VST_3D_dmw_sts_w $wl3, %0, %10
    %42:ep, %43:edc, %44:edc = VST_3D_dmw_sts_am $amll3, %0, %10
    %210:ep, %211:edc, %212:edc = VST_3D_SRS_D16_S32 %0, %10, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %220:ep, %221:edc, %222:edc = VST_3D_SRS_S16_S32 %0, %10, $bml0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %230:ep, %231:edc, %232:edc = VST_3D_SRS_D32_S64 %0, %10, $bmh0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %240:ep, %241:edc, %242:edc = VST_3D_SRS_S32_S64 %0, %10, $bmh0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %250:ep, %251:edc, %252:edc = VST_3D_SRS_D16_S64 %0, %10, $cm0, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %260:ep, %261:edc, %262:edc = VST_3D_SRS_S16_S64 %0, %10, $cm0, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %270:ep, %271:edc, %272:edc = VST_3D_SRS_D8_S32  %0, %10, $cm0, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %280:ep, %281:edc, %282:edc = VST_3D_SRS_S8_S32  %0, %10, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %290:ep, %291:edc, %292:edc = VST_CONV_3D_BF16_FP32 %0, %10, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    %300:ep, %301:edc, %302:edc = VST_3D_PACK_S4_S8 %0, %10, $x0, implicit $crsat
    %310:ep, %311:edc, %312:edc = VST_3D_PACK_S8_S16 %0, %10, $x0, implicit $crsat
    %320:ep, %321:edc, %322:edc = VST_3D_PACK_D4_D8 %0, %10, $x0, implicit $crsat, implicit $crpacksign
    %330:ep, %331:edc, %332:edc = VST_3D_PACK_D8_D16 %0, %10, $x0, implicit $crsat, implicit $crpacksign
    %340:ep, %341:edc, %342:edc = VST_3D_128 $wl3, %0, %10

...

---
name:            test_st_2d_q
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $q3
    ; CHECK-LABEL: name: test_st_2d_q
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $q3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:em = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:edn = COPY $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:edj = COPY $r2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:edc = COPY $r3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:ed = REG_SEQUENCE [[COPY]], %subreg.sub_mod, [[COPY1]], %subreg.sub_dim_size, [[COPY2]], %subreg.sub_dim_stride, [[COPY3]], %subreg.sub_dim_count
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:ed = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: %6:ep, [[COPY5]].sub_dim_count:ed = ST_2D_dmv_sts_q $q3, [[COPY4]], [[COPY5]]
    %0:em =  COPY $r0
    %1:edn = COPY $r1
    %2:edj = COPY $r2
    %3:edc = COPY $r3
    %4:ep = COPY $p0

    ; ISel code for add_2d_byte
    %10:ed = REG_SEQUENCE %0, %subreg.sub_mod, %1, %subreg.sub_dim_size, %2, %subreg.sub_dim_stride, %3, %subreg.sub_dim_count
    %30:ep, %31:edc = ST_2D_dmv_sts_q $q3, %4, %10
...

---
name:            test_st_3d_q
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $q3
    ; CHECK-LABEL: name: test_st_3d_q
    ; CHECK: liveins: $r0, $r1, $r2, $r3, $p0, $m0, $s0, $s1, $s2, $s3, $q3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:eds = COPY $d0_3d
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:eds = COPY [[COPY1]]
    ; CHECK-NEXT: %2:ep, [[COPY2]].sub_dim_count:eds, [[COPY2]].sub_hi_dim_then_sub_dim_count:eds = ST_3D_dmv_sts_q $q3, [[COPY]], [[COPY2]]
    %0:ep = COPY $p0
    %10:eds = COPY $d0_3d
    %30:ep, %31:edc, %32:edc = ST_3D_dmv_sts_q $q3, %0, %10
...
