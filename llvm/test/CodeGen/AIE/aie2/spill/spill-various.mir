# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -run-pass=regallocfast -run-pass=prologepilog %s -o - | FileCheck %s
---
name:            test
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $r0, $p1, $m2, $dj3, $dn4, $dc5

    ; CHECK-LABEL: name: test
    ; CHECK: liveins: $r0, $p1, $m2, $dj3, $dn4, $dc5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: frame-setup PADD_sp_imm_pseudo 32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: ST_dms_spill killed $lr, -32, implicit $sp :: (store (s32) into %stack.6)
    ; CHECK-NEXT: ST_dms_spill $r0, -28, implicit $sp :: (store (s32) into %stack.0)
    ; CHECK-NEXT: ST_dms_spill $p1, -24, implicit $sp :: (store (s32) into %stack.1)
    ; CHECK-NEXT: ST_dms_spill $m2, -20, implicit $sp :: (store (s32) into %stack.2)
    ; CHECK-NEXT: ST_dms_spill $dj3, -16, implicit $sp :: (store (s32) into %stack.3)
    ; CHECK-NEXT: ST_dms_spill $dn4, -12, implicit $sp :: (store (s32) into %stack.4)
    ; CHECK-NEXT: ST_dms_spill $dc5, -8, implicit $sp :: (store (s32) into %stack.5)
    ; CHECK-NEXT: JL 32, csr_aie2, implicit-def $lr
    ; CHECK-NEXT: $dc5 = LDA_dms_spill -8, implicit $sp :: (load (s32) from %stack.5)
    ; CHECK-NEXT: $dn4 = LDA_dms_spill -12, implicit $sp :: (load (s32) from %stack.4)
    ; CHECK-NEXT: $dj3 = LDA_dms_spill -16, implicit $sp :: (load (s32) from %stack.3)
    ; CHECK-NEXT: $m2 = LDA_dms_spill -20, implicit $sp :: (load (s32) from %stack.2)
    ; CHECK-NEXT: $p1 = LDA_dms_spill -24, implicit $sp :: (load (s32) from %stack.1)
    ; CHECK-NEXT: $r0 = LDA_dms_spill -28, implicit $sp :: (load (s32) from %stack.0)
    ; CHECK-NEXT: $lr = LDA_dms_spill -32, implicit $sp :: (load (s32) from %stack.6)
    ; CHECK-NEXT: frame-destroy PADD_sp_imm_pseudo -32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $r0, implicit killed renamable $p1, implicit killed renamable $m2, implicit killed renamable $dj3, implicit killed renamable $dn4, implicit killed renamable $dc5
    %0:er = COPY $r0
    %1:ep = COPY $p1
    %2:em = COPY $m2
    %3:edj = COPY $dj3
    %4:edn = COPY $dn4
    %5:edc = COPY $dc5
    JL 32, csr_aie2, implicit-def $lr
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2, implicit %3, implicit %4, implicit %5
...
