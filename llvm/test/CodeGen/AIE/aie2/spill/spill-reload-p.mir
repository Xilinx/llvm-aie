# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 --verify-machineinstrs -run-pass=greedy -run-pass=virtregrewriter %s -o - | FileCheck %s

# There is only one eP (PTR) register available, it will then be used for the %0
# virtual register. Here we test that it is properly spilled and then reloaded.

---
  name:            test
  alignment:       16
  legalized:       true
  regBankSelected: true
  selected:        true
  tracksRegLiveness: true
  body:             |
    bb.1.entry:
      liveins: $m0, $p0, $p1,$p2,$p3,$p4,$p5,$p6,$p7,$r0,$r1,$r2,$r3,$r4,$r5,$r6,$r7,$r8,$r9,$r10,$r11,$r12,$r13,$r14,$r15,$r16,$r17,$r18,$r19,$r20,$r21,$r22,$r23,$r24,$r25,$r26,$r27,$r28,$r29,$r30,$r31
    ; CHECK-LABEL: name: test
    ; CHECK: liveins: $m0, $p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: renamable $p0 = PADD_mod_pseudo $p0, $m0
    ; CHECK-NEXT: ST_dms_spill killed renamable $p0, %stack.0, implicit $sp :: (store (s32) into %stack.0)
    ; CHECK-NEXT: $p0 = COPY $p1
    ; CHECK-NEXT: ST_dms_sts_idx_imm $p0, $p0, 0, implicit $p0, implicit $p1, implicit $p2, implicit $p3, implicit $p4, implicit $p5, implicit $p6, implicit $p7, implicit $r0, implicit $r1, implicit $r2, implicit $r3, implicit $r4, implicit $r5, implicit $r6, implicit $r7, implicit $r8, implicit $r9, implicit $r10, implicit $r11, implicit $r12, implicit $r13, implicit $r14, implicit $r15, implicit $r16, implicit $r17, implicit $r18, implicit $r19, implicit $r20, implicit $r21, implicit $r22, implicit $r23, implicit $r24, implicit $r25, implicit $r26, implicit $r27, implicit $r28, implicit $r29, implicit $r30, implicit $r31
    ; CHECK-NEXT: renamable $p0 = LDA_dms_spill %stack.0, implicit $sp :: (load (s32) from %stack.0)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r31, implicit killed renamable $p0
      %0:ep = PADD_mod_pseudo $p0, $m0
      $p0 = COPY $p1
      ST_dms_sts_idx_imm $p0, $p0, 0, implicit $p0, implicit $p1,implicit $p2,implicit $p3,implicit $p4,implicit $p5,implicit $p6,implicit $p7, implicit $r0, implicit $r1, implicit $r2, implicit $r3, implicit $r4, implicit $r5, implicit $r6, implicit $r7, implicit $r8, implicit $r9, implicit $r10, implicit $r11, implicit $r12, implicit $r13, implicit $r14, implicit $r15, implicit $r16, implicit $r17, implicit $r18, implicit $r19, implicit $r20, implicit $r21, implicit $r22, implicit $r23, implicit $r24, implicit $r25, implicit $r26, implicit $r27, implicit $r28, implicit $r29, implicit $r30, implicit $r31

      ; reload %0 / $p0 before PseudoRET
      PseudoRET implicit $lr, implicit $r31, implicit %0
...
