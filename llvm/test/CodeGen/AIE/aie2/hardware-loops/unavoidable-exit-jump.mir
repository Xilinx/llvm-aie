# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc -mtriple aie2 -run-pass=block-placement \
# RUN:   %s -verify-machineinstrs -o - | FileCheck %s


# We set up two PseudoLoopEnds competing for a single exit block as successor.
# block placement can only grant one, the other should keep its jump.

---
name:            blockPlacementConflict
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: blockPlacementConflict
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.3(0x40000000)
  ; CHECK-NEXT:   liveins: $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJZ $r0, %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r1, $p0 = LDA_dms_lda_pstm_nrm_imm $p0, 4
  ; CHECK-NEXT:   J_jump_imm %bb.4
  ; CHECK-NEXT:   PseudoLoopEnd <mcsymbol .L_1120>, %bb.2
  ; CHECK-NEXT:   PseudoJ_jump_imm %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   successors: %bb.3(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $p1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r0, $p1 = LDA_dms_lda_pstm_nrm_imm $p1, 4
  ; CHECK-NEXT:   PseudoLoopEnd <mcsymbol .L_1121>, %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.4(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r0 = MOVA_lda_cg 42
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4:
  ; CHECK-NEXT:   liveins: $p1, $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit $r0
  bb.0.entry:
    liveins: $r0
    successors: %bb.2, %bb.3
    PseudoJNZ $r0, %bb.2
    PseudoJ_jump_imm %bb.3

  bb.1:
    $r0 = MOVA_lda_cg 42
    PseudoJ_jump_imm %bb.4

  bb.2:
    successors: %bb.2, %bb.1
    liveins: $p0
    $r1, $p0 = LDA_dms_lda_pstm_nrm_imm $p0, 4
    J_jump_imm %bb.4
    PseudoLoopEnd <mcsymbol .L_1120>, %bb.2
    PseudoJ_jump_imm %bb.1

  bb.3:
    successors: %bb.3, %bb.1
    liveins: $p1
    $r0, $p1 = LDA_dms_lda_pstm_nrm_imm $p1, 4
    PseudoLoopEnd <mcsymbol .L_1121>, %bb.3
    PseudoJ_jump_imm %bb.1

  bb.4:
    liveins: $p1, $r0
    PseudoRET implicit $lr, implicit $r0

...
