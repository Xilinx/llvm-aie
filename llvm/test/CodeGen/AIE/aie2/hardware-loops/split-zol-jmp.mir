# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc -mtriple aie2 -run-pass=aie-hardware-loops %s \
# RUN:    -o - | FileCheck %s

# Check that the bb.1 gets split to provide a fallthrough block to LoopEnd

---
name:            simple_loop
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: simple_loop
  ; CHECK: bb.0.entry (align 16):
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $lc = ADD_NC $r0, 0
  ; CHECK-NEXT:   $ls = MOVXM_lng_cg %bb.1
  ; CHECK-NEXT:   $le = MOVXM_lng_cg <mcsymbol .L_1120>
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.3(0x40000000)
  ; CHECK-NEXT:   liveins: $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r0 = ADD_NC $r0, 0
  ; CHECK-NEXT:   PseudoLoopEnd <mcsymbol .L_1120>, %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJ_jump_imm %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2 (align 16):
  ; CHECK-NEXT:   PseudoRET implicit $lr
  bb.0.entry (align 16):
    successors: %bb.1(0x50000000)
    liveins: $r0
    LoopStart $r0, 0

  bb.1:
    successors: %bb.1, %bb.2
    liveins: $r0
    $r0 = ADD_NC $r0, 0
    PseudoLoopEnd <mcsymbol .L_1120>, %bb.1
    PseudoJ_jump_imm  %bb.2

  bb.2 (align 16):
    PseudoRET implicit $lr

...
