; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 %s -o - | FileCheck %s


define dso_local noundef <64 x i8> @_Z19test_concat_512_256Dv32_DU8_S0_(<32 x i8> noundef %a0, <32 x i8> noundef %a1) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_concat_512_256Dv32_DU8_S0_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov wl0, wl2 // Delay Slot 3
; CHECK-NEXT:    vmov wh0, wl4 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <32 x i8> %a0 to <8 x i32>
  %1 = bitcast <32 x i8> %a1 to <8 x i32>
  %2 = tail call <16 x i32> @llvm.aie2.concat.I512.I256(<8 x i32> %0, <8 x i32> %1)
  %3 = bitcast <16 x i32> %2 to <64 x i8>
  ret <64 x i8> %3
}


define dso_local noundef <128 x i8> @_Z17test_concat_4x256Dv32_DU8_S0_S0_S0_(<32 x i8> noundef %a0, <32 x i8> noundef %a1, <32 x i8> noundef %a2, <32 x i8> noundef %a3) local_unnamed_addr #1 {
; CHECK-LABEL: _Z17test_concat_4x256Dv32_DU8_S0_S0_S0_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    vmov wl4, wl0 // Delay Slot 5
; CHECK-NEXT:    vmov wh4, wl2 // Delay Slot 4
; CHECK-NEXT:    vmov wl5, wl6 // Delay Slot 3
; CHECK-NEXT:    vmov wh5, wl8 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <32 x i8> %a0 to <8 x i32>
  %1 = bitcast <32 x i8> %a1 to <8 x i32>
  %2 = bitcast <32 x i8> %a2 to <8 x i32>
  %3 = bitcast <32 x i8> %a3 to <8 x i32>
  %4 = tail call <32 x i32> @llvm.aie2.concat.I1024.I256(<8 x i32> %0, <8 x i32> %1, <8 x i32> %2, <8 x i32> %3)
  %5 = bitcast <32 x i32> %4 to <128 x i8>
  ret <128 x i8> %5
}


define dso_local noundef <128 x i8> @_Z17test_concat_2x512Dv64_DU8_S0_(<64 x i8> noundef %a0, <64 x i8> noundef %a1) local_unnamed_addr #1 {
; CHECK-LABEL: _Z17test_concat_2x512Dv64_DU8_S0_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov x4, x0 // Delay Slot 3
; CHECK-NEXT:    vmov x5, x2 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <64 x i8> %a0 to <16 x i32>
  %1 = bitcast <64 x i8> %a1 to <16 x i32>
  %2 = tail call <32 x i32> @llvm.aie2.concat.I1024.I512(<16 x i32> %0, <16 x i32> %1)
  %3 = bitcast <32 x i32> %2 to <128 x i8>
  ret <128 x i8> %3
}


define dso_local noundef <8 x i64> @_Z11test_concatDv8_u7__acc32S_(<4 x i64> noundef %a0, <4 x i64> noundef %a1) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_concatDv8_u7__acc32S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov amll0, amll1 // Delay Slot 3
; CHECK-NEXT:    vmov amlh0, amll2 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.concat.512.256.acc(<4 x i64> %a0, <4 x i64> %a1)
  ret <8 x i64> %0
}


define dso_local noundef <16 x i64> @_Z11test_concatDv8_u7__acc32S_S_S_(<4 x i64> noundef %a0, <4 x i64> noundef %a1, <4 x i64> noundef %a2, <4 x i64> noundef %a3) local_unnamed_addr #1 {
; CHECK-LABEL: _Z11test_concatDv8_u7__acc32S_S_S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    vmov amll0, amll1 // Delay Slot 5
; CHECK-NEXT:    vmov amlh0, amll2 // Delay Slot 4
; CHECK-NEXT:    vmov amhl0, amll3 // Delay Slot 3
; CHECK-NEXT:    vmov amhh0, amll4 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i64> @llvm.aie2.concat.1024.256.acc(<4 x i64> %a0, <4 x i64> %a1, <4 x i64> %a2, <4 x i64> %a3)
  ret <16 x i64> %0
}


define dso_local noundef <16 x i64> @_Z11test_concatDv16_u7__acc32S_(<8 x i64> noundef %a0, <8 x i64> noundef %a1) local_unnamed_addr #1 {
; CHECK-LABEL: _Z11test_concatDv16_u7__acc32S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov bml0, bml1 // Delay Slot 3
; CHECK-NEXT:    vmov bmh0, bml2 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i64> @llvm.aie2.concat.1024.512.acc(<8 x i64> %a0, <8 x i64> %a1)
  ret <16 x i64> %0
}


define dso_local noundef <8 x i64> @_Z11test_concatDv4_u7__acc64S_(<4 x i64> noundef %a0, <4 x i64> noundef %a1) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_concatDv4_u7__acc64S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov amll0, amll1 // Delay Slot 3
; CHECK-NEXT:    vmov amlh0, amll2 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.concat.512.256.acc(<4 x i64> %a0, <4 x i64> %a1)
  ret <8 x i64> %0
}


define dso_local noundef <16 x i64> @_Z11test_concatDv8_u7__acc64S_(<8 x i64> noundef %a0, <8 x i64> noundef %a1) local_unnamed_addr #1 {
; CHECK-LABEL: _Z11test_concatDv8_u7__acc64S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    vmov bml0, bml1 // Delay Slot 3
; CHECK-NEXT:    vmov bmh0, bml2 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i64> @llvm.aie2.concat.1024.512.acc(<8 x i64> %a0, <8 x i64> %a1)
  ret <16 x i64> %0
}


define dso_local noundef <16 x i64> @_Z11test_concatDv4_u7__acc64S_S_S_(<4 x i64> noundef %a0, <4 x i64> noundef %a1, <4 x i64> noundef %a2, <4 x i64> noundef %a3) local_unnamed_addr #1 {
; CHECK-LABEL: _Z11test_concatDv4_u7__acc64S_S_S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    vmov amll0, amll1 // Delay Slot 5
; CHECK-NEXT:    vmov amlh0, amll2 // Delay Slot 4
; CHECK-NEXT:    vmov amhl0, amll3 // Delay Slot 3
; CHECK-NEXT:    vmov amhh0, amll4 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i64> @llvm.aie2.concat.1024.256.acc(<4 x i64> %a0, <4 x i64> %a1, <4 x i64> %a2, <4 x i64> %a3)
  ret <16 x i64> %0
}


declare <16 x i32> @llvm.aie2.concat.I512.I256(<8 x i32>, <8 x i32>) #2
declare <32 x i32> @llvm.aie2.concat.I1024.I256(<8 x i32>, <8 x i32>, <8 x i32>, <8 x i32>) #2
declare <32 x i32> @llvm.aie2.concat.I1024.I512(<16 x i32>, <16 x i32>) #2
declare <8 x i64> @llvm.aie2.concat.512.256.acc(<4 x i64>, <4 x i64>) #2
declare <16 x i64> @llvm.aie2.concat.1024.256.acc(<4 x i64>, <4 x i64>, <4 x i64>, <4 x i64>) #2
declare <16 x i64> @llvm.aie2.concat.1024.512.acc(<8 x i64>, <8 x i64>) #2
