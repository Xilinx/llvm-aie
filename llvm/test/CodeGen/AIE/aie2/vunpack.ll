; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 %s -o - | FileCheck %s

define dso_local noundef <32 x i16> @_Z11test_unpackDv32_ab(<32 x i8> noundef %v, i1 noundef zeroext %sign) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_ab:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mov crUnpackSign, r0
; CHECK-NEXT:    vunpack.d16.d8 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crUnpackSign, #0 // Delay Slot 1
entry:
  %conv.i = zext i1 %sign to i32
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I16.I8(<32 x i8> %v, i32 %conv.i)
  ret <32 x i16> %0
}


define dso_local noundef <32 x i16> @_Z11test_unpackDv32_hb(<32 x i8> noundef %v, i1 noundef zeroext %sign) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_hb:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mov crUnpackSign, r0
; CHECK-NEXT:    vunpack.d16.d8 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crUnpackSign, #0 // Delay Slot 1
entry:
  %conv.i = zext i1 %sign to i32
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I16.I8(<32 x i8> %v, i32 %conv.i)
  ret <32 x i16> %0
}


define dso_local noundef <64 x i8> @_Z11test_unpackDv32_DB8_b(<32 x i8> noundef %v, i1 noundef zeroext %sign) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_DB8_b:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mov crUnpackSign, r0
; CHECK-NEXT:    vunpack.d8.d4 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crUnpackSign, #0 // Delay Slot 1
entry:
  %conv.i = zext i1 %sign to i32
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I8.I4(<32 x i8> %v, i32 %conv.i)
  %1 = bitcast <32 x i16> %0 to <64 x i8>
  ret <64 x i8> %1
}


define dso_local noundef <64 x i8> @_Z11test_unpackDv32_DU8_b(<32 x i8> noundef %v, i1 noundef zeroext %sign) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_DU8_b:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mov crUnpackSign, r0
; CHECK-NEXT:    vunpack.d8.d4 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crUnpackSign, #0 // Delay Slot 1
entry:
  %conv.i = zext i1 %sign to i32
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I8.I4(<32 x i8> %v, i32 %conv.i)
  %1 = bitcast <32 x i16> %0 to <64 x i8>
  ret <64 x i8> %1
}


define dso_local noundef <32 x i16> @_Z11test_unpackDv32_a(<32 x i8> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_a:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    vunpack.s16.s8 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I16.I8(<32 x i8> %v, i32 1)
  ret <32 x i16> %0
}


define dso_local noundef <32 x i16> @_Z11test_unpackDv32_h(<32 x i8> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_h:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    vunpack.d16.d8 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I16.I8(<32 x i8> %v, i32 0)
  ret <32 x i16> %0
}


define dso_local noundef <64 x i8> @_Z11test_unpackDv32_DB8_(<32 x i8> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_DB8_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    vunpack.s8.s4 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I8.I4(<32 x i8> %v, i32 1)
  %1 = bitcast <32 x i16> %0 to <64 x i8>
  ret <64 x i8> %1
}


define dso_local noundef <64 x i8> @_Z11test_unpackDv32_DU8_(<32 x i8> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z11test_unpackDv32_DU8_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    vunpack.d8.d4 x0, wl2
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.unpack.I8.I4(<32 x i8> %v, i32 0)
  %1 = bitcast <32 x i16> %0 to <64 x i8>
  ret <64 x i8> %1
}

declare <32 x i16> @llvm.aie2.unpack.I8.I4(<32 x i8>, i32)
declare <32 x i16> @llvm.aie2.unpack.I16.I8(<32 x i8>, i32)
