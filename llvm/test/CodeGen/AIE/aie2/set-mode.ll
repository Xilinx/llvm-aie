; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 %s -o - | FileCheck %s

define dso_local void @_Z16test_set_satmodej(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z16test_set_satmodej:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crSat, r0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 9, i32 %val)
  ret void
}

define dso_local void @_Z12test_set_satv() local_unnamed_addr #0 {
; CHECK-LABEL: _Z12test_set_satv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crSat, #1 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 9, i32 1)
  ret void
}

define dso_local void @_Z15test_set_symsatv() local_unnamed_addr #0 {
; CHECK-LABEL: _Z15test_set_symsatv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crSat, #3 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 9, i32 3)
  ret void
}

define dso_local void @_Z12test_clr_satv() local_unnamed_addr #0 {
; CHECK-LABEL: _Z12test_clr_satv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crSat, #0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 9, i32 0)
  ret void
}

define dso_local void @_Z12test_set_rndj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z12test_set_rndj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crRnd, r0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 6, i32 %val)
  ret void
}

define dso_local void @_Z22test_set_fpmulmac_maskj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z22test_set_fpmulmac_maskj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crFPMask, r0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 3, i32 %val)
  ret void
}

define dso_local void @_Z20test_set_fp2int_maskj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z20test_set_fp2int_maskj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crF2IMask, r0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 2, i32 %val)
  ret void
}

define dso_local void @_Z19test_set_fp2bf_maskj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_set_fp2bf_maskj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov crF2FMask, r0 // Delay Slot 1
entry:
  tail call void @llvm.aie2.set.ctrl.reg(i32 1, i32 %val)
  ret void
}

define dso_local noundef i32 @_Z16test_get_satmodev() local_unnamed_addr #1 {
; CHECK-LABEL: _Z16test_get_satmodev:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crSat // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 9)
  ret i32 %0
}

define dso_local noundef i32 @_Z12test_get_satv() local_unnamed_addr #1 {
; CHECK-LABEL: _Z12test_get_satv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crSat // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 9)
  ret i32 %0
}

define dso_local noundef i32 @_Z12test_get_rndv() local_unnamed_addr #1 {
; CHECK-LABEL: _Z12test_get_rndv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crRnd // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 6)
  ret i32 %0
}

define dso_local noundef i32 @_Z22test_get_fpmulmac_maskv() local_unnamed_addr #1 {
; CHECK-LABEL: _Z22test_get_fpmulmac_maskv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crFPMask // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 3)
  ret i32 %0
}

define dso_local noundef i32 @_Z20test_get_fp2int_maskv() local_unnamed_addr #1 {
; CHECK-LABEL: _Z20test_get_fp2int_maskv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crF2IMask // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 2)
  ret i32 %0
}

define dso_local noundef i32 @_Z19test_get_fp2bf_maskv() local_unnamed_addr #1 {
; CHECK-LABEL: _Z19test_get_fp2bf_maskv:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    mov r0, crF2FMask // Delay Slot 1
entry:
  %0 = tail call i32 @llvm.aie2.get.ctrl.reg(i32 1)
  ret i32 %0
}


declare void @llvm.aie2.set.ctrl.reg(i32, i32) #1
declare i32 @llvm.aie2.get.ctrl.reg(i32) #3
