; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 --issue-limit=1 %s -o - | FileCheck %s


define dso_local void @_Z18test_acquire_equaljj(i32 noundef %id, i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z18test_acquire_equaljj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq r0, r1 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.acquire(i32 %id, i32 %val)
  ret void
}


define dso_local void @_Z25test_acquire_equal_id_immj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z25test_acquire_equal_id_immj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq #1, r0 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.acquire(i32 1, i32 %val)
  ret void
}


define dso_local void @_Z23test_acquire_equal_condjji(i32 noundef %id, i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z23test_acquire_equal_condjji:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopb ; nopa ; nops ; nopx ; mov r26, r2; nopv
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq.cond r0, r1, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.acquire.cond(i32 %id, i32 %val, i32 %cond)
  ret void
}


define dso_local void @_Z30test_acquire_equal_cond_id_immji(i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z30test_acquire_equal_cond_id_immji:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopb ; nopa ; nops ; nopx ; mov r26, r1; nopv
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq.cond #2, r0, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.acquire.cond(i32 2, i32 %val, i32 %cond)
  ret void
}


define dso_local void @_Z26test_acquire_greater_equaljj(i32 noundef %id, i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z26test_acquire_greater_equaljj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r2, #0; nopb ; nopxm
; CHECK-NEXT:    sub r1, r2, r1
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq r0, r1 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %sub.i = sub i32 0, %val
  tail call void @llvm.aie2.acquire(i32 %id, i32 %sub.i)
  ret void
}


define dso_local void @_Z33test_acquire_greater_equal_id_immj(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z33test_acquire_greater_equal_id_immj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r1, #0; nopb ; nopxm
; CHECK-NEXT:    sub r0, r1, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq #3, r0 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %sub.i = sub i32 0, %val
  tail call void @llvm.aie2.acquire(i32 3, i32 %sub.i)
  ret void
}


define dso_local void @_Z31test_acquire_greater_equal_condjji(i32 noundef %id, i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z31test_acquire_greater_equal_condjji:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopx ; mov r26, r2
; CHECK-NEXT:    mova r2, #0
; CHECK-NEXT:    sub r1, r2, r1
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq.cond r0, r1, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %sub.i = sub i32 0, %val
  tail call void @llvm.aie2.acquire.cond(i32 %id, i32 %sub.i, i32 %cond)
  ret void
}


define dso_local void @_Z38test_acquire_greater_equal_cond_id_immji(i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z38test_acquire_greater_equal_cond_id_immji:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopx ; mov r26, r1
; CHECK-NEXT:    mova r1, #0
; CHECK-NEXT:    sub r0, r1, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    acq.cond #22, r0, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %sub.i = sub i32 0, %val
  tail call void @llvm.aie2.acquire.cond(i32 22, i32 %sub.i, i32 %cond)
  ret void
}


define dso_local void @_Z12test_releaseji(i32 noundef %id, i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z12test_releaseji:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    rel r0, r1 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.release(i32 %id, i32 %val)
  ret void
}


define dso_local void @_Z19test_release_id_immi(i32 noundef %val) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_release_id_immi:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    rel #28, r0 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.release(i32 28, i32 %val)
  ret void
}


define dso_local void @_Z17test_release_condjii(i32 noundef %id, i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z17test_release_condjii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopb ; nopa ; nops ; nopx ; mov r26, r2; nopv
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    rel.cond r0, r1, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.release.cond(i32 %id, i32 %val, i32 %cond)
  ret void
}


define dso_local void @_Z24test_release_cond_id_immii(i32 noundef %val, i32 noundef %cond) local_unnamed_addr #0 {
; CHECK-LABEL: _Z24test_release_cond_id_immii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopb ; nopa ; nops ; nopx ; mov r26, r1; nopv
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    rel.cond #61, r0, r26 // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  tail call void @llvm.aie2.release.cond(i32 61, i32 %val, i32 %cond)
  ret void
}


declare void @llvm.aie2.acquire(i32, i32) #1


declare void @llvm.aie2.acquire.cond(i32, i32, i32) #1


declare void @llvm.aie2.release(i32, i32) #1


declare void @llvm.aie2.release.cond(i32, i32, i32) #1
