; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 --issue-limit=1 %s -o - | FileCheck %s

define dso_local noundef <8 x i32> @_Z8test_andbDv8_iS_(i1 noundef zeroext %sel, <8 x i32> noundef %a, <8 x i32> noundef %b) local_unnamed_addr #0 {
; CHECK-LABEL: _Z8test_andbDv8_iS_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm ; nops
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    mov r1, r16 // Delay Slot 4
; CHECK-NEXT:    add r16, r0, #-1 // Delay Slot 3
; CHECK-NEXT:    vsel.32 x0, x4, x2, r16 // Delay Slot 2
; CHECK-NEXT:    mov r16, r1 // Delay Slot 1
entry:
  %cond = select i1 %sel, <8 x i32> %b, <8 x i32> %a
  ret <8 x i32> %cond
}

define dso_local noundef <16 x i32> @_Z8test_andbDv16_iS_(i1 noundef zeroext %sel, <16 x i32> noundef %a, <16 x i32> noundef %b) local_unnamed_addr #0 {
; CHECK-LABEL: _Z8test_andbDv16_iS_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm ; nops
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    mov r1, r16 // Delay Slot 4
; CHECK-NEXT:    add r16, r0, #-1 // Delay Slot 3
; CHECK-NEXT:    vsel.32 x0, x2, x4, r16 // Delay Slot 2
; CHECK-NEXT:    mov r16, r1 // Delay Slot 1
entry:
  %cond = select i1 %sel, <16 x i32> %a, <16 x i32> %b
  ret <16 x i32> %cond
}

define dso_local noundef <32 x i32> @_Z8test_andbDv32_iS_(i1 noundef zeroext %sel, <32 x i32> noundef %a, <32 x i32> noundef %b) local_unnamed_addr #0 {
; CHECK-LABEL: _Z8test_andbDv32_iS_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm
; CHECK-NEXT:    mov r1, r16 // Delay Slot 5
; CHECK-NEXT:    add r16, r0, #-1 // Delay Slot 4
; CHECK-NEXT:    vsel.32 x5, x7, x9, r16 // Delay Slot 3
; CHECK-NEXT:    vsel.32 x4, x6, x8, r16 // Delay Slot 2
; CHECK-NEXT:    mov r16, r1 // Delay Slot 1
entry:
  %cond = select i1 %sel, <32 x i32> %a, <32 x i32> %b
  ret <32 x i32> %cond
}
