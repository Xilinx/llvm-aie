; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 %s -o - | FileCheck %s

define dso_local noundef <32 x i16> @_Z12test_shuffleDv32_sS_j(<32 x i16> noundef %a, <32 x i16> noundef %b, i32 noundef %mode) local_unnamed_addr #0 {
; CHECK-LABEL: _Z12test_shuffleDv32_sS_j:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vshuffle x0, x2, x4, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = bitcast <32 x i16> %a to <16 x i32>
  %1 = bitcast <32 x i16> %b to <16 x i32>
  %2 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %0, <16 x i32> %1, i32 %mode)
  %3 = bitcast <16 x i32> %2 to <32 x i16>
  ret <32 x i16> %3
}

define dso_local noundef <8 x i64> @_Z18test_shuffle_acc64Dv16_iS_j(<16 x i32> noundef %a, <16 x i32> noundef %b, i32 noundef %mode) local_unnamed_addr #0 {
; CHECK-LABEL: _Z18test_shuffle_acc64Dv16_iS_j:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vshuffle bml0, x0, x2, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %a, <16 x i32> %b, i32 %mode)
  %1 = bitcast <16 x i32> %0 to <8 x i64>
  ret <8 x i64> %1
}

declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #1
