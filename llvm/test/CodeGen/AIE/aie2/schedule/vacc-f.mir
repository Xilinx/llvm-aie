# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %s -o - | FileCheck %s

# NOTE: Accumulator inputs are read in E3, and ouput is written in E6
# VADDMAC.f writes in E6, so its output can be read in E6.
# Given VADD_F reads in E3, given this scheduler needs to insert 3 NOPs.
---
name:            vadd_f_sched
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vadd_f_sched
    ; CHECK: $bml2 = VADDMAC_F_vmac_bm_core_dense killed $bml2, killed $bml3, killed $x3, killed $x4, $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $bml0 = VADD_F killed $bml1, killed $bml2, killed $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bml2 = VADDMAC_F_vmac_bm_core_dense $bml2, $bml3, $x3, $x4, $r5, implicit-def $srfpflags, implicit $crfpmask
    $bml0 = VADD_F $bml1, $bml2, $r5, implicit-def $srfpflags, implicit $crfpmask
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            vsub_f_sched
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vsub_f_sched
    ; CHECK: $bml0 = VSUB_F killed $bml1, killed $bml2, killed $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bml0 = VSUB_F $bml1, $bml2, $r5, implicit-def $srfpflags, implicit $crfpmask
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            vnegadd_f_sched
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vnegadd_f_sched
    ; CHECK: $r5 = OR killed $r1, killed $r5
    ; CHECK-NEXT: $bml0 = VNEGADD_F killed $bml1, killed $bml2, killed $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $r5 = OR $r1, $r5
    $bml0 = VNEGADD_F $bml1, $bml2, $r5, implicit-def $srfpflags, implicit $crfpmask
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            vnegsub_f_sched
alignment:       16
body:             |
  bb.0.entry:

    ; CHECK-LABEL: name: vnegsub_f_sched
    ; CHECK: $bml1 = VADDMAC_F_vmac_bm_core_dense killed $bml1, $bml2, killed $x3, killed $x4, $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $bml0 = VNEGSUB_F killed $bml1, killed $bml2, killed $r5, implicit-def $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bml1 = VADDMAC_F_vmac_bm_core_dense $bml1, $bml2, $x3, $x4, $r5, implicit-def $srfpflags, implicit $crfpmask
    $bml0 = VNEGSUB_F $bml1, $bml2, $r5, implicit-def $srfpflags, implicit $crfpmask
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...
