# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 --issue-limit=8 -run-pass=postmisched %s -o - | FileCheck %s

# VLIW scheduling didn't account for instructions already emitted in the
# current cycle when filling out with nops.
# This test checks that bundling is active and that there is no nop
# between the LT and the JNZ
# On the other hand, we do need a nop after the multiplication

---
name:            f
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: f
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r1 = MOVA_lda_cg 1
  ; CHECK-NEXT:   $r3 = OR $r0, $r1
  ; CHECK-NEXT:   $r0 = LT killed $r0, $r1
  ; CHECK-NEXT:   JNZ killed renamable $r0, %bb.2
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r13 = MOVXM_lng_cg 12345
  ; CHECK-NEXT:   $r2 = MOVA_lda_cg 2
  ; CHECK-NEXT:   DelayedSchedBarrier
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT:   liveins: $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r13 = MOVA_lda_cg 3 {
  ; CHECK-NEXT:     $r1 = MUL_mul_r_rr killed $r2, $r2
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   liveins: $r1, $r3, $r13
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   RET implicit $lr
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r0 = AND $r1, killed $r3
  ; CHECK-NEXT:   $r0 = AND killed $r1, killed $r13
  ; CHECK-NEXT:   DelayedSchedBarrier implicit killed $r0
  bb.0:
    liveins: $r0
    $r1 = MOVA_lda_cg 1
    $r13 = MOVXM_lng_cg 12345
    $r2 = MOVA_lda_cg 2
    $r3 = OR $r0, $r1
    $r0 = LT $r0, $r1
    JNZ killed renamable $r0, %bb.2
    DelayedSchedBarrier

  bb.1:
    liveins: $r2
    $r13 = MOVA_lda_cg 3
    $r1 = MUL_mul_r_rr $r2, $r2

  bb.2:
    liveins: $r1, $r3, $r13
    $r0 = AND $r1, $r3
    $r0 = AND $r1, $r13

    RET implicit $lr
    DelayedSchedBarrier implicit $r0

...
