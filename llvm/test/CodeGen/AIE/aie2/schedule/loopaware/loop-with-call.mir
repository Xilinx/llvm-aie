# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 --run-pass=postmisched \
# RUN:     %s -o - | FileCheck %s

# A loop with a call forces a multi-region loop
# The latency should still fit
# The LDA can float to the last delay slot of JNZ, but should maintain
# distance to the OR instruction that in turn should keep its distance
# from the call barrier

---
name:            callLoop
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: callLoop
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   JL 347, implicit-def $lr
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r1 = OR killed $r1, killed $r2
  ; CHECK-NEXT:   $r1 = AND killed $r1, $r1
  ; CHECK-NEXT:   DelayedSchedBarrier implicit $r1
  ; CHECK-NEXT:   $r0 = ADD_add_r_ri killed $r0, -1, implicit-def $srcarry
  ; CHECK-NEXT:   JNZ $r0, %bb.1
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r2 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   DelayedSchedBarrier
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r2 = OR killed $r1, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   liveins: $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   RET implicit $lr
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   DelayedSchedBarrier implicit killed $r2
  bb.0:
    liveins: $p0, $r0, $r1, $r2
    successors: %bb.1
  bb.1:
    liveins: $p0, $r0, $r1, $r2
    successors: %bb.1, %bb.2
    $r1 = OR $r1, $r2
    $r1 = AND $r1, $r1
    JL  347, implicit-def $lr
    DelayedSchedBarrier implicit $r1
    $r0 = ADD_add_r_ri $r0, -1, implicit-def $srcarry
    $r2 = LDA_dms_lda_idx_imm $p0, 0
    JNZ $r0, %bb.1
    DelayedSchedBarrier
  bb.2:
    liveins: $r1, $r2
    successors: %bb.3
    $r2 = OR $r1, $r1
  bb.3:
    liveins: $r2
    RET implicit $lr
    DelayedSchedBarrier implicit $r2
...

