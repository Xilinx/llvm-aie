# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 --run-pass=postmisched \
# RUN:     %s -o - | FileCheck %s

# Check that loop-aware scheduling converges properly
# Note: Comments sometimes refer to cycles. The first cycle is cycle 0

---
name:            singleSuccLoopPreheader
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: singleSuccLoopPreheader
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $r0, $r1, $r2, $cm0, $cm1, $cm2, $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r10 = OR $r0, $r1
  ; CHECK-NEXT:   $r3 = OR killed $r10, $r2
  ; CHECK-NEXT:   $cm3 = VMOV_mv_cm $cm1 {
  ; CHECK-NEXT:     $cm2 = VADD $cm0, $cm1, killed $r3
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   PseudoLoopEnd %bb.1, %bb.2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   liveins: $r0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   RET implicit $lr
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   DelayedSchedBarrier implicit killed $r0
  bb.0:
    successors: %bb.1
  bb.1:
    successors: %bb.1, %bb.2
    liveins: $r0, $r1, $r2, $cm0, $cm1, $cm2, $r0
    $cm3 = VMOV_mv_cm $cm1
    $r10 = OR $r0, $r1
    $r3 = OR $r10, $r2
    $cm2 = VADD $cm0, $cm1, $r3
    PseudoLoopEnd %bb.1, %bb.2

  bb.2:
    liveins: $r0
    RET implicit $lr
    DelayedSchedBarrier implicit $r0
...
