# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 --run-pass=postmisched \
# RUN:     %s -o - | FileCheck %s

# Simulate a hardware loop that would fit in two cycles.
# Currently an extra nop is inserted because the ST instruction
# gets the same latency to ExitSU as the MUL.
# fixpoint iterates to LM=2 because of the MUL true dep
# to the ADD, pushing both MUL and ST up.
# The latency of ST to ExitSU originates from the
# 'IncludeStages' in maxLatency. We may want to revisit that
# later.

---
name:            shortHWLoop
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: shortHWLoop
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; CHECK-NEXT:   liveins: $p0, $r0, $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   BUNDLE implicit-def $r1, implicit-def $r0, implicit killed $r1 {
  ; CHECK-NEXT:     $r1 = MUL_mul_r_rr killed $r1, $r1
  ; CHECK-NEXT:     $r0 = ADD_NC_GPR internal $r1, 1
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   $p0 = ST_dms_sts_pstm_nrm_imm $r0, killed $p0, 4
  ; CHECK-NEXT:   PseudoLoopEnd %bb.2, %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $r1, $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r2 = OR killed $r1, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   liveins: $r2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   RET implicit $lr
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   DelayedSchedBarrier implicit killed $r2
  bb.0:
    liveins: $p0, $r0, $r1, $r2
    successors: %bb.1
  bb.1:
    liveins: $p0, $r0, $r1, $r2
    successors: %bb.1, %bb.2
    $r0 = ADD_NC_GPR $r1, 1
    $p0 = ST_dms_sts_pstm_nrm_imm $r0, $p0, 4
    $r1 = MUL_mul_r_rr $r1, $r1
    PseudoLoopEnd %bb.2, %bb.1
  bb.2:
    liveins: $r1, $r2
    successors: %bb.3
    $r2 = OR $r1, $r1
  bb.3:
    liveins: $r2
    RET implicit $lr
    DelayedSchedBarrier implicit $r2
...

