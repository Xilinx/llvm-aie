# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 --run-pass=postmisched --aie-interblock-scoreboard=0 \
# RUN:  %s -o - | FileCheck %s --check-prefix=NO-LOOPAWARE-SCOREBOARD
# RUN: llc --mtriple=aie2 --run-pass=postmisched --aie-interblock-scoreboard=1 \
# RUN:  %s -o - | FileCheck %s --check-prefix=LOOPAWARE-SCOREBOARD

# Currently, the loop-aware scheduler only allows resources/FuncUnits to stick
# out of the loop into the next iteration. It does not allow them to stick out
# for more than one iteration.

# This test here shows potential issues with epilogue scheduling if we were to
# change the requirements stated above. In the NO-LOOPAWARE-SCOREBOARD checks,
# we show that resource conflicts between the loop and the epilogue are not
# correctly avoided for tiny loops. I.e. loops with less than
# getConflictHorizon() cycles.


# In the epilogue, CM_WM_PORT is booked by VLDA in cycle 6.
# As the loop will potentially execute multiple times, its VLDA_UPS instruction
# can then book CM_WM_PORT in cycle 7,6,5,4,3,2,1,0 of the epilogue.
# There should then be two NOPs between the loop and the epilogue.
---
name:            epilogue_c6_blocked
alignment:       16
tracksRegLiveness: true
body:             |
  ; NO-LOOPAWARE-SCOREBOARD-LABEL: name: epilogue_c6_blocked
  ; NO-LOOPAWARE-SCOREBOARD: bb.0:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x80000000)
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: bb.1:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   liveins: $s1, $p2
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, killed $p2, 32, implicit-def $srups_of, implicit $crsat
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   PseudoLoopEnd %bb.2, %bb.1
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: bb.2:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   liveins: $p2, $s2
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $amlh5, $p2 = VLDA_dmw_lda_am_ag_pstm_nrm_imm killed $p2, 2016
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   RET implicit $lr
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs killed $cm5, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   DelayedSchedBarrier implicit killed $wl4
  ;
  ; LOOPAWARE-SCOREBOARD-LABEL: name: epilogue_c6_blocked
  ; LOOPAWARE-SCOREBOARD: bb.0:
  ; LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x80000000)
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT: bb.1:
  ; LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; LOOPAWARE-SCOREBOARD-NEXT:   liveins: $s1, $p2
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT:   $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, killed $p2, 32, implicit-def $srups_of, implicit $crsat
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   PseudoLoopEnd %bb.2, %bb.1
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT: bb.2:
  ; LOOPAWARE-SCOREBOARD-NEXT:   liveins: $p2, $s2
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT:   $amlh5, $p2 = VLDA_dmw_lda_am_ag_pstm_nrm_imm killed $p2, 2016
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   RET implicit $lr
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs killed $cm5, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   DelayedSchedBarrier implicit killed $wl4
  bb.0:
    successors: %bb.1
  bb.1:
    successors: %bb.1, %bb.2
    liveins: $s1, $p2
    $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, $p2, 32, implicit-def $srups_of, implicit $crsat
    PseudoLoopEnd %bb.2, %bb.1

  bb.2:
    liveins: $p2, $s2
    $amlh5, $p2 = VLDA_dmw_lda_am_ag_pstm_nrm_imm $p2, 2016
    $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    RET implicit $lr
    DelayedSchedBarrier implicit $wl4
...

# In the epilogue, CM_WM_PORT is booked by VMOV in cycle 1.
# As the loop will potentially execute multiple times, its VLDA_UPS instruction
# can then book CM_WM_PORT in cycle 7,6,5,4,3,2,1,0 of the epilogue.
# There should then be seven NOPs between the loop and the epilogue.
---
name:            epilogue_c1_blocked
alignment:       16
tracksRegLiveness: true
body:             |
  ; NO-LOOPAWARE-SCOREBOARD-LABEL: name: epilogue_c1_blocked
  ; NO-LOOPAWARE-SCOREBOARD: bb.0:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x80000000)
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: bb.1:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   liveins: $s1, $p2
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, killed $p2, 32, implicit-def $srups_of, implicit $crsat
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   PseudoLoopEnd %bb.2, %bb.1
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: bb.2:
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   liveins: $cm6, $s2
  ; NO-LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $cm5 = VMOV_mv_cm killed $cm6
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   BUNDLE implicit-def $wl4, implicit-def $srsrs_of, implicit $cm5, implicit $s2, implicit $crsat, implicit $crrnd, implicit $lr {
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:     $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:     RET implicit $lr
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   }
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs killed $cm5, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; NO-LOOPAWARE-SCOREBOARD-NEXT:   DelayedSchedBarrier implicit killed $wl4
  ;
  ; LOOPAWARE-SCOREBOARD-LABEL: name: epilogue_c1_blocked
  ; LOOPAWARE-SCOREBOARD: bb.0:
  ; LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x80000000)
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT: bb.1:
  ; LOOPAWARE-SCOREBOARD-NEXT:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; LOOPAWARE-SCOREBOARD-NEXT:   liveins: $s1, $p2
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT:   $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, killed $p2, 32, implicit-def $srups_of, implicit $crsat
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   PseudoLoopEnd %bb.2, %bb.1
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT: bb.2:
  ; LOOPAWARE-SCOREBOARD-NEXT:   liveins: $cm6, $s2
  ; LOOPAWARE-SCOREBOARD-NEXT: {{  $}}
  ; LOOPAWARE-SCOREBOARD-NEXT:   $cm5 = VMOV_mv_cm killed $cm6
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   BUNDLE implicit-def $wl4, implicit-def $srsrs_of, implicit $cm5, implicit $s2, implicit $crsat, implicit $crrnd, implicit $lr {
  ; LOOPAWARE-SCOREBOARD-NEXT:     $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; LOOPAWARE-SCOREBOARD-NEXT:     RET implicit $lr
  ; LOOPAWARE-SCOREBOARD-NEXT:   }
  ; LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; LOOPAWARE-SCOREBOARD-NEXT:   $wl4 = VSRS_S8_S32_mv_w_srs killed $cm5, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   NOP
  ; LOOPAWARE-SCOREBOARD-NEXT:   DelayedSchedBarrier implicit killed $wl4
  bb.0:
    successors: %bb.1
  bb.1:
    successors: %bb.1, %bb.2
    liveins: $s1, $p2
    $cm2, $p2 = VLDA_UPS_S32_S8_ag_pstm_nrm_imm $s1, $p2, 32, implicit-def $srups_of, implicit $crsat
    PseudoLoopEnd %bb.2, %bb.1

  bb.2:
    liveins: $cm6, $s2
    $cm5 = VMOV_mv_cm $cm6
    $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $wl4 = VSRS_S8_S32_mv_w_srs $cm5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    RET implicit $lr
    DelayedSchedBarrier implicit $wl4
...


