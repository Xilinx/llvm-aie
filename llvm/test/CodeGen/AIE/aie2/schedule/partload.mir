# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2  -run-pass=postmisched %s -o - | FileCheck %s
---
name:            mix
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: mix
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6 = LDA_S8_ag_idx_imm $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = ADD killed $r6, $r6, implicit-def $srcarry
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6 = LDA_S8_ag_idx_imm $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDu16 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6 = LDA_U8_ag_idx_imm $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDs16 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   successors: %bb.4(0x80000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6 = LDA_S16_ag_idx_imm $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDu8 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4:
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6 = LDA_U16_ag_idx_imm killed $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDs8 killed $r6
  bb.0.entry:
    liveins: $p0
    $r6 = LDA_S8_ag_idx_imm $p0, 0
    $r7 = ADD $r6, $r6, implicit-def $srcarry
  bb.1:
    liveins: $p0
    $r6 = LDA_S8_ag_idx_imm $p0, 0
    $r7 = EXTENDu16 $r6
  bb.2:
    liveins: $p0
    $r6 = LDA_U8_ag_idx_imm $p0, 0
    $r7 = EXTENDs16 $r6
  bb.3:
    liveins: $p0
    $r6 = LDA_S16_ag_idx_imm $p0, 0
    $r7 = EXTENDu8 $r6
  bb.4:
    liveins: $p0
    $r6 = LDA_U16_ag_idx_imm $p0, 0
    $r7 = EXTENDs8 $r6
...


---
name:            mix_postinc
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: mix_postinc
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $p0
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6, $p0 = LDA_S8_ag_pstm_nrm_imm killed $p0, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = ADD killed $r6, $r6, implicit-def $srcarry
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.2(0x80000000)
  ; CHECK-NEXT:   liveins: $p1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6, $p1 = LDA_S8_ag_pstm_nrm_imm killed $p1, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDu16 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $p2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6, $p2 = LDA_U8_ag_pstm_nrm_imm killed $p2, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDs16 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3:
  ; CHECK-NEXT:   successors: %bb.4(0x80000000)
  ; CHECK-NEXT:   liveins: $p3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6, $p3 = LDA_S16_ag_pstm_nrm_imm killed $p3, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDu8 killed $r6
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4:
  ; CHECK-NEXT:   liveins: $p4
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r6, $p4 = LDA_U16_ag_pstm_nrm_imm killed $p4, 0
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   $r7 = EXTENDs8 killed $r6
  bb.0.entry:
    liveins: $p0
    $r6, $p0 = LDA_S8_ag_pstm_nrm_imm $p0, 0
    $r7 = ADD $r6, $r6, implicit-def $srcarry
  bb.1:
    liveins: $p1
    $r6, $p1 = LDA_S8_ag_pstm_nrm_imm $p1, 0
    $r7 = EXTENDu16 $r6
  bb.2:
    liveins: $p2
    $r6, $p2 = LDA_U8_ag_pstm_nrm_imm $p2, 0
    $r7 = EXTENDs16 $r6
  bb.3:
    liveins: $p3
    $r6, $p3 = LDA_S16_ag_pstm_nrm_imm $p3, 0
    $r7 = EXTENDu8 $r6
  bb.4:
    liveins: $p4
    $r6, $p4 = LDA_U16_ag_pstm_nrm_imm $p4, 0
    $r7 = EXTENDs8 $r6
...
