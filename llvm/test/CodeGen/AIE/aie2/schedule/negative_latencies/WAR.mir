# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -run-pass=postmisched --issue-limit=2 %s -o - | FileCheck %s

---
name:            read_E1_write_E7
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: read_E1_write_E7
    ; CHECK: ST_dms_sts_idx_imm killed $r6, killed $p0, 20
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ST_dms_sts_idx_imm $r6, $p0, 20
    $r6 = LDA_dms_lda_idx_imm $p1, 4
...

---
name:            read_E1_write_E7_multi
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: read_E1_write_E7_multi
    ; CHECK: ST_dms_sts_idx_imm killed $r6, killed $p0, 20
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm $p1, 0
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ST_dms_sts_idx_imm $r6, $p0, 20
    $r6 = LDA_dms_lda_idx_imm $p1, 0
    $r6 = LDA_dms_lda_idx_imm $p1, 4
...

---
name:            read_E1_write_E5
alignment:       16
body:             |
  bb.0.entry:
    liveins: $p0
    ; CHECK-LABEL: name: read_E1_write_E5
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0 {
    ; CHECK-NEXT:   $cm0 = VMAC_vmac_cm_core_dense killed $cm2, killed $x2, killed $x3, killed $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
    $cm0 = VMAC_vmac_cm_core_dense $cm2, $x2, $x3, $r1
...

---
name:            read_E1_write_E2
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: read_E1_write_E2
    ; CHECK: ST_dms_sts_idx_imm $r6, $p0, 4 {
    ; CHECK-NEXT:   $r6 = VEXTRACT_S32 killed $x2, killed $r16
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ST_dms_sts_idx_imm $r6, $p0, 4
    $r6 = VEXTRACT_S32 $x2,  $r16
...
