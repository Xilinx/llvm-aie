# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -enable-misched -run-pass=machine-scheduler --aie-prera-cycle-separators %s -o - --issue-limit=6 | FileCheck %s

# Verify multi-slot instructions can also be interleaved in pre-RA sched.

---
name: mix
tracksRegLiveness: true
body: |
  bb.0.entry:
  liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-LABEL: name: mix
    ; CHECK: liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: dead [[COPY:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], $m1
    ; CHECK-NEXT: dead [[COPY1:%[0-9]+]]:ep = PADDA_lda_ptr_inc_idx [[COPY1]], $m1
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: dead [[COPY2:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY2]], $m1
    ; CHECK-NEXT: dead [[COPY3:%[0-9]+]]:ep = PADDA_lda_ptr_inc_idx [[COPY3]], $m1
    ; CHECK-NEXT: CYCLE_SEPARATOR
    %100:ep = COPY $p0
    %101:ep = COPY $p0
    %102:ep = COPY $p0
    %103:ep = COPY $p0
    %100 = PADD_mod_pseudo %100, $m1
    %101 = PADD_mod_pseudo %101, $m1
    %102 = PADDA_lda_ptr_inc_idx %102, $m1
    %103 = PADDA_lda_ptr_inc_idx %103, $m1
...

# MOVA/MOV/MOVXM conservatively book the P_WM port in E1, if we account for
# scoreboard conflicts, only one MOV_RLC_imm10_pseudo can be interleaved with
# the MOVAs.
---
name: MOVs_A_slot_taken
tracksRegLiveness: true
body: |
  bb.0.entry:
  liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-LABEL: name: MOVs_A_slot_taken
    ; CHECK: liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead [[MOVA_lda_cg:%[0-9]+]]:er = MOVA_lda_cg 1
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 1
    ; CHECK-NEXT: dead [[MOVA_lda_cg1:%[0-9]+]]:er = MOVA_lda_cg 2
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo1:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 2
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo2:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 3
    ; CHECK-NEXT: dead [[MOVA_lda_cg2:%[0-9]+]]:er = MOVA_lda_cg 3
    ; CHECK-NEXT: CYCLE_SEPARATOR
    %0:er = MOV_RLC_imm10_pseudo 1
    %1:er = MOV_RLC_imm10_pseudo 2
    %2:er = MOV_RLC_imm10_pseudo 3
    %10:er = MOVA_lda_cg 1
    %11:er = MOVA_lda_cg 2
    %12:er = MOVA_lda_cg 3
...

---
name: MOVs_M_slot_taken
tracksRegLiveness: true
body: |
  bb.0.entry:
  liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-LABEL: name: MOVs_M_slot_taken
    ; CHECK: liveins: $p0, $p1, $m1, $r1, $s1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead [[MOV_mv_cg:%[0-9]+]]:er = MOV_mv_cg 1
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 1
    ; CHECK-NEXT: dead [[MOV_mv_cg1:%[0-9]+]]:er = MOV_mv_cg 2
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo1:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 2
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo2:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 3
    ; CHECK-NEXT: dead [[MOV_mv_cg2:%[0-9]+]]:er = MOV_mv_cg 3
    ; CHECK-NEXT: CYCLE_SEPARATOR
    %0:er = MOV_RLC_imm10_pseudo 1
    %1:er = MOV_RLC_imm10_pseudo 2
    %2:er = MOV_RLC_imm10_pseudo 3
    %10:er = MOV_mv_cg 1
    %11:er = MOV_mv_cg 2
    %12:er = MOV_mv_cg 3
...

---
name: R_WM_PORT_taken
tracksRegLiveness: true
body: |
  bb.0.entry:
  liveins: $x4, $r19
    ; CHECK-LABEL: name: R_WM_PORT_taken
    ; CHECK: liveins: $x4, $r19
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: dead [[VEXTRACT_S32_:%[0-9]+]]:er = VEXTRACT_S32 $x4, $r19
    ; CHECK-NEXT: CYCLE_SEPARATOR
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 2
    ; CHECK-NEXT: dead [[MOV_RLC_imm10_pseudo1:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 3
    ; CHECK-NEXT: CYCLE_SEPARATOR
    %0:er = VEXTRACT_S32 $x4, $r19
    %1:er = MOV_RLC_imm10_pseudo 2
    %2:er = MOV_RLC_imm10_pseudo 3
...
