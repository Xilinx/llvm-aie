# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -enable-misched -run-pass=machine-scheduler %s -o - | FileCheck %s

# Make sure pre-RA scheduling does not re-order instructions connected by edges
# with negative latencies

# Negative RAW
---
name:            write_E1_read_E7
tracksRegLiveness: true
alignment:       16
body:             |
  bb.0.entry:
    liveins: $r0, $p0
    ; CHECK-LABEL: name: write_E1_read_E7
    ; CHECK: liveins: $r0, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[MOVXM_lng_cg:%[0-9]+]]:er = MOVXM_lng_cg 0
    ; CHECK-NEXT: ST_S16_ag_idx_imm [[MOVXM_lng_cg]], $p0, 2
    %0:er = MOVXM_lng_cg 0
    ST_S16_ag_idx_imm %0, $p0, 2
...

# Negative WAR
---
name:            read_E1_write_E7
tracksRegLiveness: true
alignment:       16
body:             |
  bb.0.entry:
    liveins: $r0, $p0, $p1
    ; CHECK-LABEL: name: read_E1_write_E7
    ; CHECK: liveins: $r0, $p0, $p1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: ST_dms_sts_idx_imm [[COPY]], $p0, 20
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = LDA_dms_lda_idx_imm $p1, 4
    ; CHECK-NEXT: $r0 = COPY [[COPY]]
    %0:er = COPY $r0
    ST_dms_sts_idx_imm %0, $p0, 20
    %0 = LDA_dms_lda_idx_imm $p1, 4
    $r0 = COPY %0
...

# Negative WAW
---
name:            write_E1_write_E7
tracksRegLiveness: true
alignment:       16
body:             |
  bb.0.entry:
    liveins: $p0
    ; CHECK-LABEL: name: write_E1_write_E7
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[MOVXM_lng_cg:%[0-9]+]]:er = MOVXM_lng_cg 0
    ; CHECK-NEXT: ST_dms_sts_idx_imm [[MOVXM_lng_cg]], $p0, 20
    ; CHECK-NEXT: [[MOVXM_lng_cg:%[0-9]+]]:er = LDA_dms_lda_idx_imm $p0, 4
    ; CHECK-NEXT: $r0 = COPY [[MOVXM_lng_cg]]
    %0:er = MOVXM_lng_cg 0
    ST_dms_sts_idx_imm %0, $p0, 20
    %0:er = LDA_dms_lda_idx_imm $p0, 4
    $r0 = COPY %0
...
