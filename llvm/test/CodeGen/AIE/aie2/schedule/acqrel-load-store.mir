# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 --issue-limit=6 -run-pass=postmisched %s -o - \
# RUN:   | FileCheck %s

---
name:            acq_vs_load
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: acq_vs_load
    ; CHECK: $r6 = LDA_dms_lda_idx_imm $p1, 4
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_mLockId_imm 0, killed $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm $p1, 4
    ; CHECK-NEXT: $r6 = LDA_dms_lda_idx_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $r6 = LDA_dms_lda_idx_imm $p1, 4
    $r6 = LDA_dms_lda_idx_imm $p1, 4
    ACQ_mLockId_imm 0, $r0
    $r6 = LDA_dms_lda_idx_imm $p1, 4
    $r6 = LDA_dms_lda_idx_imm $p1, 4
...

---
name:            acq_vs_E5_store
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: acq_vs_E5_store
    ; CHECK: ST_dms_sts_idx_imm $r6, $p0, 0
    ; CHECK-NEXT: ST_dms_sts_idx_imm $r6, $p0, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_mLockId_imm 0, killed $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ST_dms_sts_idx_imm $r6, $p0, 0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $r6, killed $p0, 4
    ; CHECK-NEXT: NOP
    ST_dms_sts_idx_imm $r6, $p0, 0
    ST_dms_sts_idx_imm $r6, $p0, 4
    ACQ_mLockId_imm 0, $r0
    ST_dms_sts_idx_imm $r6, $p0, 0
    ST_dms_sts_idx_imm $r6, $p0, 4
...

---
name:            acq_vs_E7_store
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: acq_vs_E7_store
    ; CHECK: VST_SRS_D8_S32_ag_idx_imm $p0, 0, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: VST_SRS_D8_S32_ag_idx_imm $p0, 4, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_mLockId_imm 0, killed $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_SRS_D8_S32_ag_idx_imm $p0, 0, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: VST_SRS_D8_S32_ag_idx_imm killed $p0, 4, killed $cm0, killed $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    VST_SRS_D8_S32_ag_idx_imm $p0, 0, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    VST_SRS_D8_S32_ag_idx_imm $p0, 4, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ACQ_mLockId_imm 0, $r0
    VST_SRS_D8_S32_ag_idx_imm $p0, 0, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    VST_SRS_D8_S32_ag_idx_imm $p0, 4, $cm0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign

...
