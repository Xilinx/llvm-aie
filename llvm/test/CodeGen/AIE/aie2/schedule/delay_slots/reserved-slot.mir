# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -verify-machineinstrs -run-pass=postmisched --issue-limit=8 %s -o - | FileCheck %s

# For calls (JL, JL_IND), we need to reserve one delay slot to guarantee the
# current primitive relaxation logic will be able to align the return address.

---
name:            JL_reverse_slot
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: JL_reverse_slot
    ; CHECK: JL 0, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOVA_lda_cg 1
    ; CHECK-NEXT: $r2 = MOVA_lda_cg 2
    ; CHECK-NEXT: $r3 = MOVA_lda_cg 3
    ; CHECK-NEXT: $r4 = MOVA_lda_cg 4
    ; CHECK-NEXT: $r5 = MOVA_lda_cg 5
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit killed $r4, implicit killed $r5
  $r1 = MOVA_lda_cg 1
  $r2 = MOVA_lda_cg 2
  $r3 = MOVA_lda_cg 3
  $r4 = MOVA_lda_cg 4
  $r5 = MOVA_lda_cg 5
  JL 0, implicit-def $lr
  DelayedSchedBarrier implicit $r1, implicit $r2, implicit $r3, implicit $r4, implicit $r5
...

---
name:            JL_IND_reverse_slot
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: JL_IND_reverse_slot
    ; CHECK: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOVA_lda_cg 1
    ; CHECK-NEXT: $r2 = MOVA_lda_cg 2
    ; CHECK-NEXT: $r3 = MOVA_lda_cg 3
    ; CHECK-NEXT: $r4 = MOVA_lda_cg 4
    ; CHECK-NEXT: $r5 = MOVA_lda_cg 5
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit killed $r4, implicit killed $r5
  $r1 = MOVA_lda_cg 1
  $r2 = MOVA_lda_cg 2
  $r3 = MOVA_lda_cg 3
  $r4 = MOVA_lda_cg 4
  $r5 = MOVA_lda_cg 5
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier implicit $r1, implicit $r2, implicit $r3, implicit $r4, implicit $r5
...
