# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -run-pass=postmisched --aie-reserved-delay-slots=6 --issue-limit=8 %s -o - | FileCheck %s


# An example on how to use --aie-reserved-delay-slots to effectively
# disable delay slot filling. Note 6 cycles are reserved, so although RET can
# get scheduled in a "reserved" cycle, nothing will get VLIW-packed with it.
---
name:            delay_slots
alignment:       16
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $p0, $p1, $r6, $r7, $r8, $r9
    ; CHECK-LABEL: name: delay_slots
    ; CHECK: liveins: $p0, $p1, $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r12 = MUL_mul_r_rr killed $r6, killed $r7
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r0 = MOV_mv_scl killed $r12
    ; CHECK-NEXT: RET implicit $lr
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r12 = MUL_mul_r_rr $r6, $r7
    $r0 = MOV_mv_scl $r12
    RET implicit $lr
    DelayedSchedBarrier implicit $r0
...

# There are no delay slots, so nothing gets reserved.
---
name:            no_delay_slots
alignment:       16
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $p0, $p1, $r6, $r7, $r8, $r9
    ; CHECK-LABEL: name: no_delay_slots
    ; CHECK: liveins: $p0, $p1, $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r12 = MUL_mul_r_rr killed $r6, killed $r7
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r0 = MOV_mv_scl killed $r12
    $r12 = MUL_mul_r_rr $r6, $r7
    $r0 = MOV_mv_scl $r12
...
