# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 -verify-machineinstrs --run-pass=postmisched --issue-limit=1 -debug-only=machine-scheduler %s -o - 2>%t.log
# RUN: cat %t.log | FileCheck %s --check-prefix=CHECK-LIVENESS
# REQUIRES: asserts

# These tests verify liveouts of every MachineBasicBlock in MachineFunction and these tests are with multiple regions

--- |
  target triple = "aie2"

  declare dso_local void @callee()
  define dso_local void @liveness_regions() {
  entry:
    ret void
  }
  define dso_local void @liveness_branch_regions() {
  entry:
    ret void
  }
  define dso_local void @liveness_loop_regions() {
  entry:
    ret void
  }
  define dso_local void @liveness_nested_loop_regions() {
  entry:
    ret void
  }
...

name:            liveness_regions
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LIVENESS-LABEL: liveness_regions:BB0 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: (empty)

  bb.0:
    liveins: $r1, $r2, $r5
    $r0 = nsw ADD $r1, $r2, implicit-def $srcarry
    $r3 = nsw ADD $r0, $r1, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r3, implicit-def $r5
    $r4 = nsw ADC $r3, $r5, implicit-def $srcarry, implicit $srcarry
    RET implicit $lr
    DelayedSchedBarrier implicit $r4
...



#     bb.0
#     /  \
# bb.1    bb.2
#     \  /
#     bb.3
---
name:            liveness_branch_regions
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LIVENESS-LABEL: liveness_branch_regions:BB0 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r2 $r4 $r3
  ; CHECK-LIVENESS-NEXT: liveness_branch_regions:BB1 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $lr $r5 $r2
  ; CHECK-LIVENESS-NEXT: liveness_branch_regions:BB2 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $lr $r5 $r2
  ; CHECK-LIVENESS-NEXT: liveness_branch_regions:BB3 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: (empty)

  bb.0:
    liveins: $r1, $r2, $r5
    successors: %bb.1, %bb.2
    $r0 = nsw ADD $r1, $r2, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r0, implicit-def $r1
    $r3 = nsw ADD $r0, $r1, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r3, implicit-def $r5
    $r4 = nsw ADC $r3, $r5, implicit-def $srcarry, implicit $srcarry
    $r7 = MOV_mv_scl $srcarry
    JNZ $r7, %bb.2
    DelayedSchedBarrier
  bb.1:
    successors: %bb.3
    liveins: $r2, $r4
    $r5 = nsw ADD $r2, $r4, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r5
    $r5 = ABS $r5, implicit-def $srcarry
    J_jump_imm %bb.3
    DelayedSchedBarrier
  bb.2:
    successors: %bb.3
    liveins: $r3, $r4
    $r1 = nsw ADD $r3, $r4, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r1
    $r2 = MUL_mul_r_rr $r1, $r1
  bb.3:
    liveins: $r2, $r5, $r6
    $r1 = nsw ADD $r5, $r2, implicit-def $srcarry
    RET implicit $lr
    DelayedSchedBarrier implicit $r1 
...

#     bb.0
#       |
#     bb.1* (self loop)
#       | 
#     bb.2
---
name:            liveness_loop_regions
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LIVENESS-LABEL: liveness_loop_regions:BB0 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $bml0 $amll0 $amlh0 $bml2 $amll2 $amlh2 $r1 $crfpmask
  ; CHECK-LIVENESS-NEXT: liveness_loop_regions:BB1 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $bml0 $amll0 $amlh0 $bml2 $amll2 $amlh2 $r1 $crfpmask $lr
  ; CHECK-LIVENESS-NEXT: liveness_loop_regions:BB2 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: (empty)

  bb.0:
    liveins: $bml0, $bml1, $r0
    successors: %bb.1
    $bml2 = VADD_F $bml0, $bml1, $r0, implicit-def $srfpflags,  implicit $crfpmask
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r0
    $r1 = MOV_mv_scl $r0
  bb.1:
    liveins: $bml0, $bml1, $bml2, $r1
    successors: %bb.1, %bb.2
    $bml3 = VADD_F $bml0, $bml2, $r1, implicit-def $srfpflags,  implicit $crfpmask
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $bml1, implicit-def $bml3, implicit-def $r1
    $bml1 = VADD_F $bml1, $bml3, $r1, implicit-def $srfpflags,  implicit $crfpmask
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $bml1, implicit-def $bml2, implicit-def $r1
    $bml2 = VADD_F $bml1, $bml2, $r1, implicit-def $srfpflags,  implicit $crfpmask
    $r1 = ADD_add_r_ri $r1, -1, implicit-def $srcarry
    JNZ $r1, %bb.1
    DelayedSchedBarrier
  bb.2:
    liveins: $bml2
    RET implicit $lr
    DelayedSchedBarrier implicit $bml2
...

#     bb.0
#       |
#     bb.1-------*
#       |        |
#     bb.2-----* |
#     /  \     | |
# bb.3    bb.4 | |
#     \  /     | |
#     bb.5-----* |
#       |        |
#     bb.6-------*
#       |
#     bb.7
---
name:            liveness_nested_loop_regions
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LIVENESS-LABEL: liveness_nested_loop_regions:BB0 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r0 $r1
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB1 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r2 $r4 $srcarry $r3
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB2 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r2 $r4 $srcarry
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB3 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $srcarry
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB4 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $srcarry
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB5 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r2 $r4 $srcarry $r3 $r0 $r1 $r9 $r8
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB6 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: $r0 $r1 $r3 $r9 $srcarry
  ; CHECK-LIVENESS-NEXT: liveness_nested_loop_regions:BB7 LiveOuts
  ; CHECK-LIVENESS-NEXT:   Live Registers: (empty)
  
  bb.0:
    successors: %bb.1
    liveins: $r1, $r2
    $r0 = nsw ADD $r1, $r2, implicit-def $srcarry
    $r2 = MUL_mul_r_rr $r1, $r1
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r1
    $r1 = ABS $r1, implicit-def $srcarry
  bb.1:
    successors: %bb.2
    liveins: $r0, $r1
    $r3 = nsw ADD $r0, $r1, implicit-def $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r1, implicit-def $r3
    $r1 = AND $r1, $r3
  bb.2:
    successors: %bb.3, %bb.4
    liveins: $r2, $r3
    $r7 = MOV_mv_scl $srcarry
    JNZ $r7, %bb.4
    DelayedSchedBarrier
    $r1 = AND $r2, $r3
    J_jump_imm %bb.3
    DelayedSchedBarrier
  bb.3:
    successors: %bb.5
    liveins: $r2, $r4
    $r5 = nsw ADD $r2, $r4, implicit-def $srcarry
    J_jump_imm %bb.5
    DelayedSchedBarrier
  bb.4:
    successors: %bb.5
    $r1 = MOV_mv_scl $srcarry
  bb.5:
    successors: %bb.2, %bb.6
    liveins: $r6
    $r9 = MOV_mv_scl $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r2, implicit-def $r6
    $r6 = ADD_add_r_ri $r6, -1, implicit-def $srcarry
    JNZ $r6, %bb.2
    DelayedSchedBarrier
  bb.6:
    successors: %bb.1, %bb.7
    liveins: $r8
    $r8 = ADD_add_r_ri $r8, -2, implicit-def $srcarry
    JNZ $r8, %bb.1
    DelayedSchedBarrier
    J_jump_imm %bb.7
    DelayedSchedBarrier
  bb.7:
    liveins: $r3, $r9
    $r4 = nsw ADC $r3, $r9, implicit-def $srcarry, implicit $srcarry
    JL @callee, implicit-def $lr
    DelayedSchedBarrier csr_aie2, implicit-def $r4
    RET implicit $lr
    DelayedSchedBarrier implicit $r4
...

