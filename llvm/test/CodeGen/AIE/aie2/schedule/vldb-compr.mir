# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched --verify-machineinstrs %s -o - | FileCheck %s


---
name:            II_VLDB_COMPR_FILL_input
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_FILL_input
    ; CHECK: $p0 = LDA_dms_lda_idx_imm killed $p7, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0 = VLDB_COMPR_FILL killed $p0, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = LDA_dms_lda_idx_imm $p7, 0
    $p0 = VLDB_COMPR_FILL $p0, implicit $dp
...

---
name:            II_VLDB_COMPR_FILL_output
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_FILL_output
    ; CHECK: $p0 = VLDB_COMPR_FILL killed $p0, implicit $dp
    ; CHECK-NEXT: $p0 = VLDB_COMPR_FILL killed $p0, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = VLDB_COMPR_FILL $p0, implicit $dp
    $p0 = VLDB_COMPR_FILL $p0, implicit $dp
...

---
name:            II_VLDB_COMPR_RESET_input
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_RESET_input
    ; CHECK: $p0 = LDA_dms_lda_idx_imm killed $p7, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0 = VLDB_COMPR_RESET killed $p0, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = LDA_dms_lda_idx_imm $p7, 0
    $p0 = VLDB_COMPR_RESET $p0, implicit-def $dp, implicit $dp
...

---
name:            II_VLDB_COMPR_RESET_output
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_RESET_output
    ; CHECK: $p0 = VLDB_COMPR_RESET killed $p0, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: $p0 = VLDB_COMPR_RESET killed $p0, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = VLDB_COMPR_RESET $p0, implicit-def $dp, implicit $dp
    $p0 = VLDB_COMPR_RESET $p0, implicit-def $dp, implicit $dp
...

---
name:            II_VLDB_COMPR_PEEK_input
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_PEEK_input
    ; CHECK: $p0 = LDA_dms_lda_idx_imm killed $p7, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0, $wh0 = VLDB_COMPR_PEEK killed $p0, implicit-def $srcompr_uf, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = LDA_dms_lda_idx_imm $p7, 0
    $p0, $wh0 = VLDB_COMPR_PEEK $p0, implicit-def $srcompr_uf, implicit $dp
...

---
name:            II_VLDB_COMPR_PEEK_output
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_PEEK_output
    ; CHECK: $p0, $wh0 = VLDB_COMPR_PEEK killed $p0, implicit-def $srcompr_uf, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $cm0 = VMAC_vmac_cm_core_sparse_narrow killed $cm1, killed $x4, killed $qx0, killed $r9
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0, $wh0 = VLDB_COMPR_PEEK $p0, implicit-def $srcompr_uf, implicit $dp
    $cm0 = VMAC_vmac_cm_core_sparse_narrow $cm1, $x4, $qx0, $r9
...

---
name:            II_VLDB_COMPR_POP_input
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_POP_input
    ; CHECK: $p0 = LDA_dms_lda_idx_imm killed $p7, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0, $wh0 = VLDB_COMPR_POP killed $p0, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0 = LDA_dms_lda_idx_imm $p7, 0
    $p0, $wh0 = VLDB_COMPR_POP $p0, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
...

---
name:            II_VLDB_COMPR_POP_output
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_POP_output
    ; CHECK: $p0, $wh0 = VLDB_COMPR_POP killed $p0, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $cm0 = VMAC_vmac_cm_core_sparse_narrow killed $cm1, killed $x4, killed $qx0, killed $r9
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0, $wh0 = VLDB_COMPR_POP $p0, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $cm0 = VMAC_vmac_cm_core_sparse_narrow $cm1, $x4, $qx0, $r9
...


# An additional test for the implicit operands.
# The internal buffer pointer (DP) and both status registers are accessed in the same cycles for every vldb.COMPR instruction.
# No NOPs are needed between the vldb.COMPR instructions.
---
name:            II_VLDB_COMPR_implicit_ops
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_implicit_ops
    ; CHECK: $p1, $wh0 = VLDB_COMPR_POP killed $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: $p0 = VLDB_COMPR_RESET killed $p0, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: $p1, $wh0 = VLDB_COMPR_POP killed $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: $p1, $wh0 = VLDB_COMPR_PEEK killed $p1, implicit-def $srcompr_uf, implicit $dp
    ; CHECK-NEXT: $p1, $wh0 = VLDB_COMPR_POP killed $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: $p1, $wh0 = VLDB_COMPR_POP killed $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $p0 = VLDB_COMPR_RESET $p0, implicit-def $dp, implicit $dp
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $p1, $wh0 = VLDB_COMPR_PEEK $p1, implicit-def $srcompr_uf, implicit $dp
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
...

---
name:            II_VLDB_COMPR_RESET_implicit_RAW
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_RESET_implicit_RAW
    ; CHECK: $p0 = VLDB_COMPR_RESET killed $p0, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dp
    $p0 = VLDB_COMPR_RESET $p0, implicit-def $dp, implicit $dp
    $r1 = MOV_mv_scl $dp
...
---
name:            II_VLDB_COMPR_PEEK_implicit_RAW
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_PEEK_implicit_RAW
    ; CHECK: $p1, $wh0 = VLDB_COMPR_PEEK killed $p1, implicit-def $srcompr_uf, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r1 = MOV_mv_scl $srcompr_uf
    ; CHECK-NEXT: NOP
    $p1, $wh0 = VLDB_COMPR_PEEK $p1, implicit-def $srcompr_uf, implicit $dp
    $r1 = MOV_mv_scl $srcompr_uf
...
---
name:            II_VLDB_COMPR_POP_implicit_RAW
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VLDB_COMPR_POP_implicit_RAW
    ; CHECK: $p1, $wh0 = VLDB_COMPR_POP killed $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit killed $dp
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp {
    ; CHECK-NEXT:   $r1 = MOV_mv_scl killed $dp
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r1 = MOV_mv_scl $srcompr_uf
    ; CHECK-NEXT: NOP
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $r1 = MOV_mv_scl $dp
    $p1, $wh0 = VLDB_COMPR_POP $p1, implicit-def $srcompr_uf, implicit-def $dp, implicit $dp
    $r1 = MOV_mv_scl $srcompr_uf
...
