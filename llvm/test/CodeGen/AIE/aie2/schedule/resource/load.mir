# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %s --issue-limit=8 -o - | FileCheck %s

# This test checks that we are not trying to schedule LDA instructions and VLDB.4x
# at the same time since they both use the memory load interface A in E2.
# Only LDA instructions with different itineraries are tested.
# The name of each test consists of the names of the itineraries and the resource tested.

---
name:            II_LDA_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $m2 = LDA_dms_lda_idx killed $p6, killed $dj1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $m2 = LDA_dms_lda_idx $p6, $dj1
...

---
name:            II_LDA_POST_1D_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_POST_1D_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $m4, $p4 = LDA_dms_lda_pstm_nrm_imm killed $p4, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $m4, $p4 = LDA_dms_lda_pstm_nrm_imm $p4, 4
...


---
name:            II_LDA_POST_2D_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_POST_2D_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $r2, $p1, $dc1 = LDA_2D_dms_lda killed $p1, killed $d1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $r2, $p1, $dc1 = LDA_2D_dms_lda $p1, $d1
...

---
name:            II_LDA_POST_3D_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_POST_3D_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $r3, $p2, $dc1, $dc5 = LDA_3D_dms_lda killed $p2, killed $d1_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $r3, $p2, $dc1, $dc5 = LDA_3D_dms_lda $p2, $d1_3d
...

---
name:            II_LDA_Q_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_Q_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $q2 = LDA_dmv_lda_q_ag_idx killed $p6, killed $dj1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $q2 = LDA_dmv_lda_q_ag_idx $p6, $dj1
...

---
name:            II_LDA_POSTINC_Q_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_POSTINC_Q_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $q0, $p4 = LDA_dmv_lda_q_ag_pstm_nrm_imm killed $p4, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $q0, $p4 = LDA_dmv_lda_q_ag_pstm_nrm_imm $p4, 4
...


---
name:            II_LDA_2D_Q_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_2D_Q_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $q2, $p1, $dc1 = LDA_2D_dmv_lda_q killed $p1, killed $d1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $q2, $p1, $dc1 = LDA_2D_dmv_lda_q $p1, $d1
...

---
name:            II_LDA_3D_Q_II_VLDB_4X_LOAD_UNIT
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_LDA_3D_Q_II_VLDB_4X_LOAD_UNIT
    ; CHECK: $wl1 = VLDB_4x16_HI killed $wh2
    ; CHECK-NEXT: $q3, $p2, $dc1, $dc5 = LDA_3D_dmv_lda_q killed $p2, killed $d1_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $wl1 = VLDB_4x16_HI $wh2
    $q3, $p2, $dc1, $dc5 = LDA_3D_dmv_lda_q $p2, $d1_3d
...
