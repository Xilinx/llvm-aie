# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -verify-machineinstrs -run-pass=postmisched --issue-limit=8 --verify-machineinstrs %s -o - | FileCheck %s

# Several slots conflict on reading pointers/modifiers in E1
# They can never be bundled together
# Note that indirect J, JL, JNZD are currently
# scheduling boundaries, so can not be bundled anyway
# We add an explicit test to check that bundling is active
---
name:            check_bundling
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: check_bundling
    ; CHECK: $r3 = ADD $r4, $r5, implicit-def $srcarry {
    ; CHECK-NEXT:   $r1 = MOV_mv_scl killed $m0
    ; CHECK-NEXT: }
  $r1 = MOV_mv_scl $m0
  $r3 = ADD $r4, $r5, implicit-def $srcarry
...
---
name:            E1_MOV_SCL_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_SCL_E1_ST
    ; CHECK: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
  $r1 = MOV_mv_scl $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_SCL_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_SCL_E1_ST_2D
    ; CHECK: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, $d0
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
  $r1 = MOV_mv_scl $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...

---
name:            E1_MOV_SCL_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_SCL_E1_ST_3D
    ; CHECK: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, $d0_3d
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
  $r1 = MOV_mv_scl $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...

---
name:            E1_MOV_SCL_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_SCL_E1_JL
    ; CHECK: $r1 = MOV_mv_scl $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOV_mv_scl $m0
    ; CHECK-NEXT: $r1 = MOV_mv_scl $m0
    ; CHECK-NEXT: $r1 = MOV_mv_scl $m0
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_mv_scl $m0
  $r1 = MOV_mv_scl $m0
  $r1 = MOV_mv_scl $m0
  $r1 = MOV_mv_scl $m0
  $r1 = MOV_mv_scl $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...

---
name:            E1_MOV_D1_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D1_E1_ST
    ; CHECK: $r1 = MOV_D1 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
  $r1 = MOV_D1 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D2_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D2_E1_ST
    ; CHECK: $r1 = MOV_D2 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
  $r1 = MOV_D2 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D3_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D3_E1_ST
    ; CHECK: $r1 = MOV_D3 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D3 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D4_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D4_E1_ST
    ; CHECK: $r1 = MOV_D4 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D4 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D5_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D5_E1_ST
    ; CHECK: $r1 = MOV_D5 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D5 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D6_E1_ST
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D6_E1_ST
    ; CHECK: $r1 = MOV_D6 killed $dj0
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $m3, killed $p1, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D6 $dj0
  ST_dms_sts_idx_imm $m3, $p1, 0
...

---
name:            E1_MOV_D1_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D1_E1_ST_2D
    ; CHECK: $r1 = MOV_D1 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
  $r1 = MOV_D1 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D2_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D2_E1_ST_2D
    ; CHECK: $r1 = MOV_D2 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
  $r1 = MOV_D2 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D3_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D3_E1_ST_2D
    ; CHECK: $r1 = MOV_D3 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D3 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D4_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D4_E1_ST_2D
    ; CHECK: $r1 = MOV_D4 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D4 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D5_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D5_E1_ST_2D
    ; CHECK: $r1 = MOV_D5 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D5 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D6_E1_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D6_E1_ST_2D
    ; CHECK: $r1 = MOV_D6 $dj0
    ; CHECK-NEXT: $p1, $dc0 = ST_2D_dms_sts killed $m3, killed $p1, killed $d0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D6 $dj0
  $p1, $dc0 = ST_2D_dms_sts $m3, $p1, $d0
...
---
name:            E1_MOV_D1_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D1_E1_ST_3D
    ; CHECK: $r1 = MOV_D1 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
  $r1 = MOV_D1 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D2_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D2_E1_ST_3D
    ; CHECK: $r1 = MOV_D2 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
  $r1 = MOV_D2 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D3_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D3_E1_ST_3D
    ; CHECK: $r1 = MOV_D3 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D3 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D4_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D4_E1_ST_3D
    ; CHECK: $r1 = MOV_D4 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D4 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D5_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D5_E1_ST_3D
    ; CHECK: $r1 = MOV_D5 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D5 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D6_E1_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D6_E1_ST_3D
    ; CHECK: $r1 = MOV_D6 $dj0
    ; CHECK-NEXT: $p1, $dc0, $dc4 = ST_3D_dms_sts killed $m3, killed $p1, killed $d0_3d
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $r1 = MOV_D6 $dj0
  $p1, $dc0, $dc4 = ST_3D_dms_sts $m3, $p1, $d0_3d
...
---
name:            E1_MOV_D1_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D1_E1_JL
    ; CHECK: $r1 = MOV_D1 $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOV_D1 $m0
    ; CHECK-NEXT: $r1 = MOV_D1 $m0
    ; CHECK-NEXT: $r1 = MOV_D1 $m0
    ; CHECK-NEXT: $r1 = MOV_D1 killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D1 $m0
  $r1 = MOV_D1 $m0
  $r1 = MOV_D1 $m0
  $r1 = MOV_D1 $m0
  $r1 = MOV_D1 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...
---
name:            E1_MOV_D2_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D2_E1_JL
    ; CHECK: $r1 = MOV_D2 $m0
    ; CHECK-NEXT: $r1 = MOV_D2 $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOV_D2 $m0
    ; CHECK-NEXT: $r1 = MOV_D2 $m0
    ; CHECK-NEXT: $r1 = MOV_D2 killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D2 $m0
  $r1 = MOV_D2 $m0
  $r1 = MOV_D2 $m0
  $r1 = MOV_D2 $m0
  $r1 = MOV_D2 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...
---
name:            E1_MOV_D3_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D3_E1_JL
    ; CHECK: $r1 = MOV_D3 $m0
    ; CHECK-NEXT: $r1 = MOV_D3 $m0
    ; CHECK-NEXT: $r1 = MOV_D3 $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOV_D3 $m0
    ; CHECK-NEXT: $r1 = MOV_D3 killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D3 $m0
  $r1 = MOV_D3 $m0
  $r1 = MOV_D3 $m0
  $r1 = MOV_D3 $m0
  $r1 = MOV_D3 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...
---
name:            E1_MOV_D4_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D4_E1_JL
    ; CHECK: $r1 = MOV_D4 $m0
    ; CHECK-NEXT: $r1 = MOV_D4 $m0
    ; CHECK-NEXT: $r1 = MOV_D4 $m0
    ; CHECK-NEXT: $r1 = MOV_D4 $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: $r1 = MOV_D4 killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D4 $m0
  $r1 = MOV_D4 $m0
  $r1 = MOV_D4 $m0
  $r1 = MOV_D4 $m0
  $r1 = MOV_D4 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...
---
name:            E1_MOV_D5_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D5_E1_JL
    ; CHECK: $r1 = MOV_D5 $m0
    ; CHECK-NEXT: $r1 = MOV_D5 $m0
    ; CHECK-NEXT: $r1 = MOV_D5 $m0
    ; CHECK-NEXT: $r1 = MOV_D5 $m0
    ; CHECK-NEXT: $r1 = MOV_D5 killed $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D5 $m0
  $r1 = MOV_D5 $m0
  $r1 = MOV_D5 $m0
  $r1 = MOV_D5 $m0
  $r1 = MOV_D5 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...
---
name:            E1_MOV_D6_E1_JL
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_MOV_D6_E1_JL
    ; CHECK: $r1 = MOV_D6 $m0
    ; CHECK-NEXT: $r1 = MOV_D6 $m0
    ; CHECK-NEXT: $r1 = MOV_D6 $m0
    ; CHECK-NEXT: $r1 = MOV_D6 $m0
    ; CHECK-NEXT: $r1 = MOV_D6 killed $m0
    ; CHECK-NEXT: JL_IND killed $p1, implicit-def $lr
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier
  $r1 = MOV_D6 $m0
  $r1 = MOV_D6 $m0
  $r1 = MOV_D6 $m0
  $r1 = MOV_D6 $m0
  $r1 = MOV_D6 $m0
  JL_IND $p1, implicit-def $lr
  DelayedSchedBarrier
...

---
name:            E1_II_MOV_SCL_E1_II_ST_MS
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_II_MOV_SCL_E1_II_ST_MS
    ; CHECK: MOV_mv_scl2ms killed $m3
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
    ; CHECK-NEXT: NOP
  $r1 = MOV_mv_scl $dj0
  MOV_mv_scl2ms $m3
...

---
name:            E1_II_MOV_SCL_E1_II_ST_MS_NB
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_II_MOV_SCL_E1_II_ST_MS_NB
    ; CHECK: MOV_NB_mv_scl2ms killed $m3, implicit-def $srms0
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
    ; CHECK-NEXT: NOP
  $r1 = MOV_mv_scl $dj0
  MOV_NB_mv_scl2ms $m3, implicit-def $srms0
...

---
name:            E1_II_MOV_SCL_E1_II_ST_MS_NB_TLAST_REG
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E1_II_MOV_SCL_E1_II_ST_MS_NB_TLAST_REG
    ; CHECK: MOV_NB_mv_scl2ms_doTlast_reg killed $m3, killed $r28, implicit-def $srms0
    ; CHECK-NEXT: $r1 = MOV_mv_scl killed $dj0
    ; CHECK-NEXT: NOP
  $r1 = MOV_mv_scl $dj0
  MOV_NB_mv_scl2ms_doTlast_reg $m3, $r28, implicit-def $srms0
...
