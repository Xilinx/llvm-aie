# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %topdown-multi %s -o - | FileCheck %s

# VEXTRACT accesses S_WM_PORT in E2, MOV in E1
# The MOVs should be pushed out
---
name:            E2_VEXTRACT_E1_MOV
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E2_VEXTRACT_E1_MOV
    ; CHECK: $s0 = VEXTRACT_S16 killed $x1, killed $r16
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $s1 = MOV_mv_scl killed $r2
    ; CHECK-NEXT: $s2 = MOV_mv_scl killed $r3
    $s0 = VEXTRACT_S16 $x1, $r16
    $s1 = MOV_mv_scl $r2
    $s2 = MOV_mv_scl $r3
...

---
name:            E2_VEXTRACT_E1_ADD_NC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: E2_VEXTRACT_E1_ADD_NC
    ; CHECK: $s0 = VEXTRACT_S16 killed $x1, killed $r16
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $s1 = ADD_NC killed $r2, 20
    ; CHECK-NEXT: $s2 = ADD_NC killed $r3, -31
    $s0 = VEXTRACT_S16 $x1, $r16
    $s1 = ADD_NC $r2, 20
    $s2 = ADD_NC $r3, -31
...

---
name:            mov_SCL_to_S
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mov_SCL_to_S
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $s0, implicit killed $r4 {
    ; CHECK-NEXT:   $r1 = MOVX_alu_cg 0
    ; CHECK-NEXT:   $s0 = MOV_mv_scl killed $r4
    ; CHECK-NEXT: }
    $r1 = MOVX_alu_cg 0
    $s0 = MOV_mv_scl $r4
...

---
name:            mov_to_S
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mov_to_S
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $s1 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $s1 = MOV_mv_cg 0
    ; CHECK-NEXT: }
    $s1 = MOV_mv_cg 0
    $r1 = MOVA_lda_cg 0
...

---
name:            movx_to_R_mov_to_S
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: movx_to_R_mov_to_S
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $r2, implicit-def $s1 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $r2 = MOVX_alu_cg 1
    ; CHECK-NEXT:   $s1 = MOV_mv_cg 0
    ; CHECK-NEXT: }
    $s1 = MOV_mv_cg 0
    $r2 = MOVX_alu_cg 1
    $r1 = MOVA_lda_cg 0
...
