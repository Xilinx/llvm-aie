# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %topdown-multi %s -o - | FileCheck %s

# All locks use the semaphore logic for the same four cycles, so should be
# spaced four cycles apart
---
name:            acqrel
legalized:       true
regBankSelected: true
selected:        true
failedISel:      false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $r0, $r1, $r26

    ; CHECK-LABEL: name: acqrel
    ; CHECK: liveins: $r0, $r1, $r26
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: ACQ_mLockId_imm 0, $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: REL_COND_mLockId_imm 0, $r0, $r26
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_mLockId_reg $r0, $r1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: REL_mLockId_imm 0, $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_COND_mLockId_imm 0, $r0, $r26
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ACQ_COND_mLockId_reg $r0, $r1, $r26
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: REL_mLockId_reg $r0, $r1
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: RET implicit $lr
    ; CHECK-NEXT: REL_COND_mLockId_reg $r0, killed $r1, killed $r26
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    ACQ_mLockId_imm 0, $r0
    REL_COND_mLockId_imm 0, $r0, $r26
    ACQ_mLockId_reg $r0, $r1
    REL_mLockId_imm 0, $r0
    ACQ_COND_mLockId_imm 0, $r0, $r26
    ACQ_COND_mLockId_reg $r0, $r1, $r26
    REL_mLockId_reg $r0, $r1
    REL_COND_mLockId_reg $r0, $r1, $r26

    RET implicit $lr
    DelayedSchedBarrier implicit $r0

...
