# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %topdown-multi --verify-machineinstrs %s -o - | FileCheck %s

# LDA.TM & ST.TM should not have a resource conflict if scheduled simultaneously at E1

---
name:            PROC_BUS
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: PROC_BUS
    ; CHECK: $r2 = MOVXM_lng_cg 400000
    ; CHECK-NEXT: $r3 = MOVXM_lng_cg 200000
    ; CHECK-NEXT: $r1 = ADD killed $r1, killed $r2, implicit-def $srcarry
    ; CHECK-NEXT: BUNDLE implicit-def $r4, implicit-def $srcarry, implicit-def $p0, implicit killed $r1, implicit killed $r3 {
    ; CHECK-NEXT:   $r4 = ADD $r1, killed $r3, implicit-def $srcarry
    ; CHECK-NEXT:   $p0 = MOV_mv_scl killed $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: $p1 = MOV_mv_scl killed $r4
    ; CHECK-NEXT: ST_TM killed $r0, killed $p0 :: (store (s32) into custom "TileMemory", addrspace 15)
    ; CHECK-NEXT: $r0 = LDA_TM killed $p1 :: (load (s32) from custom "TileMemory", addrspace 15)
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $r2 = MOVXM_lng_cg 400000
    $r3 = MOVXM_lng_cg 200000
    $r1 = ADD killed $r1, killed $r2, implicit-def $srcarry
    $r4 = ADD killed $r1, killed $r3, implicit-def $srcarry
    $p0 = MOV_mv_scl killed $r1
    $p1 = MOV_mv_scl killed $r4
    ST_TM killed $r0, killed $p0 :: (store (s32) into custom "TileMemory")
    $r0 = LDA_TM $p1 :: (load (s32) from custom "TileMemory")

...
