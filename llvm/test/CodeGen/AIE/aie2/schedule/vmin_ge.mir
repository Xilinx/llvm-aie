# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %topdown-multi %s -o - | FileCheck %s

---
name:            bypass
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bypass
    ; CHECK: $x0, $l2 = VMIN_GE_D8 $x1, killed $x2, implicit $crvaddsign
    ; CHECK-NEXT: $r1 = VEXTRACT_S8 killed $x0, $r16
    ; CHECK-NEXT: $x0, $r21 = VMIN_GE_D16 killed $x4, killed $x1, implicit $crvaddsign
    ; CHECK-NEXT: $r1 = VEXTRACT_S16 killed $x0, $r16
    ; CHECK-NEXT: $x3, $r23 = VMIN_GE_BF16 $x5, $x5
    ; CHECK-NEXT: $r1 = VEXTRACT_S16 $x3, $r16
    ; CHECK-NEXT: $x0, $r23 = VMIN_GE_S32 killed $x5, killed $x3
    ; CHECK-NEXT: $r1 = VEXTRACT_S32 killed $x0, killed $r16
    ; CHECK-NEXT: NOP
    $x0, $l2  = VMIN_GE_D8  $x1, $x2, implicit $crvaddsign
    $r1 = VEXTRACT_S8  $x0, $r16
    $x0, $r21 = VMIN_GE_D16 $x4, $x1, implicit $crvaddsign
    $r1 = VEXTRACT_S16  $x0, $r16
    $x3, $r23 = VMIN_GE_BF16 $x5, $x5
    $r1 = VEXTRACT_S16  $x3, $r16
    $x0, $r23 = VMIN_GE_S32 $x5, $x3
    $r1 = VEXTRACT_S32  $x0, $r16
...

---
name:            no_bypass_vecReg
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: no_bypass_vecReg
    ; CHECK: $x0, $l1 = VMIN_GE_S8 killed $x1, killed $x2
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_w_ag_idx_imm killed $wl0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $x0, $l1  = VMIN_GE_S8  $x1, $x2
    VST_dmw_sts_w_ag_idx_imm $wl0, $p0, 0
...

---
name:            no_bypass_bf16_vecReg
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: no_bypass_bf16_vecReg
    ; CHECK: $x3, $r16 = VMIN_GE_BF16 killed $x5, killed $x3
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_w_ag_idx_imm killed $wl3, killed $p0, 0
    ; CHECK-NEXT: NOP
    $x3, $r16 = VMIN_GE_BF16 $x5, $x3
    VST_dmw_sts_w_ag_idx_imm $wl3, $p0, 0
...

---
name:            no_bypass_gprReg
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: no_bypass_gprReg
    ; CHECK: $x0, $r16 = VMIN_GE_S32 $x5, $x3
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r1 = VEXTRACT_S8 killed $x0, killed $r16
    ; CHECK-NEXT: $x0, $r16 = VMIN_GE_BF16 killed $x5, killed $x3
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $r1 = VEXTRACT_S16 killed $x0, killed $r16
    ; CHECK-NEXT: NOP
    $x0, $r16 = VMIN_GE_S32 $x5, $x3
    $r1 = VEXTRACT_S8  $x0, $r16
    $x0, $r16 = VMIN_GE_BF16 $x5, $x3
    $r1 = VEXTRACT_S16  $x0, $r16
...

---
name:            no_bypass_lReg
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: no_bypass_lReg
    ; CHECK: $x0, $l2 = VMIN_GE_D8 killed $x1, killed $x2, implicit $crvaddsign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VINSERT_64 killed $x0, killed $r29, killed $l2
    ; CHECK-NEXT: NOP
    $x0, $l2  = VMIN_GE_D8  $x1, $x2, implicit $crvaddsign
    $x0 = VINSERT_64 $x0, $r29, $l2
...
