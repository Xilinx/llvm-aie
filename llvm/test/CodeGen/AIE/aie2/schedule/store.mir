# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 %topdown-single -run-pass=postmisched %s -o - \
# RUN:   | FileCheck %s

---
name:            mix
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mix
    ; CHECK: $r6 = LDA_dms_lda_idx_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ST_dms_sts_idx_imm killed $r6, killed $p0, 20
    ; CHECK-NEXT: NOP
    $r6 = LDA_dms_lda_idx_imm $p1, 4
    ST_dms_sts_idx_imm $r6, $p0, 20
...

---
name:            store_tm
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: store_tm
    ; CHECK: $r6 = LDA_dms_lda_idx_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: ST_TM killed $r6, killed $p0 :: (store (s32) into custom "TileMemory")
    ; CHECK-NEXT: NOP
    $r6 = LDA_dms_lda_idx_imm $p1, 4
    ST_TM $r6, $p0 :: (store (s32) into custom "TileMemory")
...

---
name:            postinc
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: postinc
    ; CHECK: $r6, $p1 = LDA_dms_lda_pstm_nrm_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0 = ST_dms_sts_pstm_nrm_imm killed $r6, killed $p0, 20
    ; CHECK-NEXT: NOP
    $r6, $p1 = LDA_dms_lda_pstm_nrm_imm $p1, 4
    $p0 = ST_dms_sts_pstm_nrm_imm $r6, $p0, 20
...

# To test the latencies of all inputs, we need 2 stores back to back
---
name:            II_ST_2D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_ST_2D
    ; CHECK: $r6, $p1 = LDA_dms_lda_pstm_nrm_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0, $dc0 = ST_2D_dms_sts $r6, killed $p0, $d0
    ; CHECK-NEXT: $p0, $dc0 = ST_2D_dms_sts killed $r6, killed $p0, killed $d0
    ; CHECK-NEXT: NOP
    $r6, $p1 = LDA_dms_lda_pstm_nrm_imm $p1, 4
    $p0, $dc0 = ST_2D_dms_sts $r6, $p0, $d0
    $p0, $dc0 = ST_2D_dms_sts $r6, $p0, $d0
...

#To test the latencies of all inputs, we need 2 stores back to back
---
name:            II_ST_3D
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_ST_3D
    ; CHECK: $r6, $p1 = LDA_dms_lda_pstm_nrm_imm killed $p1, 4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_dms_sts $r6, killed $p0, $d0_3d
    ; CHECK-NEXT: $p0, $dc0, $dc4 = ST_3D_dms_sts killed $r6, killed $p0, killed $d0_3d
    ; CHECK-NEXT: NOP
    $r6, $p1 = LDA_dms_lda_pstm_nrm_imm $p1, 4
    $p0, $dc0, $dc4 = ST_3D_dms_sts $r6, $p0, $d0_3d
    $p0, $dc0, $dc4 = ST_3D_dms_sts $r6, $p0, $d0_3d
...

---
name:            ST_ST.8_backTOback
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: ST_ST.8_backTOback
    ; CHECK: ST_dms_sts_idx_imm killed $r0, $p0, 12
    ; CHECK-NEXT: ST_S16_ag_idx_imm killed $r13, killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  ST_dms_sts_idx_imm $r0, $p0, 12
  ST_S16_ag_idx_imm $r13, $p0, 0
...
---
name:            VST_PACK
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_PACK
    ; CHECK: $wl0 = VLDA_dmw_lda_w_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_PACK_S4_S8_ag_idx killed $p1, killed $dj0, killed $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: NOP
  $wl0 = VLDA_dmw_lda_w_ag_idx_imm $p0, 0
  VST_PACK_S4_S8_ag_idx $p1, $dj0, $x0, implicit $crsat, implicit $crpacksign
...

---
name:            VST_PACK_POSTINC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_PACK_POSTINC
    ; CHECK: $wl0 = VLDA_dmw_lda_w_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p1 = VST_PACK_D4_D8_ag_pstm_nrm_imm killed $p1, 0, killed $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $wl1 = VLDA_dmw_lda_w_ag_idx_imm killed $p1, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $wl0 = VLDA_dmw_lda_w_ag_idx_imm $p0, 0
  $p1 = VST_PACK_D4_D8_ag_pstm_nrm_imm $p1, 0, $x0, implicit $crsat, implicit $crpacksign
  $wl1 = VLDA_dmw_lda_w_ag_idx_imm $p1, 0
...

---
name:            VST_PACK_2D_POSTINC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_PACK_2D_POSTINC
    ; CHECK: $wl0 = VLDA_dmw_lda_w_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p1, $dc0 = VST_2D_PACK_D4_D8 killed $p1, killed $d0, killed $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $wl1 = VLDA_dmw_lda_w_ag_idx_imm killed $p1, 0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $wl0 = VLDA_dmw_lda_w_ag_idx_imm $p0, 0
  $p1, $dc0 = VST_2D_PACK_D4_D8 $p1, $d0, $x0, implicit $crsat, implicit $crpacksign
  $dc1 = MOV_mv_scl $dc0
  $wl1 = VLDA_dmw_lda_w_ag_idx_imm $p1, 0

...

---
name:            VST_PACK_3D_POSTINC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_PACK_3D_POSTINC
    ; CHECK: $wl0 = VLDA_dmw_lda_w_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p1, $dc0, $dc4 = VST_3D_PACK_D4_D8 killed $p1, killed $d0_3d, killed $x0, implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $wl1 = VLDA_dmw_lda_w_ag_idx_imm killed $p1, 0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: $dc2 = MOV_mv_scl killed $dc4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
  $wl0 = VLDA_dmw_lda_w_ag_idx_imm $p0, 0
  $p1, $dc0, $dc4 = VST_3D_PACK_D4_D8 $p1, $d0_3d, $x0, implicit $crsat, implicit $crpacksign
  $dc1 = MOV_mv_scl $dc0
  $dc2 = MOV_mv_scl $dc4
  $wl1 = VLDA_dmw_lda_w_ag_idx_imm $p1, 0
...
