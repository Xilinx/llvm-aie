# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 --issue-limit=1 -run-pass=postmisched %s -o - \
# RUN:   | FileCheck %s


#VMOV
---
name: test_stream_read_write
alignment:       16
body:             |
  bb.0 (align 16):
    ; 6.3 VMOV - Cascade stream access
    ; CHECK-LABEL: name: test_stream_read_write
    ; CHECK: $bml2 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $cm2 = VMOV_HI implicit $crscden
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VMOV_mv_mcd killed $bml2, implicit $crmcden
    ; CHECK-NEXT: VMOV_mv_mcd killed $bmh2, implicit $crmcden
    ; CHECK-NEXT: $x2 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VMOV_mv_mcd killed $x2, implicit $crmcden
    $bml2 = VMOV_mv_scd implicit $crscden
    $cm2 = VMOV_HI      implicit $crscden
    VMOV_mv_mcd $bml2,  implicit $crmcden
    VMOV_mv_mcd $bmh2,  implicit $crmcden
    $x2 = VMOV_mv_scd   implicit $crscden
    VMOV_mv_mcd $x2,    implicit $crmcden
...
---
name: test_vadd_stream_write
alignment:       16
body:             |
  bb.0 (align 16):
    liveins: $cm0, $cm1
    ; CHECK-LABEL: name: test_vadd_stream_write
    ; CHECK: liveins: $cm0, $cm1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r0 = MOVA_lda_cg 1
    ; CHECK-NEXT: $cm0 = VADD killed $cm0, killed $cm1, killed $r0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VMOV_mv_mcd killed $bml0, implicit $crmcden
    ; CHECK-NEXT: VMOV_mv_mcd killed $bmh0, implicit $crmcden
    $r0 = MOVA_lda_cg 1
    $cm0 = VADD $cm0, $cm1, $r0
    VMOV_mv_mcd $bml0, implicit $crmcden
    VMOV_mv_mcd $bmh0, implicit $crmcden
...
