# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 %topdown-multi -run-pass=postmisched %s -o - \
# RUN:   | FileCheck %s

# Write Dst in E7
# Read crscden in E5
---
name: II_VMOV_CASCADE_READ
alignment:       16
body:             |
  bb.0 (align 16):
    ; 6.3 VMOV - Cascade stream access
    ; CHECK-LABEL: name: II_VMOV_CASCADE_READ
    ; CHECK: $bml2 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $crscden = MOV_mv_cg 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll2, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bml2 = VMOV_mv_scd implicit $crscden
    VST_dmw_sts_am_ag_idx_imm $amll2, $p0, 0
    $crscden = MOV_mv_cg 0
...

# Read Src in E1
# Read crmcden in E1
---
name: II_VMOV_CASCADE_WRITE
alignment:       16
body:             |
  bb.0 (align 16):
    liveins: $cm0, $cm1
    ; CHECK-LABEL: name: II_VMOV_CASCADE_WRITE
    ; CHECK: liveins: $cm0, $cm1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $amll0 = VLDA_dmw_lda_am_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VMOV_mv_mcd $bml0, implicit $crmcden {
    ; CHECK-NEXT:   $crmcden = MOV_mv_cg 0
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $amll0 = VLDA_dmw_lda_am_ag_idx_imm $p0, 0
    VMOV_mv_mcd $bml0, implicit $crmcden
    $crmcden = MOV_mv_cg 0
...

