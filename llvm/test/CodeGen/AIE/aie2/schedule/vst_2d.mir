# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2  -run-pass=postmisched %s -o - | FileCheck %s

# Test the scheduling of the instructions. Specifically that all operands are
# read and written in E1. Therefore we have to be able to use the updated p2
# and dc2 the next cycle

---
name:            II_VST_2D_W
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: II_VST_2D_W
    ; CHECK: $p2, $dc2 = VST_2D_dmw_sts_w $wl3, killed $p2, $d2
    ; CHECK-NEXT: $p2, $dc2 = VST_2D_dmw_sts_w killed $wl3, killed $p2, killed $d2
    ; CHECK-NEXT: NOP
    $p2, $dc2 = VST_2D_dmw_sts_w $wl3, $p2, $d2
    $p2, $dc2 = VST_2D_dmw_sts_w $wl3, $p2, $d2
...

---
name:            ST_2D_Q
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: ST_2D_Q
    ; CHECK: $q1, $p2 = LDA_dmv_lda_q_ag_pstm_nrm_imm killed $p2, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $p2, $dc2 = ST_2D_dmv_sts_q $q1, killed $p2, $d2
    ; CHECK-NEXT: $p2, $dc2 = ST_2D_dmv_sts_q killed $q1, killed $p2, killed $d2
    ; CHECK-NEXT: NOP
    $q1, $p2 = LDA_dmv_lda_q_ag_pstm_nrm_imm $p2, 0
    $p2, $dc2 = ST_2D_dmv_sts_q $q1, $p2, $d2
    $p2, $dc2 = ST_2D_dmv_sts_q $q1, $p2, $d2
...

---
name:            VST_2D_AM
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_AM
    ; CHECK: $p2, $dc2 = VST_2D_dmw_sts_am $amll3, killed $p2, $d2
    ; CHECK-NEXT: $p2, $dc2 = VST_2D_dmw_sts_am killed $amll3, killed $p2, killed $d2
    ; CHECK-NEXT: NOP
    $p2, $dc2 = VST_2D_dmw_sts_am $amll3, $p2, $d2
    $p2, $dc2 = VST_2D_dmw_sts_am $amll3, $p2, $d2
...

---
name:            VST_2D_SRS_D16_S32
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_D16_S32
    ; CHECK: $p0, $dc7 = VST_2D_SRS_D16_S32 killed $p0, $d7, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $p0, $dc7 = VST_2D_SRS_D16_S32 killed $p0, killed $d7, killed $bml0, killed $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0, $dc7 = VST_2D_SRS_D16_S32 $p0, $d7, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p0, $dc7 = VST_2D_SRS_D16_S32 $p0, $d7, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
...

---
name:            VST_2D_SRS_S16_S32
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_S16_S32
    ; CHECK: $p2, $dc0 = VST_2D_SRS_S16_S32 killed $p2, $d0, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $p2, $dc0 = VST_2D_SRS_S16_S32 killed $p2, killed $d0, killed $bml1, killed $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p2, $dc0 = VST_2D_SRS_S16_S32 $p2, $d0, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p2, $dc0 = VST_2D_SRS_S16_S32 $p2, $d0, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
...

---
name:            VST_2D_SRS_D32_S64
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_D32_S64
    ; CHECK: $p5, $dc2 = VST_2D_SRS_D32_S64 killed $p5, $d2, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $p5, $dc2 = VST_2D_SRS_D32_S64 killed $p5, killed $d2, killed $bmh5, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p5, $dc2 = VST_2D_SRS_D32_S64 $p5, $d2, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p5, $dc2 = VST_2D_SRS_D32_S64 $p5, $d2, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
...

---
name:            VST_2D_SRS_S32_S64
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_S32_S64
    ; CHECK: $p7, $dc5 = VST_2D_SRS_S32_S64 killed $p7, $d5, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $p7, $dc5 = VST_2D_SRS_S32_S64 killed $p7, killed $d5, killed $bmh7, killed $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p7, $dc5 = VST_2D_SRS_S32_S64 $p7, $d5, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p7, $dc5 = VST_2D_SRS_S32_S64 $p7, $d5, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
...

---
name:            VST_2D_SRS_D16_S64
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_D16_S64
    ; CHECK: $p0, $dc7 = VST_2D_SRS_D16_S64 killed $p0, $d7, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $p0, $dc7 = VST_2D_SRS_D16_S64 killed $p0, killed $d7, killed $cm1, killed $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0, $dc7 = VST_2D_SRS_D16_S64 $p0, $d7, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p0, $dc7 = VST_2D_SRS_D16_S64 $p0, $d7, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
...

---
name:            VST_2D_SRS_S16_S64
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_S16_S64
    ; CHECK: $p2, $dc0 = VST_2D_SRS_S16_S64 killed $p2, $d0, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $p2, $dc0 = VST_2D_SRS_S16_S64 killed $p2, killed $d0, killed $cm2, killed $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p2, $dc0 = VST_2D_SRS_S16_S64 $p2, $d0, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p2, $dc0 = VST_2D_SRS_S16_S64 $p2, $d0, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
...

---
name:            VST_2D_SRS_D8_S32
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_D8_S32
    ; CHECK: $p5, $dc2 = VST_2D_SRS_D8_S32 killed $p5, $d2, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $p5, $dc2 = VST_2D_SRS_D8_S32 killed $p5, killed $d2, killed $cm3, killed $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p5, $dc2 = VST_2D_SRS_D8_S32  $p5, $d2, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p5, $dc2 = VST_2D_SRS_D8_S32  $p5, $d2, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
...

---
name:            VST_2D_SRS_S8_S32
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_2D_SRS_S8_S32
    ; CHECK: $p7, $dc5 = VST_2D_SRS_S8_S32 killed $p7, $d5, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $p7, $dc5 = VST_2D_SRS_S8_S32 killed $p7, killed $d5, killed $cm4, killed $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p7, $dc5 = VST_2D_SRS_S8_S32  $p7, $d5, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p7, $dc5 = VST_2D_SRS_S8_S32  $p7, $d5, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
...

---
name:            VST_CONV_2D_BF16_FP32
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: VST_CONV_2D_BF16_FP32
    ; CHECK: $p0, $dc7 = VST_CONV_2D_BF16_FP32 killed $p0, $d7, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    ; CHECK-NEXT: $p0, $dc7 = VST_CONV_2D_BF16_FP32 killed $p0, killed $d7, killed $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    $p0, $dc7 = VST_CONV_2D_BF16_FP32 $p0, $d7, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
    $p0, $dc7 = VST_CONV_2D_BF16_FP32 $p0, $d7, $bml0, implicit-def $srf2fflags, implicit $crrnd, implicit $crf2fmask
