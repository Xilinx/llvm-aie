# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -march=aie2 -run-pass=postmisched %topdown-multi %s -o - | FileCheck %s

# This test checks the output latency of the VLD itineraries:
# VLD write to register / accumulator:  E7
# VLDA.UPS writes to accumulator:       E9
# VADD read from register:              E1
# VST read from accumulator:            E1

---
name:            latency_vlda_w
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_w
    ; CHECK: $wl0 = VLDA_dmw_lda_w_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0 = VLDA_dmw_lda_w_ag_idx_imm $p0, 0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vlda_post_inc_w
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_post_inc_w
    ; CHECK: $wl0, $p0 = VLDA_dmw_lda_w_ag_pstm_nrm_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0 = VLDA_dmw_lda_w_ag_pstm_nrm_imm $p0, 0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vlda_2d_w
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_2d_w
    ; CHECK: $wl0, $p0, $dc0 = VLDA_2D_dmw_lda_w killed $p0, killed $d0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0 = VLDA_2D_dmw_lda_w $p0, $d0
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vlda_3d_w
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_3d_w
    ; CHECK: $wl0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_w killed $p0, killed $d0_3d
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: $dc2 = MOV_mv_scl killed $dc4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_w $p0, $d0_3d
    $dc1 = MOV_mv_scl $dc0
    $dc2 = MOV_mv_scl $dc4
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb
    ; CHECK: $wl0 = VLDB_dmw_ldb_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0 = VLDB_dmw_ldb_ag_idx_imm $p0, 0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_post_inc
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_post_inc
    ; CHECK: $wl0, $p0 = VLDB_dmw_ldb_ag_pstm_nrm_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0 = VLDB_dmw_ldb_ag_pstm_nrm_imm $p0, 0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_2d
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_2d
    ; CHECK: $wl0, $p0, $dc0 = VLDB_2D killed $p0, killed $d0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0 = VLDB_2D $p0, $d0
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_3d
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_3d
    ; CHECK: $wl0, $p0, $dc0, $dc4 = VLDB_3D killed $p0, killed $d0_3d
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0, $dc4 = VLDB_3D $p0, $d0_3d
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_unpack
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_unpack
    ; CHECK: $x0 = VLDB_UNPACK_S8_S4_ag_idx killed $p0, killed $dj0, implicit $crunpacksign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $x0 = VLDB_UNPACK_S8_S4_ag_idx $p0, $dj0, implicit $crunpacksign
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_unpack_postinc
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_unpack_postinc
    ; CHECK: $x0, $p0 = VLDB_UNPACK_S8_S4_ag_pstm_nrm killed $p0, killed $m0, implicit $crunpacksign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $x0, $p0 = VLDB_UNPACK_S8_S4_ag_pstm_nrm $p0, $m0, implicit $crunpacksign
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_2d_unpack
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_2d_unpack
    ; CHECK: $x0, $p0, $dc0 = VLDB_2D_UNPACK_D8_D4 killed $p0, killed $d0, implicit $crunpacksign
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $x0, $p0, $dc0 = VLDB_2D_UNPACK_D8_D4 $p0, $d0, implicit $crunpacksign
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_3d_unpack
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_3d_unpack
    ; CHECK: $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S8_S4 killed $p0, killed $d0_3d, implicit $crunpacksign
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_S8_S4 $p0, $d0_3d, implicit $crunpacksign
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...


---
name:            vldb_unpack_crUnpackSign
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vldb_unpack_crUnpackSign
    ; CHECK: BUNDLE implicit-def $x0, implicit-def $wl0, implicit-def $wh0, implicit-def $crunpacksign, implicit killed $p0, implicit killed $dj0, implicit $crunpacksign, implicit $r0 {
    ; CHECK-NEXT:   $x0 = VLDB_UNPACK_D8_D4_ag_idx killed $p0, killed $dj0, implicit $crunpacksign
    ; CHECK-NEXT:   $crunpacksign = MOV_mv_scl $r0
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $crunpacksign = MOV_mv_scl killed $r0
    $crunpacksign = MOV_mv_scl $r0
    $x0 = VLDB_UNPACK_D8_D4_ag_idx $p0, $dj0, implicit $crunpacksign
    $crunpacksign = MOV_mv_scl $r0
...

---
name:            vldb_unpack_postinc_crUnpackSign
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vldb_unpack_postinc_crUnpackSign
    ; CHECK: BUNDLE implicit-def $x0, implicit-def $wl0, implicit-def $wh0, implicit-def $p0, implicit-def $crunpacksign, implicit killed $p0, implicit killed $m0, implicit $crunpacksign, implicit $r0 {
    ; CHECK-NEXT:   $x0, $p0 = VLDB_UNPACK_D8_D4_pstm_nrm killed $p0, killed $m0, implicit $crunpacksign
    ; CHECK-NEXT:   $crunpacksign = MOV_mv_scl $r0
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $crunpacksign = MOV_mv_scl killed $r0
    $crunpacksign = MOV_mv_scl $r0
    $x0, $p0 = VLDB_UNPACK_D8_D4_pstm_nrm $p0, $m0, implicit $crunpacksign
    $crunpacksign = MOV_mv_scl $r0
...

---
name:            vldb_unpack_2d_crUnpackSign
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vldb_unpack_2d_crUnpackSign
    ; CHECK: BUNDLE implicit-def $x0, implicit-def $wl0, implicit-def $wh0, implicit-def $p0, implicit-def $dc0, implicit-def $crunpacksign, implicit killed $p0, implicit killed $d0, implicit $crunpacksign, implicit $r0 {
    ; CHECK-NEXT:   $x0, $p0, $dc0 = VLDB_2D_UNPACK_D8_D4 killed $p0, killed $d0, implicit $crunpacksign
    ; CHECK-NEXT:   $crunpacksign = MOV_mv_scl $r0
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $crunpacksign = MOV_mv_scl killed $r0
    $crunpacksign = MOV_mv_scl $r0
    $x0, $p0, $dc0 = VLDB_2D_UNPACK_D8_D4 $p0, $d0, implicit $crunpacksign
    $crunpacksign = MOV_mv_scl $r0
...

---
name:            vldb_unpack_3d_crUnpackSign
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: vldb_unpack_3d_crUnpackSign
    ; CHECK: BUNDLE implicit-def $x0, implicit-def $wl0, implicit-def $wh0, implicit-def $p0, implicit-def $dc0, implicit-def $dc4, implicit-def $crunpacksign, implicit killed $p0, implicit killed $d0_3d, implicit $crunpacksign, implicit $r0 {
    ; CHECK-NEXT:   $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D8_D4 killed $p0, killed $d0_3d, implicit $crunpacksign
    ; CHECK-NEXT:   $crunpacksign = MOV_mv_scl $r0
    ; CHECK-NEXT: }
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $crunpacksign = MOV_mv_scl killed $r0
    $crunpacksign = MOV_mv_scl $r0
    $x0, $p0, $dc0, $dc4 = VLDB_3D_UNPACK_D8_D4 $p0, $d0_3d, implicit $crunpacksign
    $crunpacksign = MOV_mv_scl $r0
...

---
name:            latency_vlda_am
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_am
    ; CHECK: $amll0 = VLDA_dmw_lda_am_ag_idx_imm $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $amll0 = VLDA_dmw_lda_am_ag_idx_imm $p0, 0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            latency_vlda_post_inc_am
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_post_inc_am
    ; CHECK: $amll0, $p0 = VLDA_dmw_lda_am_ag_pstm_nrm_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $amll0, $p0 = VLDA_dmw_lda_am_ag_pstm_nrm_imm $p0, 0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            latency_vlda_2d_am
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_2d_am
    ; CHECK: $amll0, $p0, $dc0 = VLDA_2D_dmw_lda_am killed $p0, killed $d0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $amll0, $p0, $dc0 = VLDA_2D_dmw_lda_am $p0, $d0
    $dc1 = MOV_mv_scl $dc0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...

---
name:            latency_vlda_3d_am
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_3d_am
    ; CHECK: $amll0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_am killed $p0, killed $d0_3d
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $amll0, $p0, $dc0, $dc4 = VLDA_3D_dmw_lda_am $p0, $d0_3d
    $dc1 = MOV_mv_scl $dc0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p0, 0
...


---
name:            latency_vlda_conv
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_conv
    ; CHECK: $bml0 = VLDA_CONV_FP32_BF16_ag_idx_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p1, 0
    ; CHECK-NEXT: NOP
    $bml0 = VLDA_CONV_FP32_BF16_ag_idx_imm $p0, 0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p1, 0
...

---
name:            latency_vlda_conv_postinc
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_conv_postinc
    ; CHECK: $bml0, $p0 = VLDA_CONV_FP32_BF16_pstm_nrm_imm killed $p0, 0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p1, 0
    ; CHECK-NEXT: NOP
    $bml0, $p0 = VLDA_CONV_FP32_BF16_pstm_nrm_imm $p0, 0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p1, 0
...

---
name:            latency_vlda_2d_conv
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_2d_conv
    ; CHECK: $bml0, $p0, $dc0 = VLDA_2D_CONV_FP32_BF16 killed $p0, killed $d0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p1, 0
    ; CHECK-NEXT: NOP
    $bml0, $p0, $dc0 = VLDA_2D_CONV_FP32_BF16 $p0, $d0
    $dc1 = MOV_mv_scl $dc0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p1, 0
...

---
name:            latency_vlda_3d_conv
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_3d_conv
    ; CHECK: $bml0, $p0, $dc0, $dc4 = VLDA_3D_CONV_FP32_BF16 killed $p0, killed $d0_3d
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amll0, killed $p1, 0
    ; CHECK-NEXT: NOP
    $bml0, $p0, $dc0, $dc4 = VLDA_3D_CONV_FP32_BF16 $p0, $d0_3d
    $dc1 = MOV_mv_scl $dc0
    VST_dmw_sts_am_ag_idx_imm $amll0, $p1, 0
...

---
name:            latency_vlda_ups
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_ups
    ; CHECK: $bmh0 = VLDA_UPS_S32_D16_ag_idx_imm killed $s0, $p0, 0, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amhl0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bmh0 = VLDA_UPS_S32_D16_ag_idx_imm $s0, $p0, 0, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    VST_dmw_sts_am_ag_idx_imm $amhl0, $p0, 0
...

---
name:            latency_vlda_post_inc_ups
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_post_inc_ups
    ; CHECK: $bmh0, $p0 = VLDA_UPS_S32_D16_ag_pstm_nrm_imm killed $s0, killed $p0, 0, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amhl0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bmh0, $p0 = VLDA_UPS_S32_D16_ag_pstm_nrm_imm $s0, $p0, 0, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    VST_dmw_sts_am_ag_idx_imm $amhl0, $p0, 0
...

---
name:            latency_vlda_2d_ups
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_2d_ups
    ; CHECK: $bmh0, $p0, $dc4 = VLDA_2D_UPS_S32_D16 killed $s0, killed $p0, killed $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc4
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amhl0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bmh0, $p0, $dc4 = VLDA_2D_UPS_S32_D16 $s0, $p0, $d4, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    $dc1 = MOV_mv_scl $dc4
    VST_dmw_sts_am_ag_idx_imm $amhl0, $p0, 0
...

---
name:            latency_vlda_3d_ups
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vlda_3d_ups
    ; CHECK: $bmh0, $p0, $dc3, $dc7 = VLDA_3D_UPS_S32_D16 killed $s0, killed $p0, killed $d3_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc3
    ; CHECK-NEXT: $dc2 = MOV_mv_scl killed $dc7
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: VST_dmw_sts_am_ag_idx_imm killed $amhl0, killed $p0, 0
    ; CHECK-NEXT: NOP
    $bmh0, $p0, $dc3, $dc7 = VLDA_3D_UPS_S32_D16 $s0, $p0, $d3_3d, implicit-def $srups_of, implicit $crsat, implicit $crupssign
    $dc1 = MOV_mv_scl $dc3
    $dc2 = MOV_mv_scl $dc7
    VST_dmw_sts_am_ag_idx_imm $amhl0, $p0, 0
...

---
name:            latency_vldb_4x
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_4x
    ; CHECK: $wl0 = VLDB_4x16_HI killed $wh10
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0 = VLDB_4x16_HI killed $wh10
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_128
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_128
    ; CHECK: $wl0 = VLDB_128_ag_idx killed $p0, killed $dj0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0 = VLDB_128_ag_idx $p0, $dj0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_post_inc_128
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_post_inc_128
    ; CHECK: $wh0, $p5 = VLDB_128_ag_pstm_nrm killed $p5, killed $m0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wh0, $p5 = VLDB_128_ag_pstm_nrm $p5, $m0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_2d_128
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_2d_128
    ; CHECK: $wl0, $p0, $dc0 = VLDB_2D_128 killed $p0, $d0
    ; CHECK-NEXT: $wl2, $p0, $dc0 = VLDB_2D_128 killed $p0, killed $d0
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0 = VLDB_2D_128 $p0, $d0
    $wl2, $p0, $dc0 = VLDB_2D_128 $p0, $d0
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...

---
name:            latency_vldb_3d_128
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: latency_vldb_3d_128
    ; CHECK: $wl0, $p0, $dc0, $dc4 = VLDB_3D_128 killed $p0, $d0_3d
    ; CHECK-NEXT: $wl2, $p0, $dc0, $dc4 = VLDB_3D_128 killed $p0, killed $d0_3d
    ; CHECK-NEXT: $dc1 = MOV_mv_scl killed $dc0
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: NOP
    ; CHECK-NEXT: $x0 = VADD_8 killed $x0, killed $x1
    ; CHECK-NEXT: NOP
    $wl0, $p0, $dc0, $dc4 = VLDB_3D_128 $p0, $d0_3d
    $wl2, $p0, $dc0, $dc4 = VLDB_3D_128 $p0, $d0_3d
    $dc1 = MOV_mv_scl $dc0
    $x0 = VADD_8 $x0, $x1
...
