# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie2 -run-pass=postmisched %s %topdown-multi -o - | FileCheck %s


---
name:            addNC_to_R
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_R
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $r3, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $r3 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $r3 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            addNC_to_P
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_P
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $p0, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $p0 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $p0 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...


---
name:            addNC_to_M
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_M
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $m1, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $m1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $m1 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            addNC_to_DC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_DC
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $dc1, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dc1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dc1 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            addNC_to_DJ
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_DJ
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $dj1, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dj1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dj1 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            addNC_to_DN
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_DN
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $dn1, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dn1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dn1 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            addNC_to_S
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_S
    ; CHECK: BUNDLE implicit-def $r1, implicit-def $s1, implicit killed $r31 {
    ; CHECK-NEXT:   $r1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $s1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $s1 = ADD_NC $r31, 0
    $r1 = MOVA_lda_cg 0
...

---
name:            mova_to_dc_addNC_to_M
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dc_addNC_to_M
    ; CHECK: BUNDLE implicit-def $dc1, implicit-def $m1, implicit killed $r31 {
    ; CHECK-NEXT:   $dc1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $m1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $m1 = ADD_NC $r31, 0
    $dc1 = MOVA_lda_cg 0
...

---
name:            mova_to_dc_addNC_to_DC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dc_addNC_to_DC
    ; CHECK: $dc1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: $dc0 = MOVA_lda_cg 0
    $dc1 = ADD_NC $r31, 0
    $dc0 = MOVA_lda_cg 0
...

---
name:            mova_to_dc_addNC_to_DJ
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dc_addNC_to_DJ
    ; CHECK: BUNDLE implicit-def $dc1, implicit-def $dj1, implicit killed $r31 {
    ; CHECK-NEXT:   $dc1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dj1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dj1 = ADD_NC $r31, 0
    $dc1 = MOVA_lda_cg 0
...

---
name:            mova_to_dc_addNC_to_DN
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dc_addNC_to_DN
    ; CHECK: BUNDLE implicit-def $dc1, implicit-def $dn1, implicit killed $r31 {
    ; CHECK-NEXT:   $dc1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dn1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dn1 = ADD_NC $r31, 0
    $dc1 = MOVA_lda_cg 0
...

---
name:            mova_to_dj_addNC_to_R
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_R
    ; CHECK: BUNDLE implicit-def $dj1, implicit-def $r3, implicit killed $r31 {
    ; CHECK-NEXT:   $dj1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $r3 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $r3 = ADD_NC $r31, 0
    $dj1 = MOVA_lda_cg 0
...

---
name:            mova_to_dj_addNC_to_P
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_P
    ; CHECK: BUNDLE implicit-def $dj1, implicit-def $p0, implicit killed $r31 {
    ; CHECK-NEXT:   $dj1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $p0 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $p0 = ADD_NC $r31, 0
    $dj1 = MOVA_lda_cg 0
...


---
name:            mova_to_dj_addNC_to_M
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_M
    ; CHECK: BUNDLE implicit-def $dj1, implicit-def $m1, implicit killed $r31 {
    ; CHECK-NEXT:   $dj1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $m1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $m1 = ADD_NC $r31, 0
    $dj1 = MOVA_lda_cg 0
...

---
name:            mova_to_dj_addNC_to_DC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_DC
    ; CHECK: BUNDLE implicit-def $dj1, implicit-def $dc1, implicit killed $r31 {
    ; CHECK-NEXT:   $dj1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dc1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dc1 = ADD_NC $r31, 0
    $dj1 = MOVA_lda_cg 0
...

---
name:            mova_to_dj_addNC_to_DJ
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_DJ
    ; CHECK: $dj1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: $dj0 = MOVA_lda_cg 0
    $dj1 = ADD_NC $r31, 0
    $dj0 = MOVA_lda_cg 0
...

---
name:            mova_to_dj_addNC_to_DN
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dj_addNC_to_DN
    ; CHECK: BUNDLE implicit-def $dj1, implicit-def $dn1, implicit killed $r31 {
    ; CHECK-NEXT:   $dj1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dn1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dn1 = ADD_NC $r31, 0
    $dj1 = MOVA_lda_cg 0
...


---
name:            mova_to_dn_addNC_to_R
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_R
    ; CHECK: BUNDLE implicit-def $dn1, implicit-def $r3, implicit killed $r31 {
    ; CHECK-NEXT:   $dn1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $r3 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $r3 = ADD_NC $r31, 0
    $dn1 = MOVA_lda_cg 0
...

---
name:            mova_to_dn_addNC_to_P
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_P
    ; CHECK: BUNDLE implicit-def $dn1, implicit-def $p0, implicit killed $r31 {
    ; CHECK-NEXT:   $dn1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $p0 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $p0 = ADD_NC $r31, 0
    $dn1 = MOVA_lda_cg 0
...


---
name:            mova_to_dn_addNC_to_M
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_M
    ; CHECK: BUNDLE implicit-def $dn1, implicit-def $m1, implicit killed $r31 {
    ; CHECK-NEXT:   $dn1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $m1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $m1 = ADD_NC $r31, 0
    $dn1 = MOVA_lda_cg 0
...

---
name:            mova_to_dn_addNC_to_DC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_DC
    ; CHECK: BUNDLE implicit-def $dn1, implicit-def $dc1, implicit killed $r31 {
    ; CHECK-NEXT:   $dn1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dc1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dc1 = ADD_NC $r31, 0
    $dn1 = MOVA_lda_cg 0
...

---
name:            mova_to_dn_addNC_to_DJ
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_DJ
    ; CHECK: BUNDLE implicit-def $dn1, implicit-def $dj1, implicit killed $r31 {
    ; CHECK-NEXT:   $dn1 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dj1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dj1 = ADD_NC $r31, 0
    $dn1 = MOVA_lda_cg 0
...

---
name:            mova_to_dn_addNC_to_DN
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_dn_addNC_to_DN
    ; CHECK: $dn1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: $dn0 = MOVA_lda_cg 0
    $dn1 = ADD_NC $r31, 0
    $dn0 = MOVA_lda_cg 0
...


---
name:            mova_to_p_addNC_to_R
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_R
    ; CHECK: BUNDLE implicit-def $p0, implicit-def $r3, implicit killed $r31 {
    ; CHECK-NEXT:   $p0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $r3 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $r3 = ADD_NC $r31, 0
    $p0 = MOVA_lda_cg 0
...

---
name:            mova_to_p_addNC_to_P
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_P
    ; CHECK: $p0 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: $p1 = MOVA_lda_cg 0
    $p0 = ADD_NC $r31, 0
    $p1 = MOVA_lda_cg 0
...


---
name:            mova_to_p_addNC_to_M
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_M
    ; CHECK: BUNDLE implicit-def $p0, implicit-def $m1, implicit killed $r31 {
    ; CHECK-NEXT:   $p0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $m1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $m1 = ADD_NC $r31, 0
    $p0 = MOVA_lda_cg 0
...

---
name:            mova_to_p_addNC_to_DC
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_DC
    ; CHECK: BUNDLE implicit-def $p0, implicit-def $dc1, implicit killed $r31 {
    ; CHECK-NEXT:   $p0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dc1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dc1 = ADD_NC $r31, 0
    $p0 = MOVA_lda_cg 0
...

---
name:            mova_to_p_addNC_to_DJ
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_DJ
    ; CHECK: BUNDLE implicit-def $p0, implicit-def $dj1, implicit killed $r31 {
    ; CHECK-NEXT:   $p0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dj1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dj1 = ADD_NC $r31, 0
    $p0 = MOVA_lda_cg 0
...

---
name:            mova_to_p_addNC_to_DN
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mova_to_p_addNC_to_DN
    ; CHECK: BUNDLE implicit-def $p0, implicit-def $dn1, implicit killed $r31 {
    ; CHECK-NEXT:   $p0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   $dn1 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: }
    $dn1 = ADD_NC $r31, 0
    $p0 = MOVA_lda_cg 0
...

# There is no actual dependence, but we are currently conservative 
# and have a common port for R and S.
---
name:            addNC_to_S_move_to_R_noDependence
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: addNC_to_S_move_to_R_noDependence
    ; CHECK: $s3 = ADD_NC killed $r31, 0
    ; CHECK-NEXT: $r0 = MOV_mv_scl killed $r2
    $s3 = ADD_NC $r31, 0
    $r0 = MOV_mv_scl $r2
...
