# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -verify-machineinstrs --march=aie2 -run-pass=prologepilog %s -o - | FileCheck %s

# l0 is composed of r16-r17, which are callee-saved. None of those regs
# are used as CC registers, so r16-r17 should be saved-restored by PEI.
---
name:            save_L
body:             |
  bb.0:
    liveins: $l1

    ; CHECK-LABEL: name: save_L
    ; CHECK: liveins: $l1, $r16, $r17
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r0 = PseudoMove killed $r16
    ; CHECK-NEXT: $r1 = PseudoMove killed $r17
    ; CHECK-NEXT: $l0 = COPY $l1
    ; CHECK-NEXT: $r17 = PseudoMove killed $r1
    ; CHECK-NEXT: $r16 = PseudoMove killed $r0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    $l0 = COPY $l1
    PseudoRET implicit $lr, implicit $l0
...

# Same as above, but l0 is used by the calling convention. It's therefore
# not callee-saved.
---
name:            no_save_L
calleeSavedRegisters: [ '$lr', '$r20', '$r21', '$r22', '$r23', '$p6', '$p7' ]
body:             |
  bb.0:
    liveins: $l1

    ; CHECK-LABEL: name: no_save_L
    ; CHECK: liveins: $l1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $l0 = COPY $l1
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    $l0 = COPY $l1
    PseudoRET implicit $lr, implicit $l0
...

# Similar to no_save_L, but write to $l0's subregs instead.
---
name:            no_save_L_subregs
calleeSavedRegisters: [ '$lr', '$r18', '$r19', '$r20', '$r21', '$r22', '$r23', '$p6', '$p7' ]
body:             |
  bb.0:
    liveins: $l0

    ; CHECK-LABEL: name: no_save_L_subregs
    ; CHECK: liveins: $l0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r16 = COPY $r0
    ; CHECK-NEXT: $r17 = COPY $r1
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    $r16 = COPY $r0
    $r17 = COPY $r1
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...

# Here, only $l0.sub_hi (r17) is callee-saved, not $l0.sub_lo (r16).
# Given that $l0 is re-defined, r17 should be saved.
---
name:            save_partial_L
calleeSavedRegisters: [ '$lr', '$r17', '$r18', '$r19', '$r20', '$r21', '$r22', '$r23', '$p6', '$p7' ]
body:             |
  bb.0:
    liveins: $l1

    ; CHECK-LABEL: name: save_partial_L
    ; CHECK: liveins: $l1, $r17
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $r0 = PseudoMove killed $r17
    ; CHECK-NEXT: $l0 = COPY $l1
    ; CHECK-NEXT: $r17 = PseudoMove killed $r0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    $l0 = COPY $l1
    PseudoRET implicit $lr, implicit $l0
...
