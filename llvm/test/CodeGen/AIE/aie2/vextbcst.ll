; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 %s -o - | FileCheck %s

define dso_local noundef <64 x i8> @_Z19test_broadcast_elemDv64_ai(<64 x i8> noundef %v, i32 noundef %idx) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv64_ai:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.8 x0, x2, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <64 x i8> @llvm.aie2.vextract.broadcast8.I512(<64 x i8> %v, i32 %idx)
  ret <64 x i8> %0
}

define dso_local noundef <32 x i16> @_Z19test_broadcast_elemDv32_si(<32 x i16> noundef %v, i32 noundef %idx) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv32_si:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.16 x0, x2, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.vextract.broadcast16.I512(<32 x i16> %v, i32 %idx)
  ret <32 x i16> %0
}

define dso_local noundef <16 x i32> @_Z19test_broadcast_elemDv16_ii(<16 x i32> noundef %v, i32 noundef %idx) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv16_ii:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.32 x0, x2, r0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vextract.broadcast32.I512(<16 x i32> %v, i32 %idx)
  ret <16 x i32> %0
}

define dso_local noundef <64 x i8> @_Z19test_broadcast_elemDv64_a(<64 x i8> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv64_a:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.8 x0, x2, #0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <64 x i8> @llvm.aie2.vextract.broadcast8.I512(<64 x i8> %v, i32 0)
  ret <64 x i8> %0
}

define dso_local noundef <32 x i16> @_Z19test_broadcast_elemDv32_s(<32 x i16> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv32_s:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.16 x0, x2, #16 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <32 x i16> @llvm.aie2.vextract.broadcast16.I512(<32 x i16> %v, i32 16)
  ret <32 x i16> %0
}

define dso_local noundef <16 x i32> @_Z19test_broadcast_elemDv16_i(<16 x i32> noundef %v) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_broadcast_elemDv16_i:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    vextbcst.32 x0, x2, #31 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <16 x i32> @llvm.aie2.vextract.broadcast32.I512(<16 x i32> %v, i32 31)
  ret <16 x i32> %0
}

declare <64 x i8> @llvm.aie2.vextract.broadcast8.I512(<64 x i8>, i32) #1
declare <32 x i16> @llvm.aie2.vextract.broadcast16.I512(<32 x i16>, i32) #1
declare <16 x i32> @llvm.aie2.vextract.broadcast32.I512(<16 x i32>, i32) #1
