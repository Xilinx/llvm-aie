# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc -mtriple aie2 -run-pass=aie-machine-alignment %s -verify-machineinstrs -o - | FileCheck %s
# Checks for Block Alignments
---
name:            f0
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f0
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f1
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f1
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   $r0 = MOVA_lda_cg 0
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT:   NOPXM
    ; CHECK-NEXT:   NOPV
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = MOVA_lda_cg 0
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f2
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f2
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT:   $r0 = MOVXM_lng_cg 1
    ; CHECK-NEXT:   NOPV
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = MOVXM_lng_cg 1
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f3
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f3
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT:   $p0 = MOV_mv_scl $p1
    ; CHECK-NEXT:   NOPV
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = OR $r0,$r1
      $p0 = MOV_mv_scl $p1
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f4
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f4
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   ST_dms_sts_idx_imm $r0, $p2, 0
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT:   $p0 = MOV_mv_scl $p1
    ; CHECK-NEXT:   NOPV
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = OR $r0,$r1
      ST_dms_sts_idx_imm $r0, $p2, 0
      $p0 = MOV_mv_scl $p1
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f5
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f5
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
    ; CHECK-NEXT:   ST_dms_sts_idx_imm $r0, $p2, 0
    ; CHECK-NEXT:   $r0 = MOVXM_lng_cg 32
    ; CHECK-NEXT:   NOPV
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = MOVXM_lng_cg 32
      ST_dms_sts_idx_imm $r0, $p2, 0
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
---
name:            f6
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: f6
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   NOPB
    ; CHECK-NEXT:   $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
    ; CHECK-NEXT:   ST_dms_sts_idx_imm $r0, $p2, 0
    ; CHECK-NEXT:   NOPX
    ; CHECK-NEXT:   $p0 = MOV_mv_scl $p1
    ; CHECK-NEXT:   $cm0 = VMAC_vmac_cm_core_dense $cm1, $x0, $x1, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOPA
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   NOP
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $p0 = MOV_mv_scl $p1
      ST_dms_sts_idx_imm $r0, $p2, 0
      $p0 = PADDA_lda_ptr_inc_idx_imm $p0, 4
      $cm0 = VMAC_vmac_cm_core_dense $cm1, $x0, $x1, $r1
    }
    BUNDLE {
      RET implicit $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier implicit killed $r0
...
