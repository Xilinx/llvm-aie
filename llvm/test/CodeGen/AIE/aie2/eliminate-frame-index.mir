# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -verify-machineinstrs --march=aie2 -run-pass=prologepilog %s -o - | FileCheck %s

# Note that the "offset" mentionned in the stack objects in irrelevant. It is
# re-computed by the prologepilog pass in AdjustStackOffset().

---
name:            test_scl
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_scl
    ; CHECK: frame-setup PADD_sp_imm_pseudo 32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r2 = LDA_dms_spill -28, implicit $sp
    ; CHECK-NEXT: ST_dms_spill $r2, -28, implicit $sp
    $r2 = LDA_dms_spill %stack.1, implicit $sp
    ST_dms_spill $r2, %stack.1, implicit $sp
...

---
name:            test_d
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 16, alignment: 4 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_d
    ; CHECK: frame-setup PADD_sp_imm_pseudo 32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $d2 = LDA_D_SPILL -28, implicit $sp :: (load (s128) from %stack.1, align 4)
    ; CHECK-NEXT: ST_D_SPILL $d2, -28, implicit $sp :: (store (s128) into %stack.1, align 4)
    $d2 = LDA_D_SPILL %stack.1, implicit $sp :: (load (s128) from %stack.1, align 4)
    ST_D_SPILL $d2, %stack.1, implicit $sp :: (store (s128) into %stack.1, align 4)
...

---
name:            test_ds
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 32, alignment: 4 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_ds
    ; CHECK: frame-setup PADD_sp_imm_pseudo 64, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $d2_3d = LDA_DS_SPILL -60, implicit $sp
    ; CHECK-NEXT: ST_DS_SPILL $d2_3d, -60, implicit $sp
    $d2_3d = LDA_DS_SPILL %stack.1, implicit $sp
    ST_DS_SPILL $d2_3d, %stack.1, implicit $sp
...

---
name:            test_vec64
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_vec64
    ; CHECK: frame-setup PADD_sp_imm_pseudo 32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $l7 = VLDA_L_SPILL -24, implicit $sp
    ; CHECK-NEXT: VST_L_SPILL $l7, -24, implicit $sp
    $l7 = VLDA_L_SPILL %stack.1, implicit $sp
    VST_L_SPILL $l7, %stack.1, implicit $sp
...

---
name:            test_vec256
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 32, alignment: 32 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_vec256
    ; CHECK: frame-setup PADD_sp_imm_pseudo 64, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $wl1 = VLDA_dmw_lda_w_ag_spill -32, implicit $sp
    ; CHECK-NEXT: VST_dmw_sts_w_ag_spill $wl1, -32, implicit $sp
    $wl1 = VLDA_dmw_lda_w_ag_spill %stack.1, implicit $sp
    VST_dmw_sts_w_ag_spill $wl1, %stack.1, implicit $sp
...

---
name:            test_vec512
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 64, alignment: 32 }
body:             |
  bb.0 (align 16):

    ; CHECK-LABEL: name: test_vec512
    ; CHECK: frame-setup PADD_sp_imm_pseudo 96, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $x1 = VLDA_X_SPILL -64, implicit $sp
    ; CHECK-NEXT: VST_X_SPILL $x1, -64, implicit $sp
    $x1 = VLDA_X_SPILL %stack.1, implicit $sp
    VST_X_SPILL $x1, %stack.1, implicit $sp
...

---
name:            test_vec1024
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 128, alignment: 32 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_vec1024
    ; CHECK: frame-setup PADD_sp_imm_pseudo 160, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $y3 = VLDA_Y_SPILL -128, implicit $sp
    ; CHECK-NEXT: VST_Y_SPILL $y3, -128, implicit $sp
    $y3 = VLDA_Y_SPILL %stack.1, implicit $sp
    VST_Y_SPILL $y3, %stack.1, implicit $sp
...

---
name:            test_acc256
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 32, alignment: 32 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_acc256
    ; CHECK: frame-setup PADD_sp_imm_pseudo 64, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $amll1 = VLDA_dmw_lda_am_ag_spill -32, implicit $sp
    ; CHECK-NEXT: VST_dmw_sts_am_ag_spill $amll1, -32, implicit $sp
    $amll1 = VLDA_dmw_lda_am_ag_spill %stack.1, implicit $sp
    VST_dmw_sts_am_ag_spill $amll1, %stack.1, implicit $sp
...

---
name:            test_acc512
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 64, alignment: 32 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_acc512
    ; CHECK: frame-setup PADD_sp_imm_pseudo 96, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $bml1 = VLDA_BM_SPILL -64, implicit $sp
    ; CHECK-NEXT: VST_BM_SPILL $bml1, -64, implicit $sp
    $bml1 = VLDA_BM_SPILL %stack.1, implicit $sp
    VST_BM_SPILL $bml1, %stack.1, implicit $sp
...

---
name:            test_acc1024
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 128, alignment: 32 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_acc1024
    ; CHECK: frame-setup PADD_sp_imm_pseudo 160, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $cm3 = VLDA_CM_SPILL -128, implicit $sp
    ; CHECK-NEXT: VST_CM_SPILL $cm3, -128, implicit $sp
    $cm3 = VLDA_CM_SPILL %stack.1, implicit $sp
    VST_CM_SPILL $cm3, %stack.1, implicit $sp
...

---
name:            test_vec128
alignment:       16
stack:
  - { id: 0, name: '', type: spill-slot, offset: 0, size: 4, alignment: 4 }
  - { id: 1, name: '', type: spill-slot, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0 (align 16):
    ; CHECK-LABEL: name: test_vec128
    ; CHECK: frame-setup PADD_sp_imm_pseudo 32, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $q1 = LDA_dmv_lda_q_ag_spill -16, implicit $sp
    ; CHECK-NEXT: ST_dmv_sts_q_ag_spill $q1, -16, implicit $sp
    $q1 = LDA_dmv_lda_q_ag_spill %stack.1, implicit $sp
    ST_dmv_sts_q_ag_spill $q1, %stack.1, implicit $sp
...
