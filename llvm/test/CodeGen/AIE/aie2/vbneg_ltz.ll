; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 --issue-limit=1 %s -o - | FileCheck %s

define dso_local noundef <64 x i8> @_Z22test_bneg_ltz_v64uint8Dv64_hRy(<64 x i8> noundef %a, ptr nocapture nonnull writeonly align 4 dereferenceable(8) %cmp) local_unnamed_addr #0 {
; CHECK-LABEL: _Z22test_bneg_ltz_v64uint8Dv64_hRy:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm ; nops
; CHECK-NEXT:    mova r0, #-1 // Delay Slot 5
; CHECK-NEXT:    vbneg_ltz.s8 x0, r25:r24, x2 // Delay Slot 4
; CHECK-NEXT:    st r0, [p0], #4 // Delay Slot 3
; CHECK-NEXT:    st r0, [p0, #0] // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call { <64 x i8>, <2 x i32> } @llvm.aie2.vbneg.ltz8(<64 x i8> %a)
  %1 = extractvalue { <64 x i8>, <2 x i32> } %0, 0
  store i64 -1, ptr %cmp, align 4
  ret <64 x i8> %1
}

define dso_local noundef <32 x i16> @_Z23test_bneg_ltz_v32uint16Dv32_tRj(<32 x i16> noundef %a, ptr nocapture nonnull writeonly align 4 dereferenceable(4) %cmp) local_unnamed_addr #0 {
; CHECK-LABEL: _Z23test_bneg_ltz_v32uint16Dv32_tRj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm
; CHECK-NEXT:    mov r1, r16 // Delay Slot 5
; CHECK-NEXT:    mova r0, #-1 // Delay Slot 4
; CHECK-NEXT:    vbneg_ltz.s16 x0, r16, x2 // Delay Slot 3
; CHECK-NEXT:    st r0, [p0, #0] // Delay Slot 2
; CHECK-NEXT:    mov r16, r1 // Delay Slot 1
entry:
  %0 = tail call { <32 x i16>, i32 } @llvm.aie2.vbneg.ltz16(<32 x i16> %a)
  %1 = extractvalue { <32 x i16>, i32 } %0, 0
  store i32 -1, ptr %cmp, align 4
  ret <32 x i16> %1
}

define dso_local noundef <16 x i32> @_Z23test_bneg_ltz_v16uint32Dv16_jRj(<16 x i32> noundef %a, ptr nocapture nonnull writeonly align 4 dereferenceable(4) %cmp) local_unnamed_addr #0 {
; CHECK-LABEL: _Z23test_bneg_ltz_v16uint32Dv16_jRj:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    nopa ; nopb ; ret lr ; nopm
; CHECK-NEXT:    mov r1, r16 // Delay Slot 5
; CHECK-NEXT:    mova r0, #-1 // Delay Slot 4
; CHECK-NEXT:    vbneg_ltz.s32 x0, r16, x2 // Delay Slot 3
; CHECK-NEXT:    st r0, [p0, #0] // Delay Slot 2
; CHECK-NEXT:    mov r16, r1 // Delay Slot 1
entry:
  %0 = tail call { <16 x i32>, i32 } @llvm.aie2.vbneg.ltz32(<16 x i32> %a)
  %1 = extractvalue { <16 x i32>, i32 } %0, 0
  store i32 -1, ptr %cmp, align 4
  ret <16 x i32> %1
}

declare { <64 x i8>, <2 x i32> } @llvm.aie2.vbneg.ltz8(<64 x i8>) #1
declare { <32 x i16>, i32 } @llvm.aie2.vbneg.ltz16(<32 x i16>) #1
declare { <16 x i32>, i32 } @llvm.aie2.vbneg.ltz32(<16 x i32>) #1
