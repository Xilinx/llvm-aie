; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie2 --issue-limit=1 -verify-machineinstrs -o - < %s \
; RUN:   | FileCheck %s

; check that odd offsets from sp don't use thee immediate padda

define void @f() {
; CHECK-LABEL: f:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    paddb [sp], #32
; CHECK-NEXT:    mova m0, #-27
; CHECK-NEXT:    st lr, [sp, #-32] // 4-byte Folded Spill
; CHECK-NEXT:    jl #f0
; CHECK-NEXT:    mov p0, sp // Delay Slot 5
; CHECK-NEXT:    mov p1, sp // Delay Slot 4
; CHECK-NEXT:    paddb [p0], #-28 // Delay Slot 3
; CHECK-NEXT:    paddb [p1], m0 // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
; CHECK-NEXT:    lda lr, [sp, #-32] // 4-byte Folded Reload
; CHECK-NEXT:    nop
; CHECK-NEXT:    nop
; CHECK-NEXT:    nop
; CHECK-NEXT:    nop
; CHECK-NEXT:    nop
; CHECK-NEXT:    nop
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    paddb [sp], #-32 // Delay Slot 1
entry:
  %x = alloca i8, align 1
  %y = alloca i8, align 1
  call void @f0(ptr %x, ptr %y)
  ret void
}

declare void @f0(ptr, ptr)
