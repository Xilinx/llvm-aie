# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=aie-finalize-mi-bundles %s -verify-machineinstrs -o - | FileCheck %s
...
---
name: bundle_test_first_insn
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_test_first_insn
    ; CHECK: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   $r3 = OR $r1, $r2
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit $lr {
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r0 = OR $r0,$r1
    BUNDLE {
      $r3 = OR $r1, $r2
      NOPS
    }

    RET implicit $lr
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_test_bundled_first_insn
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_test_bundled_first_insn
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   $r0 = AND $r0, $r1
    ; CHECK-NEXT:   $r2 = MOV_mv_cg 4
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   $r3 = OR $r1, $r2
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit $lr {
    ; CHECK-NEXT:   RET implicit $lr
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    BUNDLE {
      $r0 = AND $r0,$r1
      $r2 = MOV_mv_cg 4
    }
    BUNDLE {
      $r3 = OR $r1, $r2
      NOPS
    }

    RET implicit $lr
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_test_single_insn
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_test_single_insn
    ; CHECK: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r1
    ; CHECK-NEXT: }
    $r0 = AND $r0,$r1
...
---
name: bundle_implicit_first_standalone_insns
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_implicit_first_standalone_insns
    ; CHECK: $r0 = IMPLICIT_DEF
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r0 = IMPLICIT_DEF
    $r0 = OR $r0,$r1
    $r0 = AND $r0,$r1
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_implicit_first_standalone_bundled
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_implicit_first_standalone_bundled
    ; CHECK: $r0 = IMPLICIT_DEF
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   $r3 = OR $r0, $r2
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r3 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r3
    ; CHECK-NEXT: }
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r0 = IMPLICIT_DEF
    BUNDLE {
      $r3 = OR $r0, $r2
      NOPS
    }
    $r0 = AND $r0,$r3
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_implicit_middle
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_implicit_middle
    ; CHECK: BUNDLE implicit-def $r0, implicit $r0, implicit $r3 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r3
    ; CHECK-NEXT: }
    ; CHECK-NEXT: $r0 = IMPLICIT_DEF
    ; CHECK-NEXT: BUNDLE implicit-def $r4, implicit $r0, implicit $r4 {
    ; CHECK-NEXT:   $r4 = OR $r0, $r4
    ; CHECK-NEXT: }
    $r0 = AND $r0,$r3
    $r0 = IMPLICIT_DEF
    $r4 = OR $r0, $r4
...
---
name: bundle_implicit_last_standalone_insns
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_implicit_last_standalone_insns
    ; CHECK: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: $r0 = IMPLICIT_DEF
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r0 = OR $r0,$r1
    $r0 = AND $r0,$r1
    $r0 = IMPLICIT_DEF
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_all_bundled
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_all_bundled
    ; CHECK: BUNDLE {
    ; CHECK-NEXT:   $r0 = AND $r0, $r1
    ; CHECK-NEXT:   $r2 = MOV_mv_cg 4
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   $r4 = MOV_mv_cg 8
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE {
    ; CHECK-NEXT:   $r4 = OR $r0, $r4
    ; CHECK-NEXT:   NOPS
    ; CHECK-NEXT: }
    BUNDLE {
      $r0 = AND $r0,$r1
      $r2 = MOV_mv_cg 4
    }
    BUNDLE {
      $r4 = MOV_mv_cg 8
    }
    BUNDLE {
      $r4 = OR $r0, $r4
      NOPS
    }
...
---
name: bundle_all_meta
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_all_meta
    ; CHECK: $r0 = IMPLICIT_DEF
    ; CHECK-NEXT: $r1 = IMPLICIT_DEF
    ; CHECK-NEXT: $r2 = IMPLICIT_DEF
    ; CHECK-NEXT: $r3 = IMPLICIT_DEF
    ; CHECK-NEXT: DelayedSchedBarrier implicit killed $r0
    $r0 = IMPLICIT_DEF
    $r1 = IMPLICIT_DEF
    $r2 = IMPLICIT_DEF
    $r3 = IMPLICIT_DEF
    DelayedSchedBarrier implicit killed $r0
...
---
name: bundle_all_standalone
alignment:       16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: bundle_all_standalone
    ; CHECK: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r2 {
    ; CHECK-NEXT:   $r2 = MOV_mv_cg 4
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r2 {
    ; CHECK-NEXT:   $r0 = AND $r0, $r2
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r1 {
    ; CHECK-NEXT:   $r1 = MOV_mv_cg 4
    ; CHECK-NEXT: }
    ; CHECK-NEXT: BUNDLE implicit-def $r0, implicit $r0, implicit $r1 {
    ; CHECK-NEXT:   $r0 = OR $r0, $r1
    ; CHECK-NEXT: }
    $r0 = OR $r0,$r1
    $r2 = MOV_mv_cg 4
    $r0 = AND $r0,$r2
    $r1 = MOV_mv_cg 4
    $r0 = OR $r0,$r1
...
