; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates

; RUN: llc -O2 -mtriple=aie2 --issue-limit=1 %s -o - | FileCheck %s

define i32 @test_div_step(i32 noundef %a, i32 noundef %b, ptr nocapture nonnull align 4 dereferenceable(4) %remainder) {
; CHECK-LABEL: test_div_step:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    mov r31, r1 // Delay Slot 4
; CHECK-NEXT:    mova r0, #0 // Delay Slot 3
; CHECK-NEXT:    divs r0, r31, r0, r2 // Delay Slot 2
; CHECK-NEXT:    mov r0, r31 // Delay Slot 1
entry:
  %0 = tail call { i32, i32 } @llvm.aie2.divs(i32 %a, i32 0, i32 %b)
  %1 = extractvalue { i32, i32 } %0, 1
  ret i32 %1
}

define i32 @test_mod_step(i32 noundef %a, i32 noundef %b) {
; CHECK-LABEL: test_mod_step:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    mov r31, r1 // Delay Slot 3
; CHECK-NEXT:    mova r0, #0 // Delay Slot 2
; CHECK-NEXT:    divs r0, r31, r0, r2 // Delay Slot 1
entry:
  %0 = tail call { i32, i32 } @llvm.aie2.divs(i32 %a, i32 0, i32 %b)
  %1 = extractvalue { i32, i32 } %0, 0
  ret i32 %1
}

; Function Attrs: nofree nosync nounwind memory(none)
declare { i32, i32 } @llvm.aie2.divs(i32, i32, i32) #1
