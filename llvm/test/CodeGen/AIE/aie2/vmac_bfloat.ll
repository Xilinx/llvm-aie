; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -O2 -mtriple=aie2 --issue-limit=1 %s -o - | FileCheck %s


define dso_local noundef <8 x i64> @_Z16test_mul_4x8_8x4Dv32_u6__bf16S_(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b) local_unnamed_addr #0 {
; CHECK-LABEL: _Z16test_mul_4x8_8x4Dv32_u6__bf16S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopb ; nopxm ; nops
; CHECK-NEXT:    vmul.f bml0, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %a, <32 x bfloat> %b, i32 28)
  ret <8 x i64> %0
}

define dso_local noundef <8 x i64> @_Z19test_negmul_4x8_8x4Dv32_u6__bf16S_(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_negmul_4x8_8x4Dv32_u6__bf16S_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopb ; nopxm ; nops
; CHECK-NEXT:    vnegmul.f bml0, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.negmul16.conf(<32 x bfloat> %a, <32 x bfloat> %b, i32 28)
  ret <8 x i64> %0
}

define dso_local noundef <8 x i64> @_Z16test_mac_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloat(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b, <8 x i64> noundef %acc1) local_unnamed_addr #0 {
; CHECK-LABEL: _Z16test_mac_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloat:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopb ; nopxm ; nops
; CHECK-NEXT:    vmac.f bml0, bml1, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.mac16.conf(<32 x bfloat> %a, <32 x bfloat> %b, <8 x i64> %acc1, i32 28)
  ret <8 x i64> %0
}

define dso_local noundef <8 x i64> @_Z16test_msc_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloat(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b, <8 x i64> noundef %acc1) local_unnamed_addr #0 {
; CHECK-LABEL: _Z16test_msc_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloat:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopb ; nopxm ; nops
; CHECK-NEXT:    vmsc.f bml0, bml1, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.msc16.conf(<32 x bfloat> %a, <32 x bfloat> %b, <8 x i64> %acc1, i32 28)
  ret <8 x i64> %0
}

define dso_local noundef <8 x i64> @_Z19test_addmac_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloatS0_(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b, <8 x i64> noundef %acc1, <8 x i64> noundef %acc2) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_addmac_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloatS0_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopxm
; CHECK-NEXT:    vmov bml0, bml1
; CHECK-NEXT:    vaddmac.f bml0, bml0, bml2, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.addmac16.conf(<32 x bfloat> %a, <32 x bfloat> %b, <8 x i64> %acc1, <8 x i64> %acc2, i32 28)
  ret <8 x i64> %0
}

define dso_local noundef <8 x i64> @_Z19test_addmsc_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloatS0_(<32 x bfloat> noundef %a, <32 x bfloat> noundef %b, <8 x i64> noundef %acc1, <8 x i64> noundef %acc2) local_unnamed_addr #0 {
; CHECK-LABEL: _Z19test_addmsc_4x8_8x4Dv32_u6__bf16S_Dv16_u10__accfloatS0_:
; CHECK:         .p2align 4
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mova r0, #28; nopxm
; CHECK-NEXT:    vmov bml0, bml1
; CHECK-NEXT:    vaddmsc.f bml0, bml0, bml2, x0, x2, r0
; CHECK-NEXT:    ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
entry:
  %0 = tail call <8 x i64> @llvm.aie2.bf.addmsc16.conf(<32 x bfloat> %a, <32 x bfloat> %b, <8 x i64> %acc1, <8 x i64> %acc2, i32 28)
  ret <8 x i64> %0
}


declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #1
declare <8 x i64> @llvm.aie2.bf.negmul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #1
declare <8 x i64> @llvm.aie2.bf.mac16.conf(<32 x bfloat>, <32 x bfloat>, <8 x i64>, i32) #1
declare <8 x i64> @llvm.aie2.bf.msc16.conf(<32 x bfloat>, <32 x bfloat>, <8 x i64>, i32) #1
declare <8 x i64> @llvm.aie2.bf.addmac16.conf(<32 x bfloat>, <32 x bfloat>, <8 x i64>, <8 x i64>, i32) #1
declare <8 x i64> @llvm.aie2.bf.addmsc16.conf(<32 x bfloat>, <32 x bfloat>, <8 x i64>, <8 x i64>, i32) #1
