# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: not --crash llc -mtriple=aie2 -run-pass machineverifier -o /dev/null %s 2>&1 | FileCheck %s

# This test ensures that the Machine Verifier detects tied physical registers
# that don't match.

---
name:            tied_ok
alignment:       16
body:             |
  bb.0 (align 16):
    $p5, $dc3 = VST_2D_dmw_sts_w   $wl3, $p5, $d3
    $p5, $dc3 = VST_2D_dmw_sts_am  $amll3, $p5, $d3
    $p0, $dc7 = VST_2D_SRS_D16_S32 $p0, $d7, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc0 = VST_2D_SRS_S16_S32 $p2, $d0, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2 = VST_2D_SRS_D32_S64 $p5, $d2, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc5 = VST_2D_SRS_S32_S64 $p7, $d5, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc7 = VST_2D_SRS_D16_S64 $p0, $d7, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc0 = VST_2D_SRS_S16_S64 $p2, $d0, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2 = VST_2D_SRS_D8_S32  $p5, $d2, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc5 = VST_2D_SRS_S8_S32  $p7, $d5, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc7 = VST_2D_PACK_D4_D8 $p0, $d7, $x0, implicit $crsat, implicit $crpacksign
    $p1, $dc3 = VST_2D_PACK_D8_D16 $p1, $d3, $x1, implicit $crsat, implicit $crpacksign
    $p4, $dc2 = VST_2D_PACK_S4_S8 $p4, $d2, $x2, implicit $crsat
    $p6, $dc0 = VST_2D_PACK_S8_S16 $p6, $d0, $x3, implicit $crsat
    $p5, $dc3 = VST_2D_128   $wl3, $p5, $d3

...

# Virtual registers are not required to be tied.
---
name:            virtual_ok
alignment:       16
body:             |
  bb.0 (align 16):
    %0:ep = COPY $p0
    %10:ed = COPY $d0
    %30:ep, %31:edc = VST_2D_dmw_sts_w $wl3, %0, %10
    %40:ep, %41:edc = VST_2D_dmw_sts_am $amll3, %0, %10
    %50:ep, %51:edc = VST_2D_SRS_D16_S32 %0, %10, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %60:ep, %61:edc = VST_2D_SRS_S16_S32 %0, %10, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %70:ep, %71:edc = VST_2D_SRS_D32_S64 %0, %10, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %80:ep, %81:edc = VST_2D_SRS_S32_S64 %0, %10, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %90:ep, %91:edc = VST_2D_SRS_D16_S64 %0, %10, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %100:ep, %101:edc = VST_2D_SRS_S16_S64 %0, %10, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %110:ep, %111:edc = VST_2D_SRS_D8_S32  %0, %10, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %120:ep, %121:edc = VST_2D_SRS_S8_S32  %0, %10, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %130:ep, %131:edc = VST_2D_PACK_D4_D8 %0, %10, $x0, implicit $crsat, implicit $crpacksign
    %140:ep, %141:edc = VST_2D_PACK_D8_D16 %0, %10, $x1, implicit $crsat, implicit $crpacksign
    %150:ep, %151:edc = VST_2D_PACK_S4_S8 %0, %10, $x2, implicit $crsat
    %160:ep, %161:edc = VST_2D_PACK_S8_S16 %0, %10, $x3, implicit $crsat
    %170:ep, %171:edc = VST_2D_128 $wl3, %0, %10
...

---
name:            tied_nok
alignment:       16
body:             |
  bb.0 (align 16):
    ; CHECK-NOT: Bad machine code
    ; CHECK-COUNT-15: Bad machine code: Tied physical registers must match
    $p5, $dc3 = VST_2D_dmw_sts_w $wl3, $p5, $d1
    $p5, $dc3 = VST_2D_dmw_sts_am $amll3, $p5, $d1
    $p0, $dc0 = VST_2D_SRS_D16_S32 $p0, $d7, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc2 = VST_2D_SRS_S16_S32 $p2, $d0, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc5 = VST_2D_SRS_D32_S64 $p5, $d2, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc7 = VST_2D_SRS_S32_S64 $p7, $d5, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc0 = VST_2D_SRS_D16_S64 $p0, $d7, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc2 = VST_2D_SRS_S16_S64 $p2, $d0, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc5 = VST_2D_SRS_D8_S32  $p5, $d2, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc7 = VST_2D_SRS_S8_S32  $p7, $d5, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc7 = VST_2D_PACK_D4_D8 $p0, $d2, $x0, implicit $crsat, implicit $crpacksign
    $p1, $dc3 = VST_2D_PACK_D8_D16 $p1, $d5, $x1, implicit $crsat, implicit $crpacksign
    $p4, $dc2 = VST_2D_PACK_S4_S8 $p4, $d1, $x2, implicit $crsat
    $p6, $dc0 = VST_2D_PACK_S8_S16 $p6, $d4, $x3, implicit $crsat
    $p5, $dc3 = VST_2D_128 $wl3, $p5, $d1

    ; Below instructions have hasExtraSrcRegAllocReq and hasExtraDefRegAllocReq attributes
    ; which essentially bypass the register flags. The renamable attributes
    ; below should trigger no verification error.
    ; CHECK-NOT: Bad machine code
    $p5, renamable $dc3 = VST_2D_dmw_sts_w $wl3, $p5, renamable $d3
    $p5, renamable $dc3 = VST_2D_dmw_sts_am $amll3, $p5, renamable $d3
    $p0, renamable $dc0 = VST_2D_SRS_D16_S32 $p0, renamable $d0, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, renamable $dc2 = VST_2D_SRS_S16_S32 $p2, renamable $d2, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, renamable $dc5 = VST_2D_SRS_D32_S64 $p5, renamable $d5, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, renamable $dc7 = VST_2D_SRS_S32_S64 $p7, renamable $d7, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, renamable $dc0 = VST_2D_SRS_D16_S64 $p0, renamable $d0, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, renamable $dc2 = VST_2D_SRS_S16_S64 $p2, renamable $d2, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, renamable $dc5 = VST_2D_SRS_D8_S32  $p5, renamable $d5, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, renamable $dc7 = VST_2D_SRS_S8_S32  $p7, renamable $d7, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, renamable $dc7 = VST_2D_PACK_D4_D8 $p0, renamable $d7, $x0, implicit $crsat, implicit $crpacksign
    $p1, renamable $dc3 = VST_2D_PACK_D8_D16 $p1, renamable $d3, $x1, implicit $crsat, implicit $crpacksign
    $p4, renamable $dc2 = VST_2D_PACK_S4_S8 $p4, renamable $d2, $x2, implicit $crsat
    $p6, renamable $dc0 = VST_2D_PACK_S8_S16 $p6, renamable $d0, $x3, implicit $crsat
    $p5, renamable $dc3 = VST_2D_128 $wl3, $p5, renamable $d3
...
