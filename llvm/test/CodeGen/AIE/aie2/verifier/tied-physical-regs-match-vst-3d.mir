# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: not --crash llc -mtriple=aie2 -run-pass machineverifier -o /dev/null %s 2>&1 | FileCheck %s

# This test ensures that the Machine Verifier detects tied physical registers
# that don't match.

---
name:            tied_ok
alignment:       16
body:             |
  bb.0 (align 16):
    $p5, $dc3, $dc7 = VST_3D_dmw_sts_w   $wl3, $p5, $d3_3d
    $p5, $dc3, $dc7 = VST_3D_dmw_sts_am  $amll3, $p5, $d3_3d
    $p0, $dc0, $dc4 = VST_3D_SRS_D16_S32 $p0, $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc1, $dc5 = VST_3D_SRS_S16_S32 $p2, $d1_3d, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2, $dc6 = VST_3D_SRS_D32_S64 $p5, $d2_3d, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc3, $dc7 = VST_3D_SRS_S32_S64 $p7, $d3_3d, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc0, $dc4 = VST_3D_SRS_D16_S64 $p0, $d0_3d, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc1, $dc5 = VST_3D_SRS_S16_S64 $p2, $d1_3d, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2, $dc6 = VST_3D_SRS_D8_S32  $p5, $d2_3d, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc3, $dc7 = VST_3D_SRS_S8_S32  $p7, $d3_3d, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc0, $dc4 = VST_3D_PACK_D4_D8 $p0, $d0_3d, $x2, implicit $crsat, implicit $crpacksign
    $p1, $dc1, $dc5 = VST_3D_PACK_D8_D16 $p1, $d1_3d, $x4, implicit $crsat, implicit $crpacksign
    $p2, $dc2, $dc6 = VST_3D_PACK_S4_S8 $p2, $d2_3d, $x5, implicit $crsat
    $p3, $dc3, $dc7 = VST_3D_PACK_S8_S16 $p3, $d3_3d, $x6, implicit $crsat
    $p5, $dc3, $dc7 = VST_3D_128   $wl3, $p5, $d3_3d
...

# Virtual registers are not required to be tied.
---
name:            virtual_ok
alignment:       16
body:             |
  bb.0 (align 16):
    %0:ep = COPY $p0
    %10:eds = COPY $d0_3d
    %30:ep, %31:edc, %32:edc = VST_3D_dmw_sts_w $wl3, %0, %10
    %42:ep, %43:edc, %44:edc = VST_3D_dmw_sts_am $amll3, %0, %10
    %210:ep, %211:edc, %212:edc = VST_3D_SRS_D16_S32 %0, %10, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %220:ep, %221:edc, %222:edc = VST_3D_SRS_S16_S32 %0, %10, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %230:ep, %231:edc, %232:edc = VST_3D_SRS_D32_S64 %0, %10, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %240:ep, %241:edc, %242:edc = VST_3D_SRS_S32_S64 %0, %10, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %250:ep, %251:edc, %252:edc = VST_3D_SRS_D16_S64 %0, %10, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %260:ep, %261:edc, %262:edc = VST_3D_SRS_S16_S64 %0, %10, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %270:ep, %271:edc, %272:edc = VST_3D_SRS_D8_S32  %0, %10, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    %280:ep, %281:edc, %282:edc = VST_3D_SRS_S8_S32  %0, %10, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    %290:ep, %291:edc, %292:edc = VST_3D_PACK_D4_D8 %0, %10, $x2, implicit $crsat, implicit $crpacksign
    %300:ep, %301:edc, %302:edc = VST_3D_PACK_D8_D16 %0, %10, $x4, implicit $crsat, implicit $crpacksign
    %310:ep, %311:edc, %312:edc = VST_3D_PACK_S4_S8 %0, %10, $x5, implicit $crsat
    %320:ep, %321:edc, %322:edc = VST_3D_PACK_S8_S16 %0, %10, $x6, implicit $crsat
    %330:ep, %331:edc, %332:edc = VST_3D_128 $wl3, %0, %10
...

---
name:            tied_nok
alignment:       16
body:             |
  bb.0 (align 16):
    ; CHECK-NOT: Bad machine code
    ; CHECK-COUNT-15: Bad machine code: Tied physical registers must match
    $p5, $dc3, $dc5 = VST_3D_dmw_sts_w $wl3, $p5, $d1_3d
    $p5, $dc1, $dc7 = VST_3D_dmw_sts_am $amll3, $p5, $d1_3d
    $p0, $dc0, $dc1 = VST_3D_SRS_D16_S32 $p0, $d2_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc1, $dc2 = VST_3D_SRS_S16_S32 $p2, $d3_3d, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2, $dc3 = VST_3D_SRS_D32_S64 $p5, $d1_3d, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc3, $dc4 = VST_3D_SRS_S32_S64 $p7, $d0_3d, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc0, $dc4 = VST_3D_SRS_D16_S64 $p0, $d2_3d, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, $dc1, $dc5 = VST_3D_SRS_S16_S64 $p2, $d3_3d, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, $dc2, $dc6 = VST_3D_SRS_D8_S32  $p5, $d1_3d, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, $dc3, $dc7 = VST_3D_SRS_S8_S32  $p7, $d0_3d, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, $dc0, $dc6 = VST_3D_PACK_D4_D8 $p0, $d0_3d, $x2, implicit $crsat, implicit $crpacksign
    $p1, $dc2, $dc5 = VST_3D_PACK_D8_D16 $p1, $d1_3d, $x4, implicit $crsat, implicit $crpacksign
    $p2, $dc0, $dc6 = VST_3D_PACK_S4_S8 $p2, $d2_3d, $x5, implicit $crsat
    $p3, $dc3, $dc3 = VST_3D_PACK_S8_S16 $p3, $d3_3d, $x6, implicit $crsat
    $p5, $dc3, $dc5 = VST_3D_128 $wl3, $p5, $d1_3d

    ; Below instructions have hasExtraSrcRegAllocReq and hasExtraDefRegAllocReq attributes
    ; which essentially bypass the register flags. The renamable attributes
    ; below should trigger no verification error.
    ; CHECK-NOT: Bad machine code
    $p5, renamable $dc3, renamable $dc7 = VST_3D_dmw_sts_w $wl3, $p5, renamable $d3_3d
    $p5, renamable $dc3, renamable $dc7 = VST_3D_dmw_sts_am $amll2, $p5, renamable $d3_3d
    $p0, renamable $dc0, renamable $dc4 = VST_3D_SRS_D16_S32 $p0, renamable $d0_3d, $bml0, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, renamable $dc1, renamable $dc5 = VST_3D_SRS_S16_S32 $p2, renamable $d1_3d, $bml1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, renamable $dc2, renamable $dc6 = VST_3D_SRS_D32_S64 $p5, renamable $d2_3d, $bmh5, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, renamable $dc3, renamable $dc7 = VST_3D_SRS_S32_S64 $p7, renamable $d3_3d, $bmh7, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, renamable $dc0, renamable $dc4 = VST_3D_SRS_D16_S64 $p0, renamable $d0_3d, $cm1, $s1, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p2, renamable $dc1, renamable $dc5 = VST_3D_SRS_S16_S64 $p2, renamable $d1_3d, $cm2, $s2, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p5, renamable $dc2, renamable $dc6 = VST_3D_SRS_D8_S32  $p5, renamable $d2_3d, $cm3, $s3, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    $p7, renamable $dc3, renamable $dc7 = VST_3D_SRS_S8_S32  $p7, renamable $d3_3d, $cm4, $s0, implicit-def $srsrs_of, implicit $crsat, implicit $crrnd
    $p0, renamable $dc0, renamable $dc4 = VST_3D_PACK_D4_D8 $p0, renamable $d0_3d, $x2, implicit $crsat, implicit $crpacksign
    $p1, renamable $dc1, renamable $dc5 = VST_3D_PACK_D8_D16 $p1, renamable $d1_3d, $x4, implicit $crsat, implicit $crpacksign
    $p2, renamable $dc2, renamable $dc6 = VST_3D_PACK_S4_S8 $p2, renamable $d2_3d, $x5, implicit $crsat
    $p3, renamable $dc3, renamable $dc7 = VST_3D_PACK_S8_S16 $p3, renamable $d3_3d, $x6, implicit $crsat
    $p5, renamable $dc3, renamable $dc7 = VST_3D_128 $wl3, $p5, renamable $d3_3d
...
