#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc -mtriple=aie2 -start-after=aie-finalize-mi-bundles %s --filetype=obj -o - | \
# RUN: llvm-objdump --triple=aie2 -d - | FileCheck %s
---

# The bundled JL instructions will be delayslot filled with 5 nops;
# alignment padding for the return address will expand to have the
# return address aligned.
# The EVENT instructions (except the first) mark the return address and
# should sit on a 16 byte alignment. That's tested by checking the last
# hex digit of the address with the event instruction somewhere
# in the bundle. Padding mostly occurs in the first bundle, leaving
# the nops in the delay slots unchanged


# CHECK-LABEL: <test>:
# CHECK: event
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: jl
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: nop
# CHECK-NEXT: 0: {{.*}} event {{.*}}

# CHECK-LABEL: <test1>:
#CHECK: lda	p0, [p6, #0]
#CHECK-NEXT: jl
#CHECK-NEXT: nop	
#CHECK-NEXT: nop	
#CHECK-NEXT: nop	
#CHECK-NEXT: nop	
#CHECK-NEXT: nop
#CHECK-NEXT: 0: {{.*}} lda	p6, [sp, #-32]; {{.*}} mov	p2, r19
#CHECK-NEXT: lda	r0, [p2, #4];		mov	p3, r23

name:            test
body:             |
  bb.1.entry:
    BUNDLE {
      EVENT 0
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2
    BUNDLE {
      EVENT 0
    }
...
---
name:         test1
alignment:       16
body:             |
  bb.0.entry (align 16):
    liveins: $p6, $p7, $r16, $r18, $r19, $r20, $r21, $r22, $r23

    BUNDLE implicit-def $p0, implicit killed $p6 {
      renamable $p0 = LDA_dms_lda_idx_imm killed renamable $p6, 0 :: (dereferenceable load (p0))
    }
    BUNDLE implicit-def $lr {
      JL 32, implicit-def $lr
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    BUNDLE {
      NOP
    }
    DelayedSchedBarrier csr_aie2, implicit killed $p0
    BUNDLE implicit-def $p6, implicit-def $p2, implicit $sp, implicit $r19 {
      renamable $p6 = LDA_dms_spill -32, implicit $sp :: (load (s32))
      $p2 = MOV_mv_scl $r19
    }
    BUNDLE implicit-def $r0, implicit-def $p3, implicit $p2, implicit $r23 {
      renamable $r0 = LDA_dms_lda_idx_imm renamable $p2, 4 :: (dereferenceable load (p0))
      $p3 = MOV_mv_scl $r23
    }
...
