# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc --mtriple=aie2 --run-pass=instruction-select %s -o -  | FileCheck %s
---
name:            shouldMatch
alignment:       16
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $p1, $p2, $r0

    ; CHECK-LABEL: name: shouldMatch
    ; CHECK: liveins: $p1, $p2, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er27 = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ep = COPY $p2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY [[COPY1]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:er = COPY [[COPY2]]
    ; CHECK-NEXT: [[SELNEZ:%[0-9]+]]:er = SELNEZ [[COPY3]], [[COPY4]], [[COPY]]
    ; CHECK-NEXT: [[SELEQZ:%[0-9]+]]:er = SELEQZ [[COPY3]], [[COPY4]], [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[SELNEZ]], implicit [[SELEQZ]]
    %1:gprregbank(s32) = COPY $r0
    %2:ptrregbank(p0) = COPY $p1
    %3:ptrregbank(p0) = COPY $p2
    %6:gprregbank(s32) = G_CONSTANT i32 0
    %21:gprregbank(s32) = G_ICMP intpred(ne), %1(s32), %6
    %25:gprregbank(p0) = COPY %2(p0)
    %26:gprregbank(p0) = COPY %3(p0)
    %8:gprregbank(p0) = G_SELECT %21(s32), %25, %26
    %19:gprregbank(s32) = G_ICMP intpred(eq), %1(s32), %6
    %12:gprregbank(p0) = G_SELECT %19(s32), %25, %26
    PseudoRET implicit $lr, implicit %8, implicit %12

...
---
name:            shouldNotMatch
alignment:       16
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $p1, $p2, $r0

    ; CHECK-LABEL: name: shouldNotMatch
    ; CHECK: liveins: $p1, $p2, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ep = COPY $p2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 1
    ; CHECK-NEXT: [[NE:%[0-9]+]]:er27 = NE [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY [[COPY1]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:er = COPY [[COPY2]]
    ; CHECK-NEXT: [[SELNEZ:%[0-9]+]]:er = SELNEZ [[COPY3]], [[COPY4]], [[NE]]
    ; CHECK-NEXT: [[EQ:%[0-9]+]]:er27 = EQ [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: [[SELNEZ1:%[0-9]+]]:er = SELNEZ [[COPY3]], [[COPY4]], [[EQ]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[SELNEZ]], implicit [[SELNEZ1]]
    %1:gprregbank(s32) = COPY $r0
    %2:ptrregbank(p0) = COPY $p1
    %3:ptrregbank(p0) = COPY $p2
    %6:gprregbank(s32) = G_CONSTANT i32 1
    %21:gprregbank(s32) = G_ICMP intpred(ne), %1(s32), %6
    %25:gprregbank(p0) = COPY %2(p0)
    %26:gprregbank(p0) = COPY %3(p0)
    %8:gprregbank(p0) = G_SELECT %21(s32), %25, %26
    %19:gprregbank(s32) = G_ICMP intpred(eq), %1(s32), %6
    %12:gprregbank(p0) = G_SELECT %19(s32), %25, %26
    PseudoRET implicit $lr, implicit %8, implicit %12

...
