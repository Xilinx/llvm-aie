# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name: select_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $r6, $r7, $r8
    ; CHECK-LABEL: name: select_s32
    ; CHECK: liveins: $r6, $r7, $r8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er27 = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r8
    ; CHECK-NEXT: [[SELNEZ:%[0-9]+]]:er = SELNEZ [[COPY1]], [[COPY2]], [[COPY]]
    ; CHECK-NEXT: $r0 = COPY [[SELNEZ]]
    %0:gprregbank(s32) = COPY $r6
    %1:gprregbank(s32) = COPY $r7
    %2:gprregbank(s32) = COPY $r8
    %3:gprregbank(s32) = G_SELECT %0, %1, %2
    $r0 = COPY %3
...

---
name: select_p0
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0, $p1, $r6
    ; CHECK-LABEL: name: select_p0
    ; CHECK: liveins: $p0, $p1, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er27 = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ep = COPY $p1
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY [[COPY1]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:er = COPY [[COPY2]]
    ; CHECK-NEXT: [[SELNEZ:%[0-9]+]]:er = SELNEZ [[COPY3]], [[COPY4]], [[COPY]]
    ; CHECK-NEXT: $p0 = COPY [[SELNEZ]]
    %0:gprregbank(s32) = COPY $r6
    %1:ptrregbank(p0) = COPY $p0
    %2:ptrregbank(p0) = COPY $p1
    %3:gprregbank(p0) = COPY %1
    %4:gprregbank(p0) = COPY %2
    %5:gprregbank(p0) = G_SELECT %0, %3, %4
    $p0 = COPY %5
...

---
name: select_v256
legalized: true
regBankSelected: true
body: |
  bb.1.entry:
    liveins: $r0, $wl2, $wl4
    ; CHECK-LABEL: name: select_v256
    ; CHECK: liveins: $r0, $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ewl = COPY $wl2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ewl = COPY $wl4
    ; CHECK-NEXT: [[ADD_add_r_ri:%[0-9]+]]:ers8 = ADD_add_r_ri [[COPY]], -1, implicit-def dead $srcarry
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY2]], %subreg.sub_256_lo
    ; CHECK-NEXT: [[REG_SEQUENCE1:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_lo
    ; CHECK-NEXT: [[VSEL_32_:%[0-9]+]]:mxm = VSEL_32 [[REG_SEQUENCE1]], [[REG_SEQUENCE]], [[ADD_add_r_ri]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:ewl = COPY [[VSEL_32_]].sub_256_lo
    ; CHECK-NEXT: $wl0 = COPY [[COPY3]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %4:gprregbank(s32) = COPY $r0
    %5:gprregbank(s32) = G_ASSERT_ZEXT %4:gprregbank, 1
    %2:vregbank(<8 x s32>) = COPY $wl2
    %3:vregbank(<8 x s32>) = COPY $wl4
    %0:vregbank(<8 x s32>) = G_SELECT %5:gprregbank(s32), %2:vregbank, %3:vregbank
    $wl0 = COPY %0:vregbank(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name: select_v512
legalized: true
regBankSelected: true
body: |
  bb.1.entry:
    liveins: $r0, $x2, $x4
    ; CHECK-LABEL: name: select_v512
    ; CHECK: liveins: $r0, $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x4
    ; CHECK-NEXT: [[ADD_add_r_ri:%[0-9]+]]:ers8 = ADD_add_r_ri [[COPY]], -1, implicit-def dead $srcarry
    ; CHECK-NEXT: [[VSEL_32_:%[0-9]+]]:vec512 = VSEL_32 [[COPY1]], [[COPY2]], [[ADD_add_r_ri]]
    ; CHECK-NEXT: $x0 = COPY [[VSEL_32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %4:gprregbank(s32) = COPY $r0
    %5:gprregbank(s32) = G_ASSERT_ZEXT %4:gprregbank, 1
    %2:vregbank(<16 x s32>) = COPY $x2
    %3:vregbank(<16 x s32>) = COPY $x4
    %0:vregbank(<16 x s32>) = G_SELECT %5:gprregbank(s32), %2:vregbank, %3:vregbank
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name: select_v1024
legalized: true
regBankSelected: true
body: |
  bb.1.entry:
    liveins: $r0, $y3, $y4
    ; CHECK-LABEL: name: select_v1024
    ; CHECK: liveins: $r0, $y3, $y4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec1024 = COPY $y3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec1024 = COPY $y4
    ; CHECK-NEXT: [[ADD_add_r_ri:%[0-9]+]]:ers8 = ADD_add_r_ri [[COPY]], -1, implicit-def dead $srcarry
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:exo = COPY [[COPY2]].sub_512_hi
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:exo = COPY [[COPY1]].sub_512_hi
    ; CHECK-NEXT: [[VSEL_32_:%[0-9]+]]:exo = VSEL_32 [[COPY4]], [[COPY3]], [[ADD_add_r_ri]]
    ; CHECK-NEXT: [[ADD_add_r_ri1:%[0-9]+]]:ers8 = ADD_add_r_ri [[COPY]], -1, implicit-def dead $srcarry
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:exe = COPY [[COPY2]].sub_512_lo
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:exe = COPY [[COPY1]].sub_512_lo
    ; CHECK-NEXT: [[VSEL_32_1:%[0-9]+]]:exe = VSEL_32 [[COPY6]], [[COPY5]], [[ADD_add_r_ri1]]
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec1024 = REG_SEQUENCE [[VSEL_32_1]], %subreg.sub_512_lo, [[VSEL_32_]], %subreg.sub_512_hi
    ; CHECK-NEXT: $y2 = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $y2
    %4:gprregbank(s32) = COPY $r0
    %5:gprregbank(s32) = G_ASSERT_ZEXT %4:gprregbank, 1
    %2:vregbank(<32 x s32>) = COPY $y3
    %3:vregbank(<32 x s32>) = COPY $y4
    %0:vregbank(<32 x s32>) = G_SELECT %5:gprregbank(s32), %2:vregbank, %3:vregbank
    $y2 = COPY %0:vregbank(<32 x s32>)
    PseudoRET implicit $lr, implicit $y2
...
