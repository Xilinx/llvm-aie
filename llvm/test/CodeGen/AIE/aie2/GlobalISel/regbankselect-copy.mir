# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s

---
name: COPY_gpr
legalized: true

body: |
  bb.0:
    ; CHECK-LABEL: name: COPY_gpr
    ; CHECK: [[COPY:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(s32) = COPY $r2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gprregbank(s32) = COPY $r3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gprregbank(s32) = COPY $r4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:gprregbank(s32) = COPY $r5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:gprregbank(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:gprregbank(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:gprregbank(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:gprregbank(s32) = COPY $r9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:gprregbank(s32) = COPY $r10
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:gprregbank(s32) = COPY $r11
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:gprregbank(s32) = COPY $r12
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:gprregbank(s32) = COPY $r13
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:gprregbank(s32) = COPY $r14
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:gprregbank(s32) = COPY $r15
    ; CHECK-NEXT: [[COPY16:%[0-9]+]]:gprregbank(s32) = COPY $r16
    ; CHECK-NEXT: [[COPY17:%[0-9]+]]:gprregbank(s32) = COPY $r17
    ; CHECK-NEXT: [[COPY18:%[0-9]+]]:gprregbank(s32) = COPY $r18
    ; CHECK-NEXT: [[COPY19:%[0-9]+]]:gprregbank(s32) = COPY $r19
    ; CHECK-NEXT: [[COPY20:%[0-9]+]]:gprregbank(s32) = COPY $r20
    ; CHECK-NEXT: [[COPY21:%[0-9]+]]:gprregbank(s32) = COPY $r21
    ; CHECK-NEXT: [[COPY22:%[0-9]+]]:gprregbank(s32) = COPY $r22
    ; CHECK-NEXT: [[COPY23:%[0-9]+]]:gprregbank(s32) = COPY $r23
    ; CHECK-NEXT: [[COPY24:%[0-9]+]]:gprregbank(s32) = COPY $r24
    ; CHECK-NEXT: [[COPY25:%[0-9]+]]:gprregbank(s32) = COPY $r25
    ; CHECK-NEXT: [[COPY26:%[0-9]+]]:gprregbank(s32) = COPY $r26
    ; CHECK-NEXT: [[COPY27:%[0-9]+]]:gprregbank(s32) = COPY $r27
    ; CHECK-NEXT: [[COPY28:%[0-9]+]]:gprregbank(s32) = COPY $r28
    ; CHECK-NEXT: [[COPY29:%[0-9]+]]:gprregbank(s32) = COPY $r29
    ; CHECK-NEXT: [[COPY30:%[0-9]+]]:gprregbank(s32) = COPY $r30
    ; CHECK-NEXT: [[COPY31:%[0-9]+]]:gprregbank(s32) = COPY $r31
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY1]](s32)
    ; CHECK-NEXT: $r2 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: $r3 = COPY [[COPY3]](s32)
    ; CHECK-NEXT: $r4 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r5 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: $r6 = COPY [[COPY6]](s32)
    ; CHECK-NEXT: $r7 = COPY [[COPY7]](s32)
    ; CHECK-NEXT: $r8 = COPY [[COPY8]](s32)
    ; CHECK-NEXT: $r9 = COPY [[COPY9]](s32)
    ; CHECK-NEXT: $r10 = COPY [[COPY10]](s32)
    ; CHECK-NEXT: $r11 = COPY [[COPY11]](s32)
    ; CHECK-NEXT: $r12 = COPY [[COPY12]](s32)
    ; CHECK-NEXT: $r13 = COPY [[COPY13]](s32)
    ; CHECK-NEXT: $r14 = COPY [[COPY14]](s32)
    ; CHECK-NEXT: $r15 = COPY [[COPY15]](s32)
    %0:_(s32) = COPY $r0
    %1:_(s32) = COPY $r1
    %2:_(s32) = COPY $r2
    %3:_(s32) = COPY $r3
    %4:_(s32) = COPY $r4
    %5:_(s32) = COPY $r5
    %6:_(s32) = COPY $r6
    %7:_(s32) = COPY $r7
    %8:_(s32) = COPY $r8
    %9:_(s32) = COPY $r9
    %10:_(s32) = COPY $r10
    %11:_(s32) = COPY $r11
    %12:_(s32) = COPY $r12
    %13:_(s32) = COPY $r13
    %14:_(s32) = COPY $r14
    %15:_(s32) = COPY $r15
    %16:_(s32) = COPY $r16
    %17:_(s32) = COPY $r17
    %18:_(s32) = COPY $r18
    %19:_(s32) = COPY $r19
    %20:_(s32) = COPY $r20
    %21:_(s32) = COPY $r21
    %22:_(s32) = COPY $r22
    %23:_(s32) = COPY $r23
    %24:_(s32) = COPY $r24
    %25:_(s32) = COPY $r25
    %26:_(s32) = COPY $r26
    %27:_(s32) = COPY $r27
    %28:_(s32) = COPY $r28
    %29:_(s32) = COPY $r29
    %30:_(s32) = COPY $r30
    %31:_(s32) = COPY $r31
    $r0 = COPY %0
    $r1 = COPY %1
    $r2 = COPY %2
    $r3 = COPY %3
    $r4 = COPY %4
    $r5 = COPY %5
    $r6 = COPY %6
    $r7 = COPY %7
    $r8 = COPY %8
    $r9 = COPY %9
    $r10 = COPY %10
    $r11 = COPY %11
    $r12 = COPY %12
    $r13 = COPY %13
    $r14 = COPY %14
    $r15 = COPY %15
...

---
name: COPY_ptr
legalized: true

body: |
  bb.0:
    liveins: $p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7
    ; CHECK-LABEL: name: COPY_ptr
    ; CHECK: liveins: $p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ptrregbank(p0) = COPY $p1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ptrregbank(p0) = COPY $p2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:ptrregbank(p0) = COPY $p3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:ptrregbank(p0) = COPY $p4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:ptrregbank(p0) = COPY $p5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:ptrregbank(p0) = COPY $p6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:ptrregbank(p0) = COPY $p7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:ptrregbank(p0) = COPY $sp
    ; CHECK-NEXT: $p0 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $p1 = COPY [[COPY1]](p0)
    ; CHECK-NEXT: $p2 = COPY [[COPY2]](p0)
    ; CHECK-NEXT: $p3 = COPY [[COPY3]](p0)
    ; CHECK-NEXT: $p4 = COPY [[COPY4]](p0)
    ; CHECK-NEXT: $p5 = COPY [[COPY5]](p0)
    ; CHECK-NEXT: $p6 = COPY [[COPY6]](p0)
    ; CHECK-NEXT: $p7 = COPY [[COPY7]](p0)
    ; CHECK-NEXT: $sp = COPY [[COPY8]](p0)
    %0:_(p0) = COPY $p0
    %1:_(p0) = COPY $p1
    %2:_(p0) = COPY $p2
    %3:_(p0) = COPY $p3
    %4:_(p0) = COPY $p4
    %5:_(p0) = COPY $p5
    %6:_(p0) = COPY $p6
    %7:_(p0) = COPY $p7
    %100:_(p0) = COPY $sp
    $p0 = COPY %0
    $p1 = COPY %1
    $p2 = COPY %2
    $p3 = COPY %3
    $p4 = COPY %4
    $p5 = COPY %5
    $p6 = COPY %6
    $p7 = COPY %7
    $sp = COPY %100
...

---
name: COPY_mod
legalized: true

body: |
  bb.0:
    liveins: $m0, $m1, $m2, $m3, $m4, $m5, $m6, $m7
    ; CHECK-LABEL: name: COPY_mod
    ; CHECK: liveins: $m0, $m1, $m2, $m3, $m4, $m5, $m6, $m7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:modregbank(p0) = COPY $m0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:modregbank(p0) = COPY $m1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:modregbank(p0) = COPY $m2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:modregbank(p0) = COPY $m3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:modregbank(p0) = COPY $m4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:modregbank(p0) = COPY $m5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:modregbank(p0) = COPY $m6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:modregbank(p0) = COPY $m7
    ; CHECK-NEXT: $m0 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $m1 = COPY [[COPY1]](p0)
    ; CHECK-NEXT: $m2 = COPY [[COPY2]](p0)
    ; CHECK-NEXT: $m3 = COPY [[COPY3]](p0)
    ; CHECK-NEXT: $m4 = COPY [[COPY4]](p0)
    ; CHECK-NEXT: $m5 = COPY [[COPY5]](p0)
    ; CHECK-NEXT: $m6 = COPY [[COPY6]](p0)
    ; CHECK-NEXT: $m7 = COPY [[COPY7]](p0)
    %0:_(p0) = COPY $m0
    %1:_(p0) = COPY $m1
    %2:_(p0) = COPY $m2
    %3:_(p0) = COPY $m3
    %4:_(p0) = COPY $m4
    %5:_(p0) = COPY $m5
    %6:_(p0) = COPY $m6
    %7:_(p0) = COPY $m7
    $m0 = COPY %0
    $m1 = COPY %1
    $m2 = COPY %2
    $m3 = COPY %3
    $m4 = COPY %4
    $m5 = COPY %5
    $m6 = COPY %6
    $m7 = COPY %7
...

---
name:            copy_64bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $l0
    ; CHECK-LABEL: name: copy_64bit_vec
    ; CHECK: liveins: $l0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gprregbank(<2 x s32>) = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(<4 x s16>) = COPY $l0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(<8 x s8>) = COPY $l0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<2 x s32>), implicit [[COPY1]](<4 x s16>), implicit [[COPY2]](<8 x s8>)
    %0:_(<2 x s32>) = COPY $l0
    %1:_(<4 x s16>) = COPY $l0
    %2:_(<8 x s8>) = COPY $l0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

# TODO: proper 128-bit vector support
# ---
# name:            copy_128bit_vec
# legalized:       true

# body: |
#   bb.0:
#     %10:gprregbank(s32) = G_CONSTANT i32 0
#     %20:_(<4 x s32>) = G_BUILD_VECTOR %10, %10, %10, %10
#     %0:_(<4 x s32>) = COPY %20
#     %21:_(<8 x s16>) = G_BITCAST %20
#     %1:_(<8 x s16>) = COPY %21
#     %22:_(<16 x s8>) = G_BITCAST %20
#     %2:_(<16 x s8>) = COPY %22
#     PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
# ...

---
name:            copy_256bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $wl0
    ; CHECK-LABEL: name: copy_256bit_vec
    ; CHECK: liveins: $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<8 x s32>) = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vregbank(<16 x s16>) = COPY $wl0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vregbank(<32 x s8>) = COPY $wl0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<8 x s32>), implicit [[COPY1]](<16 x s16>), implicit [[COPY2]](<32 x s8>)
    %0:_(<8 x s32>) = COPY $wl0
    %1:_(<16 x s16>) = COPY $wl0
    %2:_(<32 x s8>) = COPY $wl0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_512bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $x0
    ; CHECK-LABEL: name: copy_512bit_vec
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vregbank(<32 x s16>) = COPY $x0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vregbank(<64 x s8>) = COPY $x0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s32>), implicit [[COPY1]](<32 x s16>), implicit [[COPY2]](<64 x s8>)
    %0:_(<16 x s32>) = COPY $x0
    %1:_(<32 x s16>) = COPY $x0
    %2:_(<64 x s8>) = COPY $x0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_1024bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $y2
    ; CHECK-LABEL: name: copy_1024bit_vec
    ; CHECK: liveins: $y2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<32 x s32>) = COPY $y2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vregbank(<64 x s16>) = COPY $y2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vregbank(<128 x s8>) = COPY $y2
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<32 x s32>), implicit [[COPY1]](<64 x s16>), implicit [[COPY2]](<128 x s8>)
    %0:_(<32 x s32>) = COPY $y2
    %1:_(<64 x s16>) = COPY $y2
    %2:_(<128 x s8>) = COPY $y2
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_256bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $amll0
    ; CHECK-LABEL: name: copy_256bit_acc
    ; CHECK: liveins: $amll0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<4 x s64>) = COPY $amll0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<4 x s64>)
    %0:_(<4 x s64>) = COPY $amll0
    PseudoRET implicit $lr, implicit %0
...

---
name:            copy_512bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $bml0
    ; CHECK-LABEL: name: copy_512bit_acc
    ; CHECK: liveins: $bml0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<8 x s64>) = COPY $bml0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<8 x s64>)
    %0:_(<8 x s64>) = COPY $bml0
    PseudoRET implicit $lr, implicit %0
...

---
name:            copy_1024bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $cm0
    ; CHECK-LABEL: name: copy_1024bit_acc
    ; CHECK: liveins: $cm0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<16 x s64>) = COPY $cm0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s64>)
    %0:_(<16 x s64>) = COPY $cm0
    PseudoRET implicit $lr, implicit %0
...
