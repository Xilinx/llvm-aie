# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VST_POSTINC_PACK_S4_S8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_S4_S8
    ; CHECK: liveins: $p0, $m0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm_imm [[VST_PACK_S4_S8_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm [[VST_PACK_S4_S8_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm_imm [[VST_PACK_S4_S8_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm_imm [[VST_PACK_S4_S8_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S4_S8_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_S4_S8_ag_pstm_nrm [[VST_PACK_S4_S8_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<64 x s8>) = COPY $x0
    %101:vregbank(<32 x s16>) = G_BITCAST %100:vregbank(<64 x s8>)
    %200:gprregbank(s32) = G_CONSTANT i32 1
    %201:gprregbank(s32) = G_CONSTANT i32 0
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...



---
name:            VST_POSTINC_PACK_S8_S16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_S8_S16
    ; CHECK: liveins: $p0, $m0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm_imm [[VST_PACK_S8_S16_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm [[VST_PACK_S8_S16_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm_imm [[VST_PACK_S8_S16_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm_imm [[VST_PACK_S8_S16_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_S8_S16_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_S8_S16_ag_pstm_nrm [[VST_PACK_S8_S16_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat :: (store (<32 x s8>))
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<32 x s16>) = COPY $x0
    %200:gprregbank(s32) = G_CONSTANT i32 1
    %201:gprregbank(s32) = G_CONSTANT i32 1
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...

---
name:            VST_POSTINC_PACK_D4_D8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_D4_D8
    ; CHECK: liveins: $p0, $m0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[VST_PACK_D4_D8_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[VST_PACK_D4_D8_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<64 x s8>) = COPY $x0
    %101:vregbank(<32 x s16>) = G_BITCAST %100:vregbank(<64 x s8>)
    %200:gprregbank(s32) = G_CONSTANT i32 0
    %201:gprregbank(s32) = G_CONSTANT i32 0
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...

---
name:            VST_POSTINC_PACK_D4_D8_dyn
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $r1, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_D4_D8_dyn
    ; CHECK: liveins: $p0, $m0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[VST_PACK_D4_D8_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm_imm [[VST_PACK_D4_D8_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D4_D8_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_D4_D8_ag_pstm_nrm [[VST_PACK_D4_D8_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<64 x s8>) = COPY $x0
    %101:vregbank(<32 x s16>) = G_BITCAST %100:vregbank(<64 x s8>)
    %200:gprregbank(s32) = COPY $r1
    %201:gprregbank(s32) = G_CONSTANT i32 0
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %101:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...

---
name:            VST_POSTINC_PACK_D8_D16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_D8_D16
    ; CHECK: liveins: $p0, $m0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[VST_PACK_D8_D16_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[VST_PACK_D8_D16_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<32 x s16>) = COPY $x0
    %200:gprregbank(s32) = G_CONSTANT i32 0
    %201:gprregbank(s32) = G_CONSTANT i32 1
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...

---
name:            VST_POSTINC_PACK_D8_D16_dyn
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0, $m0, $r1, $x0
    ; CHECK-LABEL: name: VST_POSTINC_PACK_D8_D16_dyn
    ; CHECK: liveins: $p0, $m0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:em = COPY $m0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 16
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo1:%[0-9]+]]:em = MOV_PD_imm10_pseudo 256
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[COPY]], [[COPY1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm]], 0, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm1:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[VST_PACK_D8_D16_ag_pstm_nrm_imm]], [[MOV_PD_imm10_pseudo]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm1:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm1]], -256, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm_imm2:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm_imm [[VST_PACK_D8_D16_ag_pstm_nrm_imm1]], 224, [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY3]]
    ; CHECK-NEXT: [[VST_PACK_D8_D16_ag_pstm_nrm2:%[0-9]+]]:ep = VST_PACK_D8_D16_ag_pstm_nrm [[VST_PACK_D8_D16_ag_pstm_nrm_imm2]], [[MOV_PD_imm10_pseudo1]], [[COPY2]], implicit $crsat, implicit $crpacksign :: (store (<32 x s8>))
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    %0:ptrregbank(p0) = COPY $p0
    %7:modregbank(s20) = COPY $m0
    %8:modregbank(s20) = G_CONSTANT i20 0
    %9:modregbank(s20) = G_CONSTANT i20 16
    %10:modregbank(s20) = G_CONSTANT i20 -256
    %11:modregbank(s20) = G_CONSTANT i20 224
    %12:modregbank(s20) = G_CONSTANT i20 256
    %100:vregbank(<32 x s16>) = COPY $x0
    %200:gprregbank(s32) = COPY $r1
    %201:gprregbank(s32) = G_CONSTANT i32 1
    %103:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %104:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %105:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %106:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %107:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %108:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.pack), %100:vregbank(<32 x s16>), %200:gprregbank(s32), %201:gprregbank(s32)
    %19:ptrregbank(p0) = G_AIE_POSTINC_STORE %103, %0, %7 :: (store (<32 x s8>))
    %20:ptrregbank(p0) = G_AIE_POSTINC_STORE %104, %19, %8 :: (store (<32 x s8>))
    %21:ptrregbank(p0) = G_AIE_POSTINC_STORE %105, %20, %9 :: (store (<32 x s8>))
    %22:ptrregbank(p0) = G_AIE_POSTINC_STORE %106, %21, %10 :: (store (<32 x s8>))
    %23:ptrregbank(p0) = G_AIE_POSTINC_STORE %107, %22, %11 :: (store (<32 x s8>))
    %24:ptrregbank(p0) = G_AIE_POSTINC_STORE %108, %23, %12 :: (store (<32 x s8>))
...
