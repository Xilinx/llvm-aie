# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s


---
name:            VMOV_mv_scd_VEC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VMOV_mv_scd_VEC
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crscden = COPY [[COPY]]
    ; CHECK-NEXT: [[VMOV_mv_scd:%[0-9]+]]:vec512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $x0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(s32) = COPY $r0
    %2:vregbank(<16 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.vec), %1:gprregbank(s32)
    %0:vregbank(<64 x s8>) = G_BITCAST %2:vregbank(<16 x s32>)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VMOV_mv_scd_ACC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VMOV_mv_scd_ACC
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crscden = COPY [[COPY]]
    ; CHECK-NEXT: [[VMOV_mv_scd:%[0-9]+]]:acc512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $bml0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:gprregbank(s32) = COPY $r0
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.acc32), %1:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VMOV_LO
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VMOV_LO
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crscden = COPY [[COPY]]
    ; CHECK-NEXT: [[VMOV_LO:%[0-9]+]]:acc1024 = VMOV_LO implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = COPY $r0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.lo), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_HI
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VMOV_HI
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crscden = COPY [[COPY]]
    ; CHECK-NEXT: [[VMOV_HI:%[0-9]+]]:acc1024 = VMOV_HI implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = COPY $r0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.hi), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_mv_scd_VEC_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_mv_scd_VEC_en0
    ; CHECK: $crscden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: [[VMOV_mv_scd:%[0-9]+]]:vec512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $x0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %2:gprregbank(s32) = G_CONSTANT i32 0
    %1:vregbank(<16 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.vec), %2:gprregbank(s32)
    %0:vregbank(<64 x s8>) = G_BITCAST %1:vregbank(<16 x s32>)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VMOV_mv_scd_ACC_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_mv_scd_ACC_en0
    ; CHECK: $crscden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: [[VMOV_mv_scd:%[0-9]+]]:acc512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $bml0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.acc32), %1:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VMOV_LO_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_LO_en0
    ; CHECK: $crscden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: [[VMOV_LO:%[0-9]+]]:acc1024 = VMOV_LO implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.lo), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_HI_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_HI_en0
    ; CHECK: $crscden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: [[VMOV_HI:%[0-9]+]]:acc1024 = VMOV_HI implicit $crscden
    ; CHECK-NEXT: $crscden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.hi), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_mv_scd_VEC_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_mv_scd_VEC_en1
    ; CHECK: [[VMOV_mv_scd:%[0-9]+]]:vec512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $x0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %2:gprregbank(s32) = G_CONSTANT i32 1
    %1:vregbank(<16 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.vec), %2:gprregbank(s32)
    %0:vregbank(<64 x s8>) = G_BITCAST %1:vregbank(<16 x s32>)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VMOV_mv_scd_ACC_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_mv_scd_ACC_en1
    ; CHECK: [[VMOV_mv_scd:%[0-9]+]]:acc512 = VMOV_mv_scd implicit $crscden
    ; CHECK-NEXT: $bml0 = COPY [[VMOV_mv_scd]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.read.acc32), %1:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VMOV_LO_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_LO_en1
    ; CHECK: [[VMOV_LO:%[0-9]+]]:acc1024 = VMOV_LO implicit $crscden
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.lo), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_HI_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: VMOV_HI_en1
    ; CHECK: [[VMOV_HI:%[0-9]+]]:acc1024 = VMOV_HI implicit $crscden
    ; CHECK-NEXT: $cm0 = COPY [[VMOV_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.scd.expand.hi), %1:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VMOV_mv_mcd_ACC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0, $r0
    ; CHECK-LABEL: name: VMOV_mv_mcd_ACC
    ; CHECK: liveins: $bml0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crmcden = COPY [[COPY1]]
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:accregbank(<8 x s64>) = COPY $bml0
    %1:gprregbank(s32) = COPY $r0
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.acc32), %0:accregbank(<8 x s64>), %1:gprregbank(s32)
    PseudoRET implicit $lr
...

---
name:            VMOV_mv_mcd_VEC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x0
    ; CHECK-LABEL: name: VMOV_mv_mcd_VEC
    ; CHECK: liveins: $r0, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crmcden = COPY [[COPY1]]
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:vregbank(<32 x s16>) = COPY $x0
    %1:gprregbank(s32) = COPY $r0
    %2:vregbank(<16 x s32>) = G_BITCAST %0:vregbank(<32 x s16>)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.vec), %2:vregbank(<16 x s32>), %1:gprregbank(s32)
    PseudoRET implicit $lr
...

---
name:            VMOV_mv_mcd_ACC_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0
    ; CHECK-LABEL: name: VMOV_mv_mcd_ACC_en0
    ; CHECK: liveins: $bml0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:accregbank(<8 x s64>) = COPY $bml0
    %1:gprregbank(s32) = G_CONSTANT i32 0
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.acc32), %0:accregbank(<8 x s64>), %1:gprregbank(s32)
    PseudoRET implicit $lr
...

---
name:            VMOV_mv_mcd_VEC_en0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VMOV_mv_mcd_VEC_en0
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: $crmcden = MOV_scalar_imm10_pseudo 1
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:vregbank(<32 x s16>) = COPY $x0
    %2:gprregbank(s32) = G_CONSTANT i32 0
    %1:vregbank(<16 x s32>) = G_BITCAST %0:vregbank(<32 x s16>)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.vec), %1:vregbank(<16 x s32>), %2:gprregbank(s32)
    PseudoRET implicit $lr
...

---
name:            VMOV_mv_mcd_ACC_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0
    ; CHECK-LABEL: name: VMOV_mv_mcd_ACC_en1
    ; CHECK: liveins: $bml0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:accregbank(<8 x s64>) = COPY $bml0
    %1:gprregbank(s32) = G_CONSTANT i32 1
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.acc32), %0:accregbank(<8 x s64>), %1:gprregbank(s32)
    PseudoRET implicit $lr
...

---
name:            VMOV_mv_mcd_VEC_en1
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VMOV_mv_mcd_VEC_en1
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: VMOV_mv_mcd [[COPY]], implicit $crmcden
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:vregbank(<32 x s16>) = COPY $x0
    %2:gprregbank(s32) = G_CONSTANT i32 1
    %1:vregbank(<16 x s32>) = G_BITCAST %0:vregbank(<32 x s16>)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.mcd.write.vec), %1:vregbank(<16 x s32>), %2:gprregbank(s32)
    PseudoRET implicit $lr
...
