# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VEXTRACT_D8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $r2, $x0
    ; CHECK-LABEL: name: VEXTRACT_D8
    ; CHECK: liveins: $r1, $r2, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 63
    ; CHECK-NEXT: $crvaddsign = COPY [[COPY1]]
    ; CHECK-NEXT: [[VEXTRACT_D8_:%[0-9]+]]:er = VEXTRACT_D8 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $crvaddsign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<64 x s8>) = COPY $x0
    %3:gprregbank(s32) = COPY $r2
    %4:gprregbank(s32) = G_CONSTANT i32 63
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem8.I512), %1:vregbank(<64 x s8>), %4:gprregbank(s32), %3:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_D16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $r2, $x0
    ; CHECK-LABEL: name: VEXTRACT_D16
    ; CHECK: liveins: $r1, $r2, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 50
    ; CHECK-NEXT: $crvaddsign = COPY [[COPY1]]
    ; CHECK-NEXT: [[VEXTRACT_D16_:%[0-9]+]]:er = VEXTRACT_D16 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $crvaddsign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<32 x s16>) = COPY $x0
    %3:gprregbank(s32) = COPY $r2
    %4:gprregbank(s32) = G_CONSTANT i32 50
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem16.I512), %1:vregbank(<32 x s16>), %4:gprregbank(s32), %3:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_D32
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $r2, $x0
    ; CHECK-LABEL: name: VEXTRACT_D32
    ; CHECK: liveins: $r1, $r2, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 10
    ; CHECK-NEXT: $crvaddsign = COPY [[COPY1]]
    ; CHECK-NEXT: [[VEXTRACT_D32_:%[0-9]+]]:er = VEXTRACT_D32 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $crvaddsign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<16 x s32>) = COPY $x0
    %3:gprregbank(s32) = COPY $r2
    %4:gprregbank(s32) = G_CONSTANT i32 10
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem32.I512), %1:vregbank(<16 x s32>), %4:gprregbank(s32), %3:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_S8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_S8
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 6
    ; CHECK-NEXT: [[VEXTRACT_S8_:%[0-9]+]]:er = VEXTRACT_S8 [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_S8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<64 x s8>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 6
    %4:gprregbank(s32) = G_CONSTANT i32 1
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem8.I512), %1:vregbank(<64 x s8>), %3:gprregbank(s32), %4:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_S16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_S16
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 5
    ; CHECK-NEXT: [[VEXTRACT_S16_:%[0-9]+]]:er = VEXTRACT_S16 [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_S16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<32 x s16>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 5
    %4:gprregbank(s32) = G_CONSTANT i32 1
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem16.I512), %1:vregbank(<32 x s16>), %3:gprregbank(s32), %4:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_S32
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_S32
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 1
    ; CHECK-NEXT: [[VEXTRACT_S32_:%[0-9]+]]:er = VEXTRACT_S32 [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_S32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<16 x s32>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem32.I512), %1:vregbank(<16 x s32>), %3:gprregbank(s32), %3:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_D8_const_sign0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_D8_const_sign0
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 16
    ; CHECK-NEXT: [[VEXTRACT_D8_:%[0-9]+]]:er = VEXTRACT_D8 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<64 x s8>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 16
    %4:gprregbank(s32) = G_CONSTANT i32 0
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem8.I512), %1:vregbank(<64 x s8>), %3:gprregbank(s32), %4:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_D16_const_sign0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_D16_const_sign0
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 51
    ; CHECK-NEXT: [[VEXTRACT_D16_:%[0-9]+]]:er = VEXTRACT_D16 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<32 x s16>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 51
    %4:gprregbank(s32) = G_CONSTANT i32 0
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem16.I512), %1:vregbank(<32 x s16>), %3:gprregbank(s32), %4:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_D32_const_sign0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r1, $x0
    ; CHECK-LABEL: name: VEXTRACT_D32_const_sign0
    ; CHECK: liveins: $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 41
    ; CHECK-NEXT: [[VEXTRACT_D32_:%[0-9]+]]:er = VEXTRACT_D32 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $r0 = COPY [[VEXTRACT_D32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:vregbank(<16 x s32>) = COPY $x0
    %3:gprregbank(s32) = G_CONSTANT i32 41
    %4:gprregbank(s32) = G_CONSTANT i32 0
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem32.I512), %1:vregbank(<16 x s32>), %3:gprregbank(s32), %4:gprregbank(s32)
    $r0 = COPY %0:gprregbank(s32)
    PseudoRET implicit $lr, implicit $r0
...


---
name:            VEXTRACT_S64
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VEXTRACT_S64
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 14
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VEXTRACT_S64_:%[0-9]+]]:el = VEXTRACT_S64 [[COPY]], [[MOV_RLC_imm10_pseudo]]
    ; CHECK-NEXT: $l0 = COPY [[VEXTRACT_S64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    %4:gprregbank(s32) = G_CONSTANT i32 14
    %5:gprregbank(s32) = G_CONSTANT i32 1
    %1:vregbank(<16 x s32>) = COPY $x0
    %3:gprregbank(<2 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem64.I512), %1:vregbank(<16 x s32>), %4:gprregbank(s32), %5:gprregbank(s32)
    $l0 = COPY %3:gprregbank(<2 x s32>)
    PseudoRET implicit $lr, implicit $l0
...


---
name:            VEXTRACT_D64
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r2, $x0
    ; CHECK-LABEL: name: VEXTRACT_D64
    ; CHECK: liveins: $r2, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: $crvaddsign = COPY [[COPY]]
    ; CHECK-NEXT: [[VEXTRACT_D64_:%[0-9]+]]:el = VEXTRACT_D64 [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $crvaddsign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $l0 = COPY [[VEXTRACT_D64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    %2:gprregbank(s32) = COPY $r2
    %5:gprregbank(s32) = G_CONSTANT i32 2
    %1:vregbank(<16 x s32>) = COPY $x0
    %4:gprregbank(<2 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem64.I512), %1:vregbank(<16 x s32>), %5:gprregbank(s32), %2:gprregbank(s32)
    $l0 = COPY %4:gprregbank(<2 x s32>)
    PseudoRET implicit $lr, implicit $l0
...



---
name:            VEXTRACT_D64_const_sign0
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VEXTRACT_D64_const_sign0
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:ers4 = MOV_RLC_imm10_pseudo 10
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VEXTRACT_D64_:%[0-9]+]]:el = VEXTRACT_D64 [[COPY]], [[MOV_RLC_imm10_pseudo]], implicit $crvaddsign
    ; CHECK-NEXT: $l0 = COPY [[VEXTRACT_D64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $l0
    %4:gprregbank(s32) = G_CONSTANT i32 10
    %5:gprregbank(s32) = G_CONSTANT i32 0
    %1:vregbank(<16 x s32>) = COPY $x0
    %3:gprregbank(<2 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.elem64.I512), %1:vregbank(<16 x s32>), %4:gprregbank(s32), %5:gprregbank(s32)
    $l0 = COPY %3:gprregbank(<2 x s32>)
    PseudoRET implicit $lr, implicit $l0
...
