# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

# The combine can't happen because it is unsafe to move across G_INTRINSIC_W_SIDE_EFFECTS.
---
name:            VLDA_UPS_S32_D16_unsafe_to_move
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $p0
    ; CHECK-LABEL: name: VLDA_UPS_S32_D16_unsafe_to_move
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:edj = COPY $m0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[VLDA_dmw_lda_w_ag_idx:%[0-9]+]]:vec256 = VLDA_dmw_lda_w_ag_idx [[COPY]], [[COPY1]] :: (load (<16 x s16>))
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:mss = COPY [[COPY3]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S32_D16_mv_ups_w2b [[COPY2]], [[COPY4]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:mss = COPY [[COPY3]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_w2b1:%[0-9]+]]:acc512 = VUPS_S32_D16_mv_ups_w2b [[VLDA_dmw_lda_w_ag_idx]], [[COPY5]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[VUPS_S32_D16_mv_ups_w2b]], implicit [[VUPS_S32_D16_mv_ups_w2b1]]
    %0:ptrregbank(p0) = COPY $p0
    %1:modregbank(s20) = COPY $m0
    %2:vregbank(<16 x s16>) = COPY $wl0
    %3:vregbank(<16 x s16>) = G_AIE_OFFSET_LOAD %0, %1 :: (load (<16 x s16>))
    %4:gprregbank(s32) = COPY $r1
    %5:gprregbank(s32) = G_CONSTANT i32 0
    %6:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v16.I256.ups), %2:vregbank(<16 x s16>), %4:gprregbank(s32), %5:gprregbank(s32)
    %7:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v16.I256.ups), %3:vregbank(<16 x s16>), %4:gprregbank(s32), %5:gprregbank(s32)
    PseudoRET implicit $lr, implicit %6, implicit %7
...
