# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VBCSTSHFL_8_vregbank
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1
    ; CHECK-LABEL: name: VBCSTSHFL_8_vregbank
    ; CHECK: liveins: $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er29 = COPY $r1
    ; CHECK-NEXT: [[VBCSTSHFL_8_:%[0-9]+]]:vec512 = VBCSTSHFL_8 [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VBCSTSHFL_8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(s32) = COPY $r0
    %2:gprregbank(s32) = COPY $r1
    %3:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbcst.shuffle8), %1:gprregbank(s32), %2:gprregbank(s32)
    %0:vregbank(<64 x s8>) = G_BITCAST %3:vregbank(<16 x s32>)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCSTSHFL_16_vregbank
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1
    ; CHECK-LABEL: name: VBCSTSHFL_16_vregbank
    ; CHECK: liveins: $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er29 = COPY $r1
    ; CHECK-NEXT: [[VBCSTSHFL_16_:%[0-9]+]]:vec512 = VBCSTSHFL_16 [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VBCSTSHFL_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(s32) = COPY $r0
    %2:gprregbank(s32) = COPY $r1
    %3:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbcst.shuffle16), %1:gprregbank(s32), %2:gprregbank(s32)
    %0:vregbank(<32 x s16>) = G_BITCAST %3:vregbank(<16 x s32>)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCSTSHFL_32_vregbank
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1
    ; CHECK-LABEL: name: VBCSTSHFL_32_vregbank
    ; CHECK: liveins: $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er29 = COPY $r1
    ; CHECK-NEXT: [[VBCSTSHFL_32_:%[0-9]+]]:vec512 = VBCSTSHFL_32 [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VBCSTSHFL_32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(s32) = COPY $r0
    %2:gprregbank(s32) = COPY $r1
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbcst.shuffle32), %1:gprregbank(s32), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCSTSHFL_64_vregbank
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $l0, $r1
    ; CHECK-LABEL: name: VBCSTSHFL_64_vregbank
    ; CHECK: liveins: $l0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er29 = COPY $r1
    ; CHECK-NEXT: [[VBCSTSHFL_64_:%[0-9]+]]:vec512 = VBCSTSHFL_64 [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VBCSTSHFL_64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:el(<2 x s32>) = COPY $l0
    %2:gprregbank(s32) = COPY $r1
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbcst.shuffle64), %1:el(<2 x s32>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCSTSHFL_bf
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1
    ; CHECK-LABEL: name: VBCSTSHFL_bf
    ; CHECK: liveins: $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er29 = COPY $r1
    ; CHECK-NEXT: [[VBCSTSHFL_16_:%[0-9]+]]:vec512 = VBCSTSHFL_16 [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VBCSTSHFL_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %3:gprregbank(s32) = COPY $r0
    %1:gprregbank(s16) = G_TRUNC %3:gprregbank(s32)
    %2:gprregbank(s32) = COPY $r1
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbcst.shuffle.bf16), %1:gprregbank(s16), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...
