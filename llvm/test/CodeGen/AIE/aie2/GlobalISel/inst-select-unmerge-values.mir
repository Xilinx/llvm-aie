# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_unmerge_32_from_s64
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_from_s64
    ; CHECK: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:gprregbank(s64) = COPY $l0
    %0:gprregbank(s32), %1:gprregbank(s32) = G_UNMERGE_VALUES %2(s64)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_pre_constrained_from_s64
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_pre_constrained_from_s64
    ; CHECK: [[COPY:%[0-9]+]]:el_with_sub_l_even_in_ers4 = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:el_with_sub_l_even_in_ers4(s64) = COPY $l0
    %0:ers8(s32), %1:ers8(s32) = G_UNMERGE_VALUES %2(s64)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_from_v2s32
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_from_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:gprregbank(<2 x s32>) = COPY $l0
    %0:gprregbank(s32), %1:gprregbank(s32) = G_UNMERGE_VALUES %2(<2 x s32>)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_pre_constrained_from_v2s32
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_pre_constrained_from_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:el_with_sub_l_even_in_ers4 = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:el_with_sub_l_even_in_ers4(<2 x s32>) = COPY $l0
    %0:ers8(s32), %1:ers8(s32) = G_UNMERGE_VALUES %2(<2 x s32>)
    PseudoRET implicit $lr, implicit %0, implicit %1
...
