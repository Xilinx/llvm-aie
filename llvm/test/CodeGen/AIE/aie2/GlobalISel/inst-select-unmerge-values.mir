# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_unmerge_32_from_s64
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_from_s64
    ; CHECK: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:gprregbank(s64) = COPY $l0
    %0:gprregbank(s32), %1:gprregbank(s32) = G_UNMERGE_VALUES %2(s64)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_pre_constrained_from_s64
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_pre_constrained_from_s64
    ; CHECK: [[COPY:%[0-9]+]]:el_with_sub_l_even_in_ers4 = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:el_with_sub_l_even_in_ers4(s64) = COPY $l0
    %0:ers8(s32), %1:ers8(s32) = G_UNMERGE_VALUES %2(s64)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_from_v2s32
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_from_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:gprregbank(<2 x s32>) = COPY $l0
    %0:gprregbank(s32), %1:gprregbank(s32) = G_UNMERGE_VALUES %2(<2 x s32>)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_32_pre_constrained_from_v2s32
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_unmerge_32_pre_constrained_from_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:el_with_sub_l_even_in_ers4 = COPY $l0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_even
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY [[COPY]].sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY1]], implicit [[COPY2]]
    %2:el_with_sub_l_even_in_ers4(<2 x s32>) = COPY $l0
    %0:ers8(s32), %1:ers8(s32) = G_UNMERGE_VALUES %2(<2 x s32>)
    PseudoRET implicit $lr, implicit %0, implicit %1
...

---
name:            test_unmerge_512_to_256
legalized:       true
regBankSelected: true
tracksRegLiveness: true
stack:
  - { id: 0, name: "", size: 128, alignment: 32 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_unmerge_512_to_256
    ; CHECK: [[DEF:%[0-9]+]]:vec512 = IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY [[DEF]].sub_256_lo
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY [[DEF]].sub_256_hi
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]], implicit [[COPY1]]
    %0:vregbank(<16 x s32>) = G_IMPLICIT_DEF
    %1:vregbank(<8 x s32>), %2:vregbank(<8 x s32>) = G_UNMERGE_VALUES %0(<16 x s32>)
    PseudoRET implicit $lr, implicit %1, implicit %2
...

---
name:            test_unmerge_1024_to_512
legalized:       true
regBankSelected: true
tracksRegLiveness: true
stack:
  - { id: 0, name: "", size: 128, alignment: 32 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_unmerge_1024_to_512
    ; CHECK: [[DEF:%[0-9]+]]:vec1024 = IMPLICIT_DEF
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY [[DEF]].sub_512_lo
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY [[DEF]].sub_512_hi
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]], implicit [[COPY1]]
    %0:vregbank(<32 x s32>) = G_IMPLICIT_DEF
    %1:vregbank(<16 x s32>), %2:vregbank(<16 x s32>) = G_UNMERGE_VALUES %0(<32 x s32>)
    PseudoRET implicit $lr, implicit %1, implicit %2
