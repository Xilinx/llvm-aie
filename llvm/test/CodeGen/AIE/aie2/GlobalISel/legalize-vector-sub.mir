# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_sub_v64s8
alignment:       16
body:             |
  bb.1:
    liveins: $x2, $x4

    ; CHECK-LABEL: name: test_sub_v64s8
    ; CHECK: liveins: $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<64 x s8>) = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<64 x s8>) = COPY $x4
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(<64 x s8>) = G_SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[SUB]](<64 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<64 x s8>) = COPY $x2
    %2:_(<64 x s8>) = COPY $x4
    %0:_(<64 x s8>) = G_SUB %2, %1
    $x0 = COPY %0(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0

...

---
name:            test_sub_v32s16
alignment:       16
body:             |
  bb.1:
    liveins: $x2, $x4

    ; CHECK-LABEL: name: test_sub_v32s16
    ; CHECK: liveins: $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<32 x s16>) = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<32 x s16>) = COPY $x4
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(<32 x s16>) = G_SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[SUB]](<32 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<32 x s16>) = COPY $x2
    %2:_(<32 x s16>) = COPY $x4
    %0:_(<32 x s16>) = G_SUB %2, %1
    $x0 = COPY %0(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0

...
---
name:            test_sub_v16s32
alignment:       16
body:             |
  bb.1:
    liveins: $x2, $x4

    ; CHECK-LABEL: name: test_sub_v16s32
    ; CHECK: liveins: $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<16 x s32>) = COPY $x4
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(<16 x s32>) = G_SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[SUB]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<16 x s32>) = COPY $x2
    %2:_(<16 x s32>) = COPY $x4
    %0:_(<16 x s32>) = G_SUB %2, %1
    $x0 = COPY %0(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0

...
