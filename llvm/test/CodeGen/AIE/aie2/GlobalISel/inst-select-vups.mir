# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VUPS_S64_D32_mv_ups_w2b_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_w2b_unsigned
    ; CHECK: liveins: $r0, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D32_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S64_D32_mv_ups_w2b [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S64_D32_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<8 x s32>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v8.I256.ups), %1:vregbank(<8 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VUPS_S64_D32_mv_ups_w2b_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_w2b_signed
    ; CHECK: liveins: $r0, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_S32_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S64_S32_mv_ups_w2b [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S64_S32_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<8 x s32>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v8.I256.ups), %1:vregbank(<8 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...


---
name:            VUPS_S32_D8_mv_ups_w2c_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D8_mv_ups_w2c_unsigned
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D8_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S32_D8_mv_ups_w2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_D8_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s8>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I256.ups), %1:vregbank(<32 x s8>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S32_D8_mv_ups_w2c_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D8_mv_ups_w2c_signed
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_S8_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S32_S8_mv_ups_w2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_S8_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s8>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I256.ups), %1:vregbank(<32 x s8>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S64_D16_mv_ups_w2c_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D16_mv_ups_w2c_unsigned
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D16_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S64_D16_mv_ups_w2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_D16_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VUPS_S64_D16_mv_ups_w2c_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D16_mv_ups_w2c_signed
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_S16_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S64_S16_mv_ups_w2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_S16_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S32_D16_mv_ups_w2b_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_w2b_unsigned
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S32_D16_mv_ups_w2b [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S32_D16_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VUPS_S32_D16_mv_ups_w2b_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_w2b_signed
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_S16_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S32_S16_mv_ups_w2b [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S32_S16_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VUPS_S64_D32_mv_ups_x2c_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_x2c_unsigned
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D32_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S64_D32_mv_ups_x2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_D32_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s32>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I512.ups), %1:vregbank(<16 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S64_D32_mv_ups_x2c_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_x2c_signed
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_S32_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S64_S32_mv_ups_x2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_S32_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s32>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I512.ups), %1:vregbank(<16 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S32_D16_mv_ups_x2c_unsigned
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_x2c_unsigned
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S32_D16_mv_ups_x2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_D16_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I512.ups), %1:vregbank(<32 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VUPS_S32_D16_mv_ups_x2c_signed
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_x2c_signed
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_S16_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S32_S16_mv_ups_x2c [[COPY]], [[COPY2]], implicit-def dead $srups_of, implicit $crsat
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_S16_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I512.ups), %1:vregbank(<32 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S64_D32_mv_ups_w2b
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_w2b
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D32_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S64_D32_mv_ups_w2b [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S64_D32_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<8 x s32>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v8.I256.ups), %1:vregbank(<8 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VUPS_S32_D8_mv_ups_w2c
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D8_mv_ups_w2c
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D8_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S32_D8_mv_ups_w2c [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_D8_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s8>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I256.ups), %1:vregbank(<32 x s8>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VUPS_S64_D16_mv_ups_w2c
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S64_D16_mv_ups_w2c
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D16_mv_ups_w2c:%[0-9]+]]:acc1024 = VUPS_S64_D16_mv_ups_w2c [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_D16_mv_ups_w2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...


---
name:            VUPS_S32_D16_mv_ups_w2b
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $wl0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_w2b
    ; CHECK: liveins: $r0, $r1, $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_w2b:%[0-9]+]]:acc512 = VUPS_S32_D16_mv_ups_w2b [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $bml0 = COPY [[VUPS_S32_D16_mv_ups_w2b]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<16 x s16>) = COPY $wl0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<8 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v16.I256.ups), %1:vregbank(<16 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            VUPS_S64_D32_mv_ups_x2c
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S64_D32_mv_ups_x2c
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S64_D32_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S64_D32_mv_ups_x2c [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S64_D32_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<16 x s32>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc64.v16.I512.ups), %1:vregbank(<16 x s32>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            VUPS_S32_D16_mv_ups_x2c
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x0
    ; CHECK-LABEL: name: VUPS_S32_D16_mv_ups_x2c
    ; CHECK: liveins: $r0, $r1, $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crupssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VUPS_S32_D16_mv_ups_x2c:%[0-9]+]]:acc1024 = VUPS_S32_D16_mv_ups_x2c [[COPY]], [[COPY3]], implicit-def $srups_of, implicit $crsat, implicit $crupssign
    ; CHECK-NEXT: $crupssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $cm0 = COPY [[VUPS_S32_D16_mv_ups_x2c]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $cm0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:accregbank(<16 x s64>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.acc32.v32.I512.ups), %1:vregbank(<32 x s16>), %2:gprregbank(s32), %3:gprregbank(s32)
    $cm0 = COPY %0:accregbank(<16 x s64>)
    PseudoRET implicit $lr, implicit $cm0
...

---
name:            v16bfloat16_to_v16accfloat
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $wl0
    ; CHECK-LABEL: name: v16bfloat16_to_v16accfloat
    ; CHECK: liveins: $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl0
    ; CHECK-NEXT: [[VCONV_FP32_BF16_:%[0-9]+]]:acc512 = VCONV_FP32_BF16 [[COPY]]
    ; CHECK-NEXT: $bml0 = COPY [[VCONV_FP32_BF16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %0:vregbank(<16 x s16>) = COPY $wl0
    %1:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.v16bf16.to.v16accfloat), %0(<16 x s16>)
    $bml0 = COPY %1:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...
