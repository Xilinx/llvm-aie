# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=aie2-prelegalizer-combiner %s -verify-machineinstrs -o - | FileCheck %s

---
name:            concat_vector_32_512
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_1024
legalized:       false
body:             |
  bb.1.entry:
    liveins: $x0, $x1
    ; CHECK-LABEL: name: concat_vector_32_1024
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<16 x s32>) = COPY $x1
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<32 x s32>) = G_CONCAT_VECTORS [[COPY]](<16 x s32>), [[COPY1]](<16 x s32>)
    ; CHECK-NEXT: $y2 = COPY [[CONCAT_VECTORS]](<32 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $y2
    %1:_(<16 x s32>) = COPY $x0
    %2:_(<16 x s32>) = COPY $x1
    %0:_(<32 x s32>) = G_SHUFFLE_VECTOR %1:_(<16 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
    $y2 = COPY %0:_(<32 x s32>)
    PseudoRET implicit $lr, implicit $y2
...

---
name:            concat_vector_32_256
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl0
    ; CHECK-LABEL: name: concat_vector_32_256
    ; CHECK: liveins: $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl0
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<4 x s32>), [[UV1:%[0-9]+]]:_(<4 x s32>) = G_UNMERGE_VALUES [[COPY]](<8 x s32>)
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<8 x s32>) = G_CONCAT_VECTORS [[UV1]](<4 x s32>), [[UV]](<4 x s32>)
    ; CHECK-NEXT: $wl0 = COPY [[CONCAT_VECTORS]](<8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:_(<8 x s32>) = COPY $wl0
    %2:_(<4 x s32>), %3:_(<4 x s32>) = G_UNMERGE_VALUES %1:_(<8 x s32>)
    %0:_(<8 x s32>) = G_SHUFFLE_VECTOR %3:_(<4 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7)
    $wl0 = COPY %0:_(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            concat_vector_16_512
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_16_512
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s16>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<16 x s16>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<32 x s16>) = G_CONCAT_VECTORS [[COPY]](<16 x s16>), [[COPY1]](<16 x s16>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<32 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<16 x s16>) = COPY $wl2
    %2:_(<16 x s16>) = COPY $wl4
    %0:_(<32 x s16>) = G_SHUFFLE_VECTOR %1:_(<16 x s16>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
    $x0 = COPY %0:_(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_8_512
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_8_512
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<32 x s8>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<32 x s8>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<64 x s8>) = G_CONCAT_VECTORS [[COPY]](<32 x s8>), [[COPY1]](<32 x s8>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<64 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<32 x s8>) = COPY $wl2
    %2:_(<32 x s8>) = COPY $wl4
    %0:_(<64 x s8>) = G_SHUFFLE_VECTOR %1:_(<32 x s8>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63)
    $x0 = COPY %0:_(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_second_end
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_second_end
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -1, -1, -1, -1)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_first_start
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_first_start
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(-1, -1, -1, -1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_first_end
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_first_end
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, 1, 2, 3, -1, -1, -1, -1, 8, 9, 10, 11, 12, 13, 14, 15)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_second_start
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_second_start
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, -1, -1, -1, -1, 12, 13, 14, 15)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_first_block
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_first_block
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[DEF]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(-1, -1, -1, -1, -1, -1, -1, -1, 8, 9, 10, 11, 12, 13, 14, 15)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_second_block
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_second_block
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[DEF]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, 1, 2, 3, 4, 5, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_32_512_random
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_32_512_random
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(0, -1, 2, -1, 4, -1, -1, 7, 8, 9, -1, 11, 12, -1, 14, -1)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_undef_start_first
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_undef_start_first
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(-1, -1, -1, -1, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_start_end
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_start_end
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, 10, 11, 12, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_end_start
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_end_start
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, 4, 5, 6, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_end_end
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_end_end
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, -1, -1, -1, -1)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_first_block
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_first_block
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[DEF]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(-1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_second_block
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_second_block
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY]](<8 x s32>), [[DEF]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            concat_vector_reverse_32_512_random
legalized:       false
body:             |
  bb.1.entry:
    liveins: $wl2, $wl4
    ; CHECK-LABEL: name: concat_vector_reverse_32_512_random
    ; CHECK: liveins: $wl2, $wl4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl4
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<16 x s32>) = G_CONCAT_VECTORS [[COPY1]](<8 x s32>), [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $x0 = COPY [[CONCAT_VECTORS]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:_(<8 x s32>) = COPY $wl2
    %2:_(<8 x s32>) = COPY $wl4
    %0:_(<16 x s32>) = G_SHUFFLE_VECTOR %1:_(<8 x s32>), %2:_, shufflemask(8, 9, -1, 11, 12, 13, -1, 15, 0, 1, -1, 3, 4, 5, -1, 7)
    $x0 = COPY %0:_(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...
