# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s


---
name:            test_build_vector_32
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_build_vector_32
    ; CHECK: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:el = REG_SEQUENCE [[COPY]], %subreg.sub_l_even, [[COPY1]], %subreg.sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:gprregbank(s32) = COPY $r0
    %1:gprregbank(s32) = COPY $r1
    %2:gprregbank(<2 x s32>) = G_BUILD_VECTOR %0, %1
    PseudoRET implicit $lr, implicit %2
...

---
name:            test_build_vector_32_pre_constrained
legalized: true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_build_vector_32_pre_constrained
    ; CHECK: [[COPY:%[0-9]+]]:ers8 = COPY $r0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ers8 = COPY $r1
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:el_with_sub_l_even_in_ers4 = REG_SEQUENCE [[COPY]], %subreg.sub_l_even, [[COPY1]], %subreg.sub_l_odd
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:ers8(s32) = COPY $r0
    %1:ers8(s32) = COPY $r1
    %2:el_with_sub_l_even_in_ers4(<2 x s32>) = G_BUILD_VECTOR %0, %1
    PseudoRET implicit $lr, implicit %2
...
