# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_32
legalized: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_32
    ; CHECK: [[COPY:%[0-9]+]]:gprregbank(<4 x s8>) = COPY $r2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:gprregbank(<2 x s16>) = G_BITCAST [[COPY]](<4 x s8>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:gprregbank(s32) = G_BITCAST [[COPY]](<4 x s8>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:gprregbank(<4 x s8>) = G_BITCAST [[BITCAST1]](s32)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:gprregbank(<2 x s16>) = G_BITCAST [[BITCAST1]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[BITCAST]](<2 x s16>), implicit [[BITCAST1]](s32), implicit [[BITCAST2]](<4 x s8>), implicit [[BITCAST3]](<2 x s16>)
    %0:_(<4 x s8>) = COPY $r2
    %1:_(<2 x s16>) = G_BITCAST %0(<4 x s8>)
    %2:_(s32)       = G_BITCAST %0(<4 x s8>)
    %3:_(<4 x s8>)  = G_BITCAST %2:_(s32)
    %4:_(<2 x s16>)  = G_BITCAST %2:_(s32)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            test_64
legalized: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_64
    ; CHECK: [[COPY:%[0-9]+]]:gprregbank(<8 x s8>) = COPY $l0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:gprregbank(<4 x s16>) = G_BITCAST [[COPY]](<8 x s8>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:gprregbank(<2 x s32>) = G_BITCAST [[COPY]](<8 x s8>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:gprregbank(s64) = G_BITCAST [[COPY]](<8 x s8>)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:gprregbank(<8 x s8>) = G_BITCAST [[BITCAST2]](s64)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[BITCAST]](<4 x s16>), implicit [[BITCAST1]](<2 x s32>), implicit [[BITCAST2]](s64), implicit [[BITCAST3]](<8 x s8>)
    %0:_(<8 x s8>) = COPY $l0
    %1:_(<4 x s16>) = G_BITCAST %0(<8 x s8>)
    %2:_(<2 x s32>) = G_BITCAST %0(<8 x s8>)
    %3:_(s64)       = G_BITCAST %0(<8 x s8>)
    %4:_(<8 x s8>)  = G_BITCAST %3:_(s64)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            test_256
legalized: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_256
    ; CHECK: [[COPY:%[0-9]+]]:vregbank(<32 x s8>) = COPY $wl1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vregbank(<16 x s16>) = G_BITCAST [[COPY]](<32 x s8>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vregbank(<8 x s32>) = G_BITCAST [[COPY]](<32 x s8>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:accregbank(<4 x s64>) = G_BITCAST [[COPY]](<32 x s8>)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:vregbank(<32 x s8>) = G_BITCAST [[BITCAST]](<16 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[BITCAST]](<16 x s16>), implicit [[BITCAST1]](<8 x s32>), implicit [[BITCAST2]](<4 x s64>), implicit [[BITCAST3]](<32 x s8>)
    %0:_(<32 x s8>) = COPY $wl1
    %1:_(<16 x s16>) = G_BITCAST %0(<32 x s8>)
    %2:_(<8 x s32>) = G_BITCAST %0(<32 x s8>)
    %3:_(<4 x s64>) =  G_BITCAST %0(<32 x s8>)
    %4:_(<32 x s8>) = G_BITCAST %1(<16 x s16>)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            test_512
legalized: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_512
    ; CHECK: [[COPY:%[0-9]+]]:vregbank(<64 x s8>) = COPY $x2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vregbank(<32 x s16>) = G_BITCAST [[COPY]](<64 x s8>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vregbank(<16 x s32>) = G_BITCAST [[COPY]](<64 x s8>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:accregbank(<8 x s64>) = G_BITCAST [[COPY]](<64 x s8>)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:vregbank(<64 x s8>) = G_BITCAST [[BITCAST]](<32 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[BITCAST]](<32 x s16>), implicit [[BITCAST1]](<16 x s32>), implicit [[BITCAST2]](<8 x s64>), implicit [[BITCAST3]](<64 x s8>)
    %0:_(<64 x s8>) = COPY $x2
    %1:_(<32 x s16>) = G_BITCAST %0(<64 x s8>)
    %2:_(<16 x s32>) = G_BITCAST %0(<64 x s8>)
    %3:_(<8 x s64>) =  G_BITCAST %0(<64 x s8>)
    %4:_(<64 x s8>) = G_BITCAST %1(<32 x s16>)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            test_1024
legalized: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_1024
    ; CHECK: [[COPY:%[0-9]+]]:vregbank(<128 x s8>) = COPY $y2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vregbank(<64 x s16>) = G_BITCAST [[COPY]](<128 x s8>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vregbank(<32 x s32>) = G_BITCAST [[COPY]](<128 x s8>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:accregbank(<16 x s64>) = G_BITCAST [[COPY]](<128 x s8>)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:vregbank(<128 x s8>) = G_BITCAST [[BITCAST]](<64 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[BITCAST]](<64 x s16>), implicit [[BITCAST1]](<32 x s32>), implicit [[BITCAST2]](<16 x s64>), implicit [[BITCAST3]](<128 x s8>)
    %0:_(<128 x s8>) = COPY $y2
    %1:_(<64 x s16>) = G_BITCAST %0(<128 x s8>)
    %2:_(<32 x s32>) = G_BITCAST %0(<128 x s8>)
    %3:_(<16 x s64>) =  G_BITCAST %0(<128 x s8>)
    %4:_(<128 x s8>) = G_BITCAST %1(<64 x s16>)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...
