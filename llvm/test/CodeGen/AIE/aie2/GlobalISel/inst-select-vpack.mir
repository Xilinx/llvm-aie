# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VPACK_D8_D16_dyn
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VPACK_D8_D16_dyn
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY1]]
    ; CHECK-NEXT: [[VPACK_D8_D16_:%[0-9]+]]:vec256 = VPACK_D8_D16 [[COPY]], implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_D8_D16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:gprregbank(s32) = COPY $r0
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I8.I16), %1:vregbank(<32 x s16>), %2:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VPACK_D4_D8_dyn
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VPACK_D4_D8_dyn
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: $crpacksign = COPY [[COPY1]]
    ; CHECK-NEXT: [[VPACK_D4_D8_:%[0-9]+]]:vec256 = VPACK_D4_D8 [[COPY]], implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $crpacksign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_D4_D8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<64 x s8>) = COPY $x2
    %2:gprregbank(s32) = COPY $r0
    %3:vregbank(<32 x s16>) = G_BITCAST %1:vregbank(<64 x s8>)
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I4.I8), %3:vregbank(<32 x s16>), %2:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VPACK_S8_S16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VPACK_S8_S16
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VPACK_S8_S16_:%[0-9]+]]:vec256 = VPACK_S8_S16 [[COPY]], implicit $crsat
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_S8_S16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I8.I16), %1:vregbank(<32 x s16>), %2:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VPACK_D8_D16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VPACK_D8_D16
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VPACK_D8_D16_:%[0-9]+]]:vec256 = VPACK_D8_D16 [[COPY]], implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_D8_D16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:gprregbank(s32) = G_CONSTANT i32 0
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I8.I16), %1:vregbank(<32 x s16>), %2:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VPACK_S4_S8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VPACK_S4_S8
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VPACK_S4_S8_:%[0-9]+]]:vec256 = VPACK_S4_S8 [[COPY]], implicit $crsat
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_S4_S8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<64 x s8>) = COPY $x2
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %2:vregbank(<32 x s16>) = G_BITCAST %1:vregbank(<64 x s8>)
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I4.I8), %2:vregbank(<32 x s16>), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VPACK_D4_D8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VPACK_D4_D8
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VPACK_D4_D8_:%[0-9]+]]:vec256 = VPACK_D4_D8 [[COPY]], implicit $crsat, implicit $crpacksign
    ; CHECK-NEXT: $wl0 = COPY [[VPACK_D4_D8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<64 x s8>) = COPY $x2
    %3:gprregbank(s32) = G_CONSTANT i32 0
    %2:vregbank(<32 x s16>) = G_BITCAST %1:vregbank(<64 x s8>)
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.pack.I4.I8), %2:vregbank(<32 x s16>), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...
