# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name: and_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: and_s32
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r7
    ; CHECK-NEXT: [[AND:%[0-9]+]]:er = AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[AND]]
    %0:gprregbank(s32) = COPY $r6
    %1:gprregbank(s32) = COPY $r7
    %2:gprregbank(s32) = G_AND %0, %1
    PseudoRET implicit $lr, implicit %2
...

---
name: and_vec_256
legalized: true
regBankSelected: true
body: |
  bb.0:
    liveins: $wl0, $wh1
    ; CHECK-LABEL: name: and_vec_256
    ; CHECK: liveins: $wl0, $wh1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ewl = COPY $wl0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ewl = COPY $wh1
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_lo
    ; CHECK-NEXT: [[REG_SEQUENCE1:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY]], %subreg.sub_256_lo
    ; CHECK-NEXT: [[VBAND:%[0-9]+]]:mxm = VBAND [[REG_SEQUENCE1]], [[REG_SEQUENCE]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ewl = COPY [[VBAND]].sub_256_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY2]]
    %0:vregbank(<32 x s8>) = COPY $wl0
    %1:vregbank(<32 x s8>) = COPY $wh1
    %2:vregbank(<32 x s8>) = G_AND %0:vregbank, %1:vregbank
    PseudoRET implicit $lr, implicit %2:vregbank(<32 x s8>)
...

---
name: and_vec_512
legalized: true
regBankSelected: true
body: |
  bb.0:
    liveins: $x0, $x1
    ; CHECK-LABEL: name: and_vec_512
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x1
    ; CHECK-NEXT: [[VBAND:%[0-9]+]]:vec512 = VBAND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[VBAND]]
    %0:vregbank(<64 x s8>) = COPY $x0
    %1:vregbank(<64 x s8>) = COPY $x1
    %2:vregbank(<64 x s8>) = G_AND %0:vregbank, %1:vregbank
    PseudoRET implicit $lr, implicit %2:vregbank(<64 x s8>)
...

---
name: and_vec_1024
legalized: true
regBankSelected: true
body: |
  bb.0:
    liveins: $y2, $y3
    ; CHECK-LABEL: name: and_vec_1024
    ; CHECK: liveins: $y2, $y3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec1024 = COPY $y2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec1024 = COPY $y3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:exo = COPY [[COPY1]].sub_512_hi
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:exo = COPY [[COPY]].sub_512_hi
    ; CHECK-NEXT: [[VBAND:%[0-9]+]]:exo = VBAND [[COPY3]], [[COPY2]]
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:exe = COPY [[COPY1]].sub_512_lo
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:exe = COPY [[COPY]].sub_512_lo
    ; CHECK-NEXT: [[VBAND1:%[0-9]+]]:exe = VBAND [[COPY5]], [[COPY4]]
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec1024 = REG_SEQUENCE [[VBAND1]], %subreg.sub_512_lo, [[VBAND]], %subreg.sub_512_hi
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:vregbank(<64 x s16>) = COPY $y2
    %1:vregbank(<64 x s16>) = COPY $y3
    %2:vregbank(<64 x s16>) = G_AND %0:vregbank, %1:vregbank
    PseudoRET implicit $lr, implicit %2:vregbank(<64 x s16>)
...

---
name: and_mask_255_to_zext8
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: and_mask_255_to_zext8
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r6
    ; CHECK-NEXT: [[EXTENDu8_:%[0-9]+]]:er = EXTENDu8 [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[EXTENDu8_]]
    %0:gprregbank(s32) = COPY $r6
    %1:gprregbank(s32) = G_CONSTANT i32 255
    %2:gprregbank(s32) = G_AND %0, %1
    PseudoRET implicit $lr, implicit %2
...

---
name: and_mask_65535_to_zext16
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: and_mask_65535_to_zext16
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r6
    ; CHECK-NEXT: [[EXTENDu16_:%[0-9]+]]:er = EXTENDu16 [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[EXTENDu16_]]
    %0:gprregbank(s32) = COPY $r6
    %1:gprregbank(s32) = G_CONSTANT i32 65535
    %2:gprregbank(s32) = G_AND %0, %1
    PseudoRET implicit $lr, implicit %2
...
