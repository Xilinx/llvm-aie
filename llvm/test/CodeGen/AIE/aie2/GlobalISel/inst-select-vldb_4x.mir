# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_load_4x16_lo
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x16_lo
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x16_LO:%[0-9]+]]:vec256 = VLDB_4x16_LO [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x16_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x16.lo), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            test_load_4x16_hi
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x16_hi
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x16_HI:%[0-9]+]]:vec256 = VLDB_4x16_HI [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x16_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x16.hi), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            test_load_4x32_lo
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x32_lo
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x32_LO:%[0-9]+]]:vec256 = VLDB_4x32_LO [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x32_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x32.lo), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            test_load_4x32_hi
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x32_hi
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x32_HI:%[0-9]+]]:vec256 = VLDB_4x32_HI [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x32_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x32.hi), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            test_load_4x64_lo
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x64_lo
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x64_LO:%[0-9]+]]:vec256 = VLDB_4x64_LO [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x64_LO]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x64.lo), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            test_load_4x64_hi
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1:
    liveins: $wl2

    ; CHECK-LABEL: name: test_load_4x64_hi
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[VLDB_4x64_HI:%[0-9]+]]:vec256 = VLDB_4x64_HI [[COPY]]
    ; CHECK-NEXT: $wl0 = COPY [[VLDB_4x64_HI]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<8 x s32>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.load.4x64.hi), %1(<8 x s32>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
