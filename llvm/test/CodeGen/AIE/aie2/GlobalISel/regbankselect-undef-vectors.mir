# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s
...
---
name:            _Z12test_v8int32v
alignment:       16
legalized:       true
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z12test_v8int32v
    ; CHECK: [[INT:%[0-9]+]]:vregbank(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v8int32)
    ; CHECK-NEXT: $wl0 = COPY [[INT]](<8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %0:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v8int32)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            _Z12test_v32int8v
alignment:       16
legalized:       true
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z12test_v32int8v
    ; CHECK: [[INT:%[0-9]+]]:vregbank(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.v32int8)
    ; CHECK-NEXT: $wl0 = COPY [[INT]](<32 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %0:_(<32 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.v32int8)
    $wl0 = COPY %0(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            _Z12test_v64int4v
alignment:       16
legalized:       true
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z12test_v64int4v
    ; CHECK: [[INT:%[0-9]+]]:vregbank(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v8int32)
    ; CHECK-NEXT: $wl0 = COPY [[INT]](<8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %0:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v8int32)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0

...
---
name:            _Z13test_v16int32v
alignment:       16
legalized:       true
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z13test_v16int32v
    ; CHECK: [[INT:%[0-9]+]]:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v16int32)
    ; CHECK-NEXT: $x0 = COPY [[INT]](<16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %0:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v16int32)
    $x0 = COPY %0(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0

...
---
name:            _Z13test_v32int32v
alignment:       16
legalized:       true
tracksRegLiveness: true
registers:
  - { id: 0, class: _ }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z13test_v32int32v
    ; CHECK: [[INT:%[0-9]+]]:vregbank(<32 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v32int32)
    ; CHECK-NEXT: $y2 = COPY [[INT]](<32 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $y2
    %0:_(<32 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.v32int32)
    $y2 = COPY %0(<32 x s32>)
    PseudoRET implicit $lr, implicit $y2

...
