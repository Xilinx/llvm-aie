# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select -o - -verify-machineinstrs %s | FileCheck %s


---
name: post-inc-store
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $p0, $p1, $r0, $r1
    ; CHECK-LABEL: name: post-inc-store
    ; CHECK: liveins: $p0, $p1, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep_as_32bit = COPY $p1
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 10
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm_imm:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm_imm [[COPY2]], [[COPY]], -128 :: (store (s32))
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm_imm1:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm_imm [[COPY2]], [[COPY]], 124 :: (store (s32))
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm_imm2:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm_imm [[COPY2]], [[COPY]], 128 :: (store (s32))
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:em = COPY [[COPY2]]
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm [[COPY2]], [[COPY]], [[COPY3]] :: (store (s32))
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm1:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm [[COPY2]], [[COPY]], [[MOV_PD_imm10_pseudo]] :: (store (s32))
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm_imm3:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm_imm [[COPY2]], [[COPY]], 16 :: (store (s32))
    ; CHECK-NEXT: [[ST_dms_sts_pstm_nrm_imm4:%[0-9]+]]:ep = ST_dms_sts_pstm_nrm_imm [[COPY1]], [[COPY]], 16 :: (store (p0), align 4)
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:ptrregbank(p0) = COPY $p0
    %8:ptrregbank(p0) = COPY $p1
    %1:modregbank(s20) = G_CONSTANT i20 -128
    %2:modregbank(s20) = G_CONSTANT i20 124
    %3:modregbank(s20) = G_CONSTANT i20 128
    %5:modregbank(s20) = G_CONSTANT i20 10
    %6:modregbank(s20) = G_CONSTANT i20 16
    %4:gprregbank(s32) = COPY $r0
    %80:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %1 :: (store (s32))
    %81:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %2 :: (store (s32))
    %82:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %3 :: (store (s32))
    %83:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %4 :: (store (s32))
    %84:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %5 :: (store (s32))
    %85:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %6 :: (store (s32))
    %86:ptrregbank(p0) = G_AIE_POSTINC_STORE %8, %0, %6 :: (store (p0))
    PseudoRET implicit $lr
...

---
name: post-inc-hb-store
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $p0, $r0, $r1
    ; CHECK-LABEL: name: post-inc-hb-store
    ; CHECK: liveins: $p0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm_imm:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm_imm [[COPY1]], [[COPY]], -4 :: (store (s8))
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm_imm1:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm_imm [[COPY1]], [[COPY]], 3 :: (store (s8))
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm [[COPY1]], [[COPY]], [[MOV_PD_imm10_pseudo]] :: (store (s8))
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:em = COPY [[COPY1]]
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm1:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm [[COPY1]], [[COPY]], [[COPY2]] :: (store (s8))
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm_imm2:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm_imm [[COPY1]], [[COPY]], 2 :: (store (s8))
    ; CHECK-NEXT: [[ST_S8_ag_pstm_nrm_imm3:%[0-9]+]]:ep = ST_S8_ag_pstm_nrm_imm [[COPY1]], [[COPY]], -3 :: (store (s8))
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm_imm:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm_imm [[COPY1]], [[COPY]], -4 :: (store (s16))
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm_imm1:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm_imm [[COPY1]], [[COPY]], 3 :: (store (s16))
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm [[COPY1]], [[COPY]], [[MOV_PD_imm10_pseudo]] :: (store (s16))
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:em = COPY [[COPY1]]
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm1:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm [[COPY1]], [[COPY]], [[COPY3]] :: (store (s16))
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm_imm2:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm_imm [[COPY1]], [[COPY]], 2 :: (store (s16))
    ; CHECK-NEXT: [[ST_S16_ag_pstm_nrm_imm3:%[0-9]+]]:ep = ST_S16_ag_pstm_nrm_imm [[COPY1]], [[COPY]], -3 :: (store (s16))
    ; CHECK-NEXT: PseudoRET implicit $lr
    %0:ptrregbank(p0) = COPY $p0
    %1:gprregbank(s20) = G_CONSTANT i20 -4
    %2:modregbank(s20) = G_CONSTANT i20 3
    %3:modregbank(s20) = G_CONSTANT i20 8
    %5:modregbank(s20) = G_CONSTANT i20 2
    %6:modregbank(s20) = G_CONSTANT i20 -3
    %4:gprregbank(s32) = COPY $r0
    %80:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %1 :: (store (s8))
    %81:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %2 :: (store (s8))
    %82:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %3 :: (store (s8))
    %83:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %4 :: (store (s8))
    %84:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %5 :: (store (s8))
    %85:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %6 :: (store (s8))
    %86:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %1 :: (store (s16))
    %87:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %2 :: (store (s16))
    %88:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %3 :: (store (s16))
    %89:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %4 :: (store (s16))
    %90:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %5 :: (store (s16))
    %91:ptrregbank(p0) = G_AIE_POSTINC_STORE %4, %0, %6 :: (store (s16))
    PseudoRET implicit $lr
...
