# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s

---
name: COPY_ptr
legalized: true

body: |
  bb.0:
    liveins: $p0
    ; CHECK-LABEL: name: COPY_ptr
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: $m0 = COPY [[COPY]](p0)
    %0:_(p0) = COPY $p0
    $m0 = COPY %0
...

---
name: COPY_mod
legalized: true

body: |
  bb.0:
    liveins: $m0
    ; CHECK-LABEL: name: COPY_mod
    ; CHECK: liveins: $m0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:modregbank(p0) = COPY $m0
    ; CHECK-NEXT: $p0 = COPY [[COPY]](p0)
    %0:_(p0) = COPY $m0
    $p0 = COPY %0
...

---
name:            copy_256bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $wl0
    ; CHECK-LABEL: name: copy_256bit_vec
    ; CHECK: liveins: $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<8 x s32>) = COPY $amll0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:accregbank(<16 x s16>) = COPY $amll0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:accregbank(<32 x s8>) = COPY $amll0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<8 x s32>), implicit [[COPY1]](<16 x s16>), implicit [[COPY2]](<32 x s8>)
    %0:_(<8 x s32>) = COPY $amll0
    %1:_(<16 x s16>) = COPY $amll0
    %2:_(<32 x s8>) = COPY $amll0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_512bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $bml0
    ; CHECK-LABEL: name: copy_512bit_vec
    ; CHECK: liveins: $bml0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<16 x s32>) = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:accregbank(<32 x s16>) = COPY $bml0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:accregbank(<64 x s8>) = COPY $bml0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s32>), implicit [[COPY1]](<32 x s16>), implicit [[COPY2]](<64 x s8>)
    %0:_(<16 x s32>) = COPY $bml0
    %1:_(<32 x s16>) = COPY $bml0
    %2:_(<64 x s8>) = COPY $bml0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_1024bit_vec
legalized:       true

body: |
  bb.0:
    liveins: $y2
    ; CHECK-LABEL: name: copy_1024bit_vec
    ; CHECK: liveins: $y2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:accregbank(<32 x s32>) = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:accregbank(<64 x s16>) = COPY $cm0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:accregbank(<128 x s8>) = COPY $cm0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<32 x s32>), implicit [[COPY1]](<64 x s16>), implicit [[COPY2]](<128 x s8>)
    %0:_(<32 x s32>) = COPY $cm0
    %1:_(<64 x s16>) = COPY $cm0
    %2:_(<128 x s8>) = COPY $cm0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2
...

---
name:            copy_256bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $wl0
    ; CHECK-LABEL: name: copy_256bit_acc
    ; CHECK: liveins: $wl0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<4 x s64>) = COPY $wl0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<4 x s64>)
    %0:_(<4 x s64>) = COPY $wl0
    PseudoRET implicit $lr, implicit %0
...

---
name:            copy_512bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $x0
    ; CHECK-LABEL: name: copy_512bit_acc
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<8 x s64>) = COPY $x0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<8 x s64>)
    %0:_(<8 x s64>) = COPY $x0
    PseudoRET implicit $lr, implicit %0
...

---
name:            copy_1024bit_acc
legalized:       true

body: |
  bb.0:
    liveins: $y2
    ; CHECK-LABEL: name: copy_1024bit_acc
    ; CHECK: liveins: $y2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vregbank(<16 x s64>) = COPY $y2
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s64>)
    %0:_(<16 x s64>) = COPY $y2
    PseudoRET implicit $lr, implicit %0
...
