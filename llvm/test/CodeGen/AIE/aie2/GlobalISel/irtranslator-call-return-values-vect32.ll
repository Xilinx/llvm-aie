; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie2 -O0 -stop-after=irtranslator -global-isel -verify-machineinstrs %s -o - 2>&1 | FileCheck %s

; 32-bit vector types


declare <2 x bfloat> @callee_v2bf16()
define void @call_v2bf16() {
  ; CHECK-LABEL: name: call_v2bf16
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoJL @callee_v2bf16, csr_aie2, implicit-def $lr, implicit-def $r0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $r0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <2 x bfloat> @callee_v2bf16()
  ret void
}

declare <2 x i16> @callee_v2int16()
define void @call_v2int16() {
  ; CHECK-LABEL: name: call_v2int16
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoJL @callee_v2int16, csr_aie2, implicit-def $lr, implicit-def $r0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $r0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <2 x i16> @callee_v2int16()
  ret void
}

declare <4 x i8> @callee_v4int8()
define void @call_v4int8() {
  ; CHECK-LABEL: name: call_v4int8
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoJL @callee_v4int8, csr_aie2, implicit-def $lr, implicit-def $r0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<4 x s8>) = COPY $r0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <4 x i8> @callee_v4int8()
  ret void
}
