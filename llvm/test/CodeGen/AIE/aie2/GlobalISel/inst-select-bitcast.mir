# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            test_32
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_32
    ; CHECK: [[COPY:%[0-9]+]]:er = COPY $r2
    ; CHECK-NEXT: $r1 = COPY [[COPY]]
    ; CHECK-NEXT: $r2 = COPY [[COPY]]
    ; CHECK-NEXT: $r3 = COPY [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]], implicit [[COPY]], implicit [[COPY]], implicit [[COPY]]
    %0:gprregbank(<4 x s8>) = COPY $r2
    %1:gprregbank(<2 x s16>) = G_BITCAST %0(<4 x s8>)
    %2:gprregbank(s32)       = G_BITCAST %0(<4 x s8>)
    %3:gprregbank(<4 x s8>)  = G_BITCAST %2(s32)
    %4:gprregbank(<2 x s16>)  = G_BITCAST %2(s32)
    $r1 = COPY %1(<2 x s16>)
    $r2 = COPY %2(s32)
    $r3 = COPY %3(<4 x s8>)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            test_64
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: test_64
    ; CHECK: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: $l0 = COPY [[COPY]]
    ; CHECK-NEXT: $l1 = COPY [[COPY]]
    ; CHECK-NEXT: $l2 = COPY [[COPY]]
    ; CHECK-NEXT: $l3 = COPY [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]], implicit [[COPY]], implicit [[COPY]], implicit [[COPY]]
    %0:gprregbank(<8 x s8>) = COPY $l0
    %1:gprregbank(<4 x s16>) = G_BITCAST %0(<8 x s8>)
    %2:gprregbank(<2 x s32>) = G_BITCAST %0(<8 x s8>)
    %3:gprregbank(s64)       = G_BITCAST %0(<8 x s8>)
    %4:gprregbank(<8 x s8>)  = G_BITCAST %3(s64)
    $l0 = COPY %1(<4 x s16>)
    $l1 = COPY %2(<2 x s32>)
    $l2 = COPY %3(s64)
    $l3 = COPY %4(<8 x s8>)
    PseudoRET implicit $lr, implicit %1, implicit %2, implicit %3, implicit %4
...

---
name:            _Z4testDv16_s
alignment:       16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: vregbank }
  - { id: 1, class: vregbank }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    liveins: $wl2

    ; CHECK-LABEL: name: _Z4testDv16_s
    ; CHECK: liveins: $wl2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: $wl0 = COPY [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:vregbank(<16 x s16>) = COPY $wl2
    %0:vregbank(<8 x s32>) = G_BITCAST %1(<16 x s16>)
    $wl0 = COPY %0(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            _Z4testDv32_s
alignment:       16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: vregbank }
  - { id: 1, class: vregbank }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    liveins: $x2

    ; CHECK-LABEL: name: _Z4testDv32_s
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: $x0 = COPY [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %0:vregbank(<16 x s32>) = G_BITCAST %1(<32 x s16>)
    $x0 = COPY %0(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            _Z4testDv16_x
alignment:       16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: vregbank }
  - { id: 1, class: accregbank }
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  varArgsFrameIndex: 0
body:             |
  bb.1.entry:
    liveins: $cm0

    ; CHECK-LABEL: name: _Z4testDv16_x
    ; CHECK: liveins: $cm0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec1024 = COPY [[COPY]]
    ; CHECK-NEXT: $y2 = COPY [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $y2
    %1:accregbank(<16 x s64>) = COPY $cm0
    %0:vregbank(<32 x s32>) = G_BITCAST %1(<16 x s64>)
    $y2 = COPY %0(<32 x s32>)
    PseudoRET implicit $lr, implicit $y2
...
