; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie2 -O0 -stop-after=irtranslator -global-isel -verify-machineinstrs %s -o - 2>&1 | FileCheck %s

declare <4 x i64> @callee_v4int64()
define void @call_v4int64() {
  ; CHECK-LABEL: name: call_v4int64
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0
  ; CHECK-NEXT:   JL @callee_v4int64, csr_aie2, implicit-def $lr, implicit-def $amll0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<4 x s64>) = COPY $amll0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <4 x i64> @callee_v4int64()
  ret void
}

declare <8 x i64> @callee_v8int64()
define void @call_v8int64() {
  ; CHECK-LABEL: name: call_v8int64
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0
  ; CHECK-NEXT:   JL @callee_v8int64, csr_aie2, implicit-def $lr, implicit-def $bml0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<8 x s64>) = COPY $bml0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <8 x i64> @callee_v8int64()
  ret void
}

declare <16 x i64> @callee_v16int64()
define void @call_v16int64() {
  ; CHECK-LABEL: name: call_v16int64
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   ADJCALLSTACKUP 0, 0
  ; CHECK-NEXT:   JL @callee_v16int64, csr_aie2, implicit-def $lr, implicit-def $cm0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:_(<16 x s64>) = COPY $cm0
  ; CHECK-NEXT:   ADJCALLSTACKDOWN 0, 0
  ; CHECK-NEXT:   PseudoRET implicit $lr
  %res = call <16 x i64> @callee_v16int64()
  ret void
}
