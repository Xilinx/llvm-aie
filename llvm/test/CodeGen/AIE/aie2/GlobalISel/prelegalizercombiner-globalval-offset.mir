# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=aie2-prelegalizer-combiner %s -verify-machineinstrs -o - | FileCheck %s
--- |
  @data = dso_local local_unnamed_addr global [2 x i32] [i32 10, i32 20], align 4

  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none)
  define dso_local noundef i32 @_Z7getDatav() {
  entry:
    %0 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @data, i20 0, i20 1), align 4
    ret i32 %0
  }
...
---
name:            _Z7getDatav
legalized:       false
body:             |
  bb.1.entry:
    ; CHECK-LABEL: name: _Z7getDatav
    ; CHECK: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE target-flags(aie2-global) @data + 4
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[GV]](p0) :: (dereferenceable load (s32) from `ptr getelementptr inbounds ([2 x i32], ptr @data, i20 0, i20 1)`)
    ; CHECK-NEXT: $r0 = COPY [[LOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %2:_(p0) = G_GLOBAL_VALUE @data
    %3:_(s20) = G_CONSTANT i20 4
    %1:_(p0) = G_PTR_ADD %2, %3(s20)
    %0:_(s32) = G_LOAD %1(p0) :: (dereferenceable load (s32) from `ptr getelementptr inbounds ([2 x i32], ptr @data, i20 0, i20 1)`)
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0

...
