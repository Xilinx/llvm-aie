# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc -mtriple aie2 -run-pass=aie-post-select-optimize,dead-mi-elimination %s -verify-machineinstrs -o - | FileCheck %s

# This file tests how chains of INSERT_SUBREG instructions are combined into
# REG_SEQUENCE instructions.

---
name:            combine_256
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $x0, $wl2, $wh2
    ; CHECK-LABEL: name: combine_256
    ; CHECK: liveins: $x0, $wl2, $wh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_hi, [[COPY]], %subreg.sub_256_lo
    ; CHECK-NEXT: $x4 = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x4
    %0:vec512 = COPY $x0
    %1:vec256 = COPY $wl2
    %2:vec256 = COPY $wh2
    %5:vec512 = INSERT_SUBREG %0, %1, %subreg.sub_256_lo
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_hi
    $x4 = COPY %6
    PseudoRET implicit $lr, implicit $x4
...

---
name:            combine_256_hi_first
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $x0, $wl2, $wh2
    ; CHECK-LABEL: name: combine_256_hi_first
    ; CHECK: liveins: $x0, $wl2, $wh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY]], %subreg.sub_256_hi, [[COPY1]], %subreg.sub_256_lo
    ; CHECK-NEXT: $x4 = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x4
    %0:vec512 = COPY $x0
    %1:vec256 = COPY $wl2
    %2:vec256 = COPY $wh2
    %5:vec512 = INSERT_SUBREG %0, %1, %subreg.sub_256_hi
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_lo
    $x4 = COPY %6
    PseudoRET implicit $lr, implicit $x4
...

---
name:            combine_256_incorrect
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $x0, $wl2, $wh2
    ; CHECK-LABEL: name: combine_256_incorrect
    ; CHECK: liveins: $x0, $wl2, $wh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY $wl2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[INSERT_SUBREG:%[0-9]+]]:vec512 = INSERT_SUBREG [[COPY]], [[COPY1]], %subreg.sub_256_hi
    ; CHECK-NEXT: [[INSERT_SUBREG1:%[0-9]+]]:vec512 = INSERT_SUBREG [[INSERT_SUBREG]], [[COPY2]], %subreg.sub_256_hi
    ; CHECK-NEXT: $x4 = COPY [[INSERT_SUBREG1]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x4
    %0:vec512 = COPY $x0
    %1:vec256 = COPY $wl2
    %2:vec256 = COPY $wh2
    %5:vec512 = INSERT_SUBREG %0, %1, %subreg.sub_256_hi
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_hi
    $x4 = COPY %6
    PseudoRET implicit $lr, implicit $x4
...

---
name:            combine_256_redundant
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $x0, $wl2, $wh2
    ; CHECK-LABEL: name: combine_256_redundant
    ; CHECK: liveins: $x0, $wl2, $wh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_hi, [[COPY]], %subreg.sub_256_lo
    ; CHECK-NEXT: $x4 = COPY [[REG_SEQUENCE]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x4
    %0:vec512 = COPY $x0
    %1:vec256 = COPY $wl2
    %2:vec256 = COPY $wh2
    %3:vec256 = COPY $wh2
    %5:vec512 = INSERT_SUBREG %0, %1, %subreg.sub_256_hi
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_lo
    %7:vec512 = INSERT_SUBREG %6, %3, %subreg.sub_256_hi
    $x4 = COPY %7
    PseudoRET implicit $lr, implicit $x4
...

# Not combined if the INSERT_SUBREG are in different MBBs.
---
name:            combine_256_different_MBB
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: combine_256_different_MBB
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $x0, $wl2, $wh2
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:vec512 = COPY $x0
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:vec256 = COPY $wl2
  ; CHECK-NEXT:   [[COPY2:%[0-9]+]]:vec256 = COPY $wh2
  ; CHECK-NEXT:   [[INSERT_SUBREG:%[0-9]+]]:vec512 = INSERT_SUBREG [[COPY]], [[COPY1]], %subreg.sub_256_hi
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   [[INSERT_SUBREG1:%[0-9]+]]:vec512 = INSERT_SUBREG [[INSERT_SUBREG]], [[COPY2]], %subreg.sub_256_lo
  ; CHECK-NEXT:   $x4 = COPY [[INSERT_SUBREG1]]
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit $x4
  bb.0.entry:
  liveins: $x0, $wl2, $wh2
    %0:vec512 = COPY $x0
    %1:vec256 = COPY $wl2
    %2:vec256 = COPY $wh2
    %3:vec256 = COPY $wh2
    %5:vec512 = INSERT_SUBREG %0, %1, %subreg.sub_256_hi
  bb.1:
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_lo
    $x4 = COPY %6
    PseudoRET implicit $lr, implicit $x4
...


---
name:            combine_256_with_reg_sequence
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $wl2, $wh2
    ; CHECK-LABEL: name: combine_256_with_reg_sequence
    ; CHECK: liveins: $wl2, $wh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ewl = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec256 = COPY $wh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_hi, [[COPY]], %subreg.sub_256_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %1:ewl = COPY $wl2
    %2:vec256 = COPY $wh2
    %5:vec512 = REG_SEQUENCE %1, %subreg.sub_256_lo
    %6:vec512 = INSERT_SUBREG %5, %2, %subreg.sub_256_hi
    PseudoRET implicit $lr, implicit %6
...

---
name:            combine_256_acc
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $bml0, $amll2, $amlh2
    ; CHECK-LABEL: name: combine_256_acc
    ; CHECK: liveins: $bml0, $amll2, $amlh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc256 = COPY $amll2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:acc256 = COPY $amlh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:acc512 = REG_SEQUENCE [[COPY1]], %subreg.sub_256_hi, [[COPY]], %subreg.sub_256_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:acc512 = COPY $bml0
    %1:acc256 = COPY $amll2
    %5:acc512 = INSERT_SUBREG %0, %1, %subreg.sub_256_lo
    %2:acc256 = COPY $amlh2
    %6:acc512 = INSERT_SUBREG %5, %2, %subreg.sub_256_hi
    PseudoRET implicit $lr, implicit %6
...

---
name:            combine_512_vec
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $y4, $x4, $x5
    ; CHECK-LABEL: name: combine_512_vec
    ; CHECK: liveins: $y4, $x4, $x5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:exe = COPY $x4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x5
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vec1024 = REG_SEQUENCE [[COPY1]], %subreg.sub_512_hi, [[COPY]], %subreg.sub_512_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:vec1024 = COPY $y4
    %5:exe = COPY $x4
    %6:vec1024 = INSERT_SUBREG %0, %5, %subreg.sub_512_lo
    %10:vec512 = COPY $x5
    %11:vec1024 = INSERT_SUBREG %6, %10, %subreg.sub_512_hi
    PseudoRET implicit $lr, implicit %11
...

---
name:            combine_512_acc
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $cm4, $bml2, $bmh2
    ; CHECK-LABEL: name: combine_512_acc
    ; CHECK: liveins: $cm4, $bml2, $bmh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ebml = COPY $bml2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:acc512 = COPY $bmh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:acc1024 = REG_SEQUENCE [[COPY1]], %subreg.sub_512_hi, [[COPY]], %subreg.sub_512_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %0:acc1024 = COPY $cm4
    %5:ebml = COPY $bml2
    %6:acc1024 = INSERT_SUBREG %0, %5, %subreg.sub_512_lo
    %10:acc512 = COPY $bmh2
    %11:acc1024 = INSERT_SUBREG %6, %10, %subreg.sub_512_hi
    PseudoRET implicit $lr, implicit %11
...

---
name:            combine_512_acc_with_reg_sequence
alignment:       16
legalized:       true
regBankSelected: true
selected:        true
tracksRegLiveness: true
body:             |
  bb.0.entry:
  liveins: $bml2, $bmh2
    ; CHECK-LABEL: name: combine_512_acc_with_reg_sequence
    ; CHECK: liveins: $bml2, $bmh2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ebml = COPY $bml2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:acc512 = COPY $bmh2
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:acc1024 = REG_SEQUENCE [[COPY1]], %subreg.sub_512_hi, [[COPY]], %subreg.sub_512_lo
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[REG_SEQUENCE]]
    %5:ebml = COPY $bml2
    %6:acc1024 = REG_SEQUENCE %5, %subreg.sub_512_lo
    %10:acc512 = COPY $bmh2
    %11:acc1024 = INSERT_SUBREG %6, %10, %subreg.sub_512_hi
    PseudoRET implicit $lr, implicit %11
...
