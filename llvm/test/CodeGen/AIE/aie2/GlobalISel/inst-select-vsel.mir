# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            vsel_8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $r1, $x2, $x4
    ; CHECK-LABEL: name: vsel_8
    ; CHECK: liveins: $r0, $r1, $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x4
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: [[REG_SEQUENCE:%[0-9]+]]:el = REG_SEQUENCE [[COPY2]], %subreg.sub_l_even, [[COPY3]], %subreg.sub_l_odd
    ; CHECK-NEXT: [[VSEL_8_:%[0-9]+]]:vec512 = VSEL_8 [[COPY]], [[COPY1]], [[REG_SEQUENCE]]
    ; CHECK-NEXT: $x0 = COPY [[VSEL_8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<64 x s8>) = COPY $x2
    %2:vregbank(<64 x s8>) = COPY $x4
    %4:gprregbank(s32) = COPY $r0
    %5:gprregbank(s32) = COPY $r1
    %3:gprregbank(s64) = G_MERGE_VALUES %4:gprregbank(s32), %5:gprregbank(s32)
    %6:gprregbank(<2 x s32>) = G_BITCAST %3:gprregbank(s64)
    %0:vregbank(<64 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.vsel8), %1:vregbank(<64 x s8>), %2:vregbank(<64 x s8>), %6:gprregbank(<2 x s32>)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            vsel_16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2, $x4
    ; CHECK-LABEL: name: vsel_16
    ; CHECK: liveins: $r0, $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x4
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY $r0
    ; CHECK-NEXT: [[VSEL_16_:%[0-9]+]]:vec512 = VSEL_16 [[COPY]], [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: $x0 = COPY [[VSEL_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:vregbank(<32 x s16>) = COPY $x4
    %3:gprregbank(s32) = COPY $r0
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vsel16), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            vsel_32
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2, $x4
    ; CHECK-LABEL: name: vsel_32
    ; CHECK: liveins: $r0, $x2, $x4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x4
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:ers8 = COPY $r0
    ; CHECK-NEXT: [[VSEL_32_:%[0-9]+]]:vec512 = VSEL_32 [[COPY]], [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: $x0 = COPY [[VSEL_32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<16 x s32>) = COPY $x2
    %2:vregbank(<16 x s32>) = COPY $x4
    %3:gprregbank(s32) = COPY $r0
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vsel32), %1:vregbank(<16 x s32>), %2:vregbank(<16 x s32>), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...
