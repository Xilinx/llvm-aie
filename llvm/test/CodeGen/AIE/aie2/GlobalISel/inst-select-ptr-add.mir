# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name: ptr_add
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: ptr_add
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r6
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY [[COPY]]
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:er = ADD [[COPY2]], [[COPY1]], implicit-def $srcarry
    ; CHECK-NEXT: $p0 = COPY [[ADD]]
    %0:ptrregbank(p0) = COPY $p0
    %1:gprregbank(s32) = COPY $r6
    %2:gprregbank(s20) = G_TRUNC %1
    %3:gprregbank(p0) = COPY %0(p0)
    %4:gprregbank(p0) = G_PTR_ADD %3, %2
    $p0 = COPY %4
...

---
name: ptr_add_s20_on_ptr
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0, $p1
    ; CHECK-LABEL: name: ptr_add_s20_on_ptr
    ; CHECK: liveins: $p0, $p1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:em = COPY [[COPY1]]
    ; CHECK-NEXT: [[PADD_mod_pseudo:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], [[COPY2]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_mod_pseudo]]
    %0:ptrregbank(p0) = COPY $p0
    %1:ptrregbank(s20) = COPY $p1
    %2:modregbank(s20) = COPY %1
    %3:ptrregbank(p0) = G_PTR_ADD %0, %2
    $p0 = COPY %3
...

---
name: ptr_add_s20_on_ptr_valid_imm
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0
    ; CHECK-LABEL: name: ptr_add_s20_on_ptr_valid_imm
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[MOVXM_lng_cg:%[0-9]+]]:em_as_32bit = MOVXM_lng_cg -2052
    ; CHECK-NEXT: [[MOVXM_lng_cg1:%[0-9]+]]:em_as_32bit = MOVXM_lng_cg 2048
    ; CHECK-NEXT: [[PADD_imm9_pseudo:%[0-9]+]]:ep = PADD_imm9_pseudo [[COPY]], 1020
    ; CHECK-NEXT: [[PADD_imm10_pseudo:%[0-9]+]]:ep = PADD_imm10_pseudo [[COPY]], -2048
    ; CHECK-NEXT: [[PADD_imm9_pseudo1:%[0-9]+]]:ep = PADD_imm9_pseudo [[COPY]], -1024
    ; CHECK-NEXT: [[PADD_mod_pseudo:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], [[MOVXM_lng_cg]]
    ; CHECK-NEXT: [[PADD_mod_pseudo1:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], [[MOVXM_lng_cg1]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_imm9_pseudo]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_imm10_pseudo]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_imm9_pseudo1]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_mod_pseudo]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_mod_pseudo1]]
    %0:ptrregbank(p0) = COPY $p0
    %1:modregbank(s20) = G_CONSTANT i20 1020
    %2:modregbank(s20) = G_CONSTANT i20 -2048
    %3:modregbank(s20) = G_CONSTANT i20 -1024
    %4:modregbank(s20) = G_CONSTANT i20 -2052
    %5:modregbank(s20) = G_CONSTANT i20 2048
    %6:ptrregbank(p0) = G_PTR_ADD %0, %1
    %7:ptrregbank(p0) = G_PTR_ADD %0, %2
    %8:ptrregbank(p0) = G_PTR_ADD %0, %3
    %9:ptrregbank(p0) = G_PTR_ADD %0, %4
    %10:ptrregbank(p0) = G_PTR_ADD %0, %5
    $p0 = COPY %6
    $p0 = COPY %7
    $p0 = COPY %8
    $p0 = COPY %9
    $p0 = COPY %10
...

---
name: ptr_add_s20_on_ptr_invalid_imm
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0, $p1
    ; CHECK-LABEL: name: ptr_add_s20_on_ptr_invalid_imm
    ; CHECK: liveins: $p0, $p1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep = COPY $p0
    ; CHECK-NEXT: [[MOV_PD_imm10_pseudo:%[0-9]+]]:em = MOV_PD_imm10_pseudo 93
    ; CHECK-NEXT: [[PADD_mod_pseudo:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], [[MOV_PD_imm10_pseudo]]
    ; CHECK-NEXT: [[MOVXM_lng_cg:%[0-9]+]]:em_as_32bit = MOVXM_lng_cg 2048
    ; CHECK-NEXT: [[PADD_mod_pseudo1:%[0-9]+]]:ep = PADD_mod_pseudo [[PADD_mod_pseudo]], [[MOVXM_lng_cg]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_mod_pseudo1]]
    %0:ptrregbank(p0) = COPY $p0
    %1:modregbank(s20) = G_CONSTANT i20 93
    %2:ptrregbank(p0) = G_PTR_ADD %0, %1
    %3:modregbank(s20) = G_CONSTANT i20 2048
    %4:ptrregbank(p0) = G_PTR_ADD %2, %3
    $p0 = COPY %4
...

---
name: ptr_add_s20_on_ptr_as_32bit
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $p0, $p1
    ; CHECK-LABEL: name: ptr_add_s20_on_ptr_as_32bit
    ; CHECK: liveins: $p0, $p1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ep_as_32bit = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:ep = COPY $p1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:em = COPY [[COPY1]]
    ; CHECK-NEXT: [[PADD_mod_pseudo:%[0-9]+]]:ep = PADD_mod_pseudo [[COPY]], [[COPY2]]
    ; CHECK-NEXT: $p0 = COPY [[PADD_mod_pseudo]]
    %0:ep_as_32bit(p0) = COPY $p0
    %1:ptrregbank(s20) = COPY $p1
    %2:modregbank(s20) = COPY %1
    %3:ptrregbank(p0) = G_PTR_ADD %0, %2
    $p0 = COPY %3
...
