# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VBCST_8
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
      liveins: $r0
    ; CHECK-LABEL: name: VBCST_8
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_8_:%[0-9]+]]:vec512 = VBCST_8 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
      %2:gprregbank(s32) = COPY $r0
      %3:gprregbank(s32) = G_ASSERT_SEXT %2:gprregbank, 8
      %0:vregbank(<64 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast8.I512), %3:gprregbank(s32)
      $x0 = COPY %0:vregbank(<64 x s8>)
      PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCST_8_ZEXT
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
      liveins: $r0
    ; CHECK-LABEL: name: VBCST_8_ZEXT
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_8_:%[0-9]+]]:vec512 = VBCST_8 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_8_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
      %2:gprregbank(s32) = COPY $r0
      %4:gprregbank(s32) = G_CONSTANT i32 255
      %3:gprregbank(s32) = G_AND %2, %4
      %0:vregbank(<64 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast8.I512), %3:gprregbank(s32)
      $x0 = COPY %0:vregbank(<64 x s8>)
      PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCST_16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VBCST_16
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_16_:%[0-9]+]]:vec512 = VBCST_16 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_ASSERT_SEXT %2:gprregbank, 16
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast16.I512), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCST_16_ZEXT
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VBCST_16_ZEXT
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_16_:%[0-9]+]]:vec512 = VBCST_16 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_ASSERT_SEXT %2, 16
    %5:gprregbank(s32) = G_CONSTANT i32 65535
    %4:gprregbank(s32) = G_AND %3, %5
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast16.I512), %4:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCST_32
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VBCST_32
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_32_:%[0-9]+]]:vec512 = VBCST_32 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(s32) = COPY $r0
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast32.I512), %1:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCST_64
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $l0
    ; CHECK-LABEL: name: VBCST_64
    ; CHECK: liveins: $l0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[VBCST_64_:%[0-9]+]]:vec512 = VBCST_64 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:el(<2 x s32>) = COPY $l0
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast64.I512), %1:el(<2 x s32>)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCST_16_bf
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VBCST_16_bf
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_16_:%[0-9]+]]:vec512 = VBCST_16 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_16_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %2:gprregbank(s32) = COPY $r0
    %1:gprregbank(s16) = G_TRUNC %2:gprregbank(s32)
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast16.bf512), %1:gprregbank(s16)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VBCST_32_bf
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0
    ; CHECK-LABEL: name: VBCST_32_bf
    ; CHECK: liveins: $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VBCST_32_:%[0-9]+]]:vec512 = VBCST_32 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(<2 x s16>) = COPY $r0
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast32.bf512), %1:gprregbank(<2 x s16>)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VBCST_64_bf
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $l0
    ; CHECK-LABEL: name: VBCST_64_bf
    ; CHECK: liveins: $l0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:el = COPY $l0
    ; CHECK-NEXT: [[VBCST_64_:%[0-9]+]]:vec512 = VBCST_64 [[COPY]]
    ; CHECK-NEXT: $x0 = COPY [[VBCST_64_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:gprregbank(<4 x s16>) = COPY $l0
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vbroadcast64.bf512), %1:gprregbank(<4 x s16>)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...
