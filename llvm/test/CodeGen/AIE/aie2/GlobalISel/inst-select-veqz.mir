# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VEQZ_8
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VEQZ_8
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VEQZ_8_:%[0-9]+]]:el = VEQZ_8 [[COPY]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[VEQZ_8_]]
    %1:vregbank(<64 x s8>) = COPY $x0
    %2:gprregbank(<2 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.veqz8), %1:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit %2
...

---
name:            VEQZ_16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VEQZ_16
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VEQZ_16_:%[0-9]+]]:ers8 = VEQZ_16 [[COPY]]
    ; CHECK-NEXT: $r0 = COPY [[VEQZ_16_]]
    %1:vregbank(<32 x s16>) = COPY $x0
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.veqz16), %1:vregbank(<32 x s16>)
    $r0 = COPY %0:gprregbank(s32)
...

---
name:            VEQZ_32
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: VEQZ_32
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[VEQZ_32_:%[0-9]+]]:ers8 = VEQZ_32 [[COPY]]
    ; CHECK-NEXT: $r0 = COPY [[VEQZ_32_]]
    %1:vregbank(<16 x s32>) = COPY $x0
    %0:gprregbank(s32) = G_INTRINSIC intrinsic(@llvm.aie2.veqz32), %1:vregbank(<16 x s32>)
    $r0 = COPY %0:gprregbank(s32)
...
