# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            v16accfloat_to_v16bfloat16
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0
    ; CHECK-LABEL: name: v16accfloat_to_v16bfloat16
    ; CHECK: liveins: $bml0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[VCONV_BF16_FP32_:%[0-9]+]]:vec256 = VCONV_BF16_FP32 [[COPY]], implicit-def dead $srf2fflags, implicit $crf2fmask, implicit $crrnd
    ; CHECK-NEXT: $wl0 = COPY [[VCONV_BF16_FP32_]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<8 x s64>) = COPY $bml0
    %0:vregbank(<16 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.v16accfloat.to.v16bf16), %1:accregbank(<8 x s64>)
    $wl0 = COPY %0:vregbank(<16 x s16>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_D8_S32_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D8_S32_mv_w_srs
    ; CHECK: liveins: $cm0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D8_S32_mv_w_srs:%[0-9]+]]:vec256 = VSRS_D8_S32_mv_w_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_D8_S32_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v32.acc32.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_D16_S64_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D16_S64_mv_w_srs
    ; CHECK: liveins: $cm0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D16_S64_mv_w_srs:%[0-9]+]]:vec256 = VSRS_D16_S64_mv_w_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_D16_S64_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<16 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v16.acc64.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<16 x s16>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_D16_S32_mv_x_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D16_S32_mv_x_srs
    ; CHECK: liveins: $cm0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D16_S32_mv_x_srs:%[0-9]+]]:vec512 = VSRS_D16_S32_mv_x_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $x0 = COPY [[VSRS_D16_S32_mv_x_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<32 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I512.v32.acc32.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VSRS_D32_S64_mv_x_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D32_S64_mv_x_srs
    ; CHECK: liveins: $cm0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D32_S64_mv_x_srs:%[0-9]+]]:vec512 = VSRS_D32_S64_mv_x_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $x0 = COPY [[VSRS_D32_S64_mv_x_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<16 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I512.v16.acc64.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VSRS_D32_S64_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D32_S64_mv_w_srs
    ; CHECK: liveins: $bml0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D32_S64_mv_w_srs:%[0-9]+]]:vec256 = VSRS_D32_S64_mv_w_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_D32_S64_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<8 x s64>) = COPY $bml0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v8.acc64.srs), %1:accregbank(<8 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_D16_S32_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0, $r0, $r1
    ; CHECK-LABEL: name: VSRS_D16_S32_mv_w_srs
    ; CHECK: liveins: $bml0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:er = COPY $r1
    ; CHECK-NEXT: $crsrssign = COPY [[COPY2]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_D16_S32_mv_w_srs:%[0-9]+]]:vec256 = VSRS_D16_S32_mv_w_srs [[COPY]], [[COPY3]], implicit-def $srsrs_of, implicit $crsat, implicit $crrnd, implicit $crsrssign
    ; CHECK-NEXT: $crsrssign = MOV_scalar_imm10_pseudo 0
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_D16_S32_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<8 x s64>) = COPY $bml0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = COPY $r1
    %0:vregbank(<16 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v16.acc32.srs), %1:accregbank(<8 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<16 x s16>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_S8_S32_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0
    ; CHECK-LABEL: name: VSRS_S8_S32_mv_w_srs
    ; CHECK: liveins: $cm0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S8_S32_mv_w_srs:%[0-9]+]]:vec256 = VSRS_S8_S32_mv_w_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_S8_S32_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<32 x s8>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v32.acc32.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<32 x s8>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_S16_S64_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0
    ; CHECK-LABEL: name: VSRS_S16_S64_mv_w_srs
    ; CHECK: liveins: $cm0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S16_S64_mv_w_srs:%[0-9]+]]:vec256 = VSRS_S16_S64_mv_w_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_S16_S64_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<16 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v16.acc64.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<16 x s16>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_S16_S32_mv_x_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0
    ; CHECK-LABEL: name: VSRS_S16_S32_mv_x_srs
    ; CHECK: liveins: $cm0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S16_S32_mv_x_srs:%[0-9]+]]:vec512 = VSRS_S16_S32_mv_x_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $x0 = COPY [[VSRS_S16_S32_mv_x_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<32 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I512.v32.acc32.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VSRS_S32_S64_mv_x_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $cm0, $r0
    ; CHECK-LABEL: name: VSRS_S32_S64_mv_x_srs
    ; CHECK: liveins: $cm0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc1024 = COPY $cm0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S32_S64_mv_x_srs:%[0-9]+]]:vec512 = VSRS_S32_S64_mv_x_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $x0 = COPY [[VSRS_S32_S64_mv_x_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:accregbank(<16 x s64>) = COPY $cm0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<16 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I512.v16.acc64.srs), %1:accregbank(<16 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VSRS_S32_S64_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0, $r0
    ; CHECK-LABEL: name: VSRS_S32_S64_mv_w_srs
    ; CHECK: liveins: $bml0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S32_S64_mv_w_srs:%[0-9]+]]:vec256 = VSRS_S32_S64_mv_w_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_S32_S64_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<8 x s64>) = COPY $bml0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<8 x s32>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v8.acc64.srs), %1:accregbank(<8 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<8 x s32>)
    PseudoRET implicit $lr, implicit $wl0
...

---
name:            VSRS_S16_S32_mv_w_srs
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml0, $r0
    ; CHECK-LABEL: name: VSRS_S16_S32_mv_w_srs
    ; CHECK: liveins: $bml0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:acc512 = COPY $bml0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:mss = COPY [[COPY1]]
    ; CHECK-NEXT: [[VSRS_S16_S32_mv_w_srs:%[0-9]+]]:vec256 = VSRS_S16_S32_mv_w_srs [[COPY]], [[COPY2]], implicit-def dead $srsrs_of, implicit $crsat, implicit $crrnd
    ; CHECK-NEXT: $wl0 = COPY [[VSRS_S16_S32_mv_w_srs]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $wl0
    %1:accregbank(<8 x s64>) = COPY $bml0
    %2:gprregbank(s32) = COPY $r0
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<16 x s16>) = G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.aie2.I256.v16.acc32.srs), %1:accregbank(<8 x s64>), %2:gprregbank(s32), %3:gprregbank(s32)
    $wl0 = COPY %0:vregbank(<16 x s16>)
    PseudoRET implicit $lr, implicit $wl0
...
