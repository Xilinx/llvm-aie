# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            VEXTBCST_8_mRm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VEXTBCST_8_mRm
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VEXTBCST_8_mRm:%[0-9]+]]:vec512 = VEXTBCST_8_mRm [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_8_mRm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<64 x s8>) = COPY $x2
    %2:gprregbank(s32) = COPY $r0
    %0:vregbank(<64 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast8.I512), %1:vregbank(<64 x s8>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VEXTBCST_16_mRm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VEXTBCST_16_mRm
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VEXTBCST_16_mRm:%[0-9]+]]:vec512 = VEXTBCST_16_mRm [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_16_mRm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:gprregbank(s32) = COPY $r0
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast16.I512), %1:vregbank(<32 x s16>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VEXTBCST_32_mRm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VEXTBCST_32_mRm
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VEXTBCST_32_mRm:%[0-9]+]]:vec512 = VEXTBCST_32_mRm [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_32_mRm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<16 x s32>) = COPY $x2
    %2:gprregbank(s32) = COPY $r0
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast32.I512), %1:vregbank(<16 x s32>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VEXTBCST_8_mExtractIdxImm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VEXTBCST_8_mExtractIdxImm
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VEXTBCST_8_mExtractIdxImm:%[0-9]+]]:vec512 = VEXTBCST_8_mExtractIdxImm [[COPY]], 0
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_8_mExtractIdxImm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<64 x s8>) = COPY $x2
    %2:gprregbank(s32) = G_CONSTANT i32 0
    %0:vregbank(<64 x s8>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast8.I512), %1:vregbank(<64 x s8>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<64 x s8>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VEXTBCST_16_mExtractIdxImm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VEXTBCST_16_mExtractIdxImm
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VEXTBCST_16_mExtractIdxImm:%[0-9]+]]:vec512 = VEXTBCST_16_mExtractIdxImm [[COPY]], 16
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_16_mExtractIdxImm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %2:gprregbank(s32) = G_CONSTANT i32 16
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast16.I512), %1:vregbank(<32 x s16>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...


---
name:            VEXTBCST_32_mExtractIdxImm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x2
    ; CHECK-LABEL: name: VEXTBCST_32_mExtractIdxImm
    ; CHECK: liveins: $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VEXTBCST_32_mExtractIdxImm:%[0-9]+]]:vec512 = VEXTBCST_32_mExtractIdxImm [[COPY]], 31
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_32_mExtractIdxImm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<16 x s32>) = COPY $x2
    %2:gprregbank(s32) = G_CONSTANT i32 31
    %0:vregbank(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast32.I512), %1:vregbank(<16 x s32>), %2:gprregbank(s32)
    $x0 = COPY %0:vregbank(<16 x s32>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VEXTBCST_32_bf_mRm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VEXTBCST_32_bf_mRm
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:er = COPY $r0
    ; CHECK-NEXT: [[VEXTBCST_32_mRm:%[0-9]+]]:vec512 = VEXTBCST_32_mRm [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_32_mRm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %3:gprregbank(s32) = COPY $r0
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast32.bf512), %1:vregbank(<32 x s16>), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...

---
name:            VEXTBCST_32_bf_mExtractIdxImm
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $r0, $x2
    ; CHECK-LABEL: name: VEXTBCST_32_bf_mExtractIdxImm
    ; CHECK: liveins: $r0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[VEXTBCST_32_mExtractIdxImm:%[0-9]+]]:vec512 = VEXTBCST_32_mExtractIdxImm [[COPY]], 1
    ; CHECK-NEXT: $x0 = COPY [[VEXTBCST_32_mExtractIdxImm]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $x0
    %1:vregbank(<32 x s16>) = COPY $x2
    %3:gprregbank(s32) = G_CONSTANT i32 1
    %0:vregbank(<32 x s16>) = G_INTRINSIC intrinsic(@llvm.aie2.vextract.broadcast32.bf512), %1:vregbank(<32 x s16>), %3:gprregbank(s32)
    $x0 = COPY %0:vregbank(<32 x s16>)
    PseudoRET implicit $lr, implicit $x0
...
