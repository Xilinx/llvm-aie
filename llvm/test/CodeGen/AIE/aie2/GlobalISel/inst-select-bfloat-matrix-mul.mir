# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=instruction-select %s -verify-machineinstrs -o - | FileCheck %s

---
name:            BF_MUL
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0, $x2
    ; CHECK-LABEL: name: BF_MUL
    ; CHECK: liveins: $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VMUL_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VMUL_F_vmac_bm_core_dense [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VMUL_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.mul16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            BF_NEGMUL
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $x0, $x2
    ; CHECK-LABEL: name: BF_NEGMUL
    ; CHECK: liveins: $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VNEGMUL_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VNEGMUL_F_vmac_bm_core_dense [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VNEGMUL_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.negmul16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            BF_MAC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml1, $x0, $x2
    ; CHECK-LABEL: name: BF_MAC
    ; CHECK: liveins: $bml1, $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:acc512 = COPY $bml1
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VMAC_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VMAC_F_vmac_bm_core_dense [[COPY2]], [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VMAC_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:accregbank(<8 x s64>) = COPY $bml1
    %4:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.mac16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:accregbank(<8 x s64>), %4:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...


---
name:            BF_MSC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml1, $x0, $x2
    ; CHECK-LABEL: name: BF_MSC
    ; CHECK: liveins: $bml1, $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:acc512 = COPY $bml1
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VMSC_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VMSC_F_vmac_bm_core_dense [[COPY2]], [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VMSC_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:accregbank(<8 x s64>) = COPY $bml1
    %4:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.msc16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:accregbank(<8 x s64>), %4:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            BF_ADDMAC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml1, $bml2, $x0, $x2
    ; CHECK-LABEL: name: BF_ADDMAC
    ; CHECK: liveins: $bml1, $bml2, $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:acc512 = COPY $bml1
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:acc512 = COPY $bml2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VADDMAC_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VADDMAC_F_vmac_bm_core_dense [[COPY2]], [[COPY3]], [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VADDMAC_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:accregbank(<8 x s64>) = COPY $bml1
    %4:accregbank(<8 x s64>) = COPY $bml2
    %5:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.addmac16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:accregbank(<8 x s64>), %4:accregbank(<8 x s64>), %5:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...

---
name:            BF_ADDMSC
alignment:       16
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $bml1, $bml2, $x0, $x2
    ; CHECK-LABEL: name: BF_ADDMSC
    ; CHECK: liveins: $bml1, $bml2, $x0, $x2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vec512 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vec512 = COPY $x2
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:acc512 = COPY $bml1
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:acc512 = COPY $bml2
    ; CHECK-NEXT: [[MOV_RLC_imm10_pseudo:%[0-9]+]]:er = MOV_RLC_imm10_pseudo 28
    ; CHECK-NEXT: [[VADDMSC_F_vmac_bm_core_dense:%[0-9]+]]:acc512 = VADDMSC_F_vmac_bm_core_dense [[COPY2]], [[COPY3]], [[COPY]], [[COPY1]], [[MOV_RLC_imm10_pseudo]], implicit-def dead $srfpflags, implicit $crfpmask
    ; CHECK-NEXT: $bml0 = COPY [[VADDMSC_F_vmac_bm_core_dense]]
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $bml0
    %1:vregbank(<32 x s16>) = COPY $x0
    %2:vregbank(<32 x s16>) = COPY $x2
    %3:accregbank(<8 x s64>) = COPY $bml1
    %4:accregbank(<8 x s64>) = COPY $bml2
    %5:gprregbank(s32) = G_CONSTANT i32 28
    %0:accregbank(<8 x s64>) = G_INTRINSIC intrinsic(@llvm.aie2.bf.addmsc16.conf), %1:vregbank(<32 x s16>), %2:vregbank(<32 x s16>), %3:accregbank(<8 x s64>), %4:accregbank(<8 x s64>), %5:gprregbank(s32)
    $bml0 = COPY %0:accregbank(<8 x s64>)
    PseudoRET implicit $lr, implicit $bml0
...
