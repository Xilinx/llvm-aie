; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie < %s \
; RUN:   | FileCheck %s

target triple = "aie"

define i32 @test(i32 inreg %a, i32 inreg %b) local_unnamed_addr {
; CHECK-LABEL: test:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    mov r6[#1], r7[0]
; CHECK-NEXT:    mov r0, r6[#0]
; CHECK:         ret lr
entry:
;  Set bit 1 of %a to input %b
	%0 = tail call i32 @llvm.aie.bitset(i32 %a, i32 %b, i32 1)
; get bit 0 of %a
   %1 = tail call i32 @llvm.aie.bitget(i32 %0, i32 0)
   ret i32 %1
}

declare i32 @llvm.aie.bitset(i32, i32, i32)
declare i32 @llvm.aie.bitget(i32, i32)
