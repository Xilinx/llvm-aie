; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie --issue-limit=1 -verify-machineinstrs < %s | FileCheck %s
; RUN: llc -mtriple=aie --issue-limit=1 -verify-machineinstrs --filetype=obj -o %t < %s
; RUN: llvm-readelf -S %t | FileCheck --check-prefix=ALIGN %s
; RUN: llvm-objdump --triple=aie -d %t | FileCheck --check-prefix=OBJECT %s

; ALIGN: .text {{.*}} 16
define i32 @foo(i32 %x) {
; OBJECT: 00000000 <foo>:
; CHECK-LABEL: foo:
; CHECK:       // %bb.0:
; CHECK-NEXT:    add r0, r6, #42
; CHECK:         ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
		 %t = add i32 %x, 42
		 ret i32 %t
}

define i32 @main() {
; OBJECT: 00000010 <main>:
; CHECK-LABEL: main:
; CHECK:       // %bb.0:
; CHECK-NEXT:    padda [sp], #32
; CHECK-NEXT:    mov.u20 r6, #15
; CHECK-NEXT:    st.spil lr, [sp, #-32]
; CHECK-NEXT:    jal foo
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
; CHECK-NEXT:    ldb lr, [sp, #-32]
; CHECK-NEXT:    padda [sp], #-32
; CHECK:         ret lr
; CHECK-NEXT:    nop // Delay Slot 5
; CHECK-NEXT:    nop // Delay Slot 4
; CHECK-NEXT:    nop // Delay Slot 3
; CHECK-NEXT:    nop // Delay Slot 2
; CHECK-NEXT:    nop // Delay Slot 1
        %r = call i32 @foo( i32 15 )            ; <i32> [#uses=1]
        ret i32 %r
}
