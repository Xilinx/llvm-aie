# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple=aie --verify-machineinstrs -run-pass=greedy -run-pass=virtregrewriter %s -o - | FileCheck %s

# There is only one (mod) register available, it will then be used for the %0
# virtual register. Here we test that it is properly spilled and then reloaded.

---
  name:            test
  alignment:       16
  legalized:       true
  regBankSelected: true
  selected:        true
  tracksRegLiveness: true
  body:             |
    bb.1.entry:
      liveins: $p0, $m0
    ; CHECK-LABEL: name: test
    ; CHECK: liveins: $m0, $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m1 = COPY killed renamable $r12
    ; CHECK-NEXT: ST_SPIL_PTR killed renamable $m1, %stack.0, implicit $sp :: (store (s32) into %stack.0)
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m2 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m3 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m4 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m5 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m6 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m7 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $r12 = MOV_U20 32
    ; CHECK-NEXT: renamable $m1 = COPY killed renamable $r12
    ; CHECK-NEXT: renamable $p0 = PADDA_nrm $p0, $m0
    ; CHECK-NEXT: renamable $m0 = LDA_SPIL_PTR %stack.0, implicit $sp :: (load (s32) from %stack.0)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit killed renamable $m0, implicit killed renamable $m2, implicit killed renamable $m3, implicit killed renamable $m4, implicit killed renamable $m5, implicit killed renamable $m6, implicit killed renamable $m7, implicit killed renamable $m1, implicit killed renamable $p0
    %10:gpr = MOV_U20 32
    %0:mod = COPY %10
    %11:gpr = MOV_U20 32
    %1:mod = COPY %11
    %12:gpr = MOV_U20 32
    %2:mod = COPY %12
    %13:gpr = MOV_U20 32
    %3:mod = COPY %13
    %14:gpr = MOV_U20 32
    %4:mod = COPY %14
    %15:gpr = MOV_U20 32
    %5:mod = COPY %15
    %16:gpr = MOV_U20 32
    %6:mod = COPY %16
    %17:gpr = MOV_U20 32
    %7:mod = COPY %17
    %20:ptr = PADDA_nrm $p0, $m0
    PseudoRET implicit $lr, implicit %0, implicit %1, implicit %2, implicit %3, implicit %4, implicit %5, implicit %6, implicit %7, implicit %20
...
