; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie --issue-limit=1 -verify-machineinstrs -o - < %s \
; RUN:   | FileCheck %s --check-prefix=SDAG
; RUN: llc -mtriple=aie -global-isel --issue-limit=1 -verify-machineinstrs \
; RUN:   -o - < %s | FileCheck %s --check-prefix=GISEL

declare i8 @llvm.abs.i8(i8, i1)
declare i16 @llvm.abs.i16(i16, i1)
declare i32 @llvm.abs.i32(i32, i1)
declare i64 @llvm.abs.i64(i64, i1)

define zeroext i8 @abs_i8(i8 signext %arg) {
; SDAG-LABEL: abs_i8:
; SDAG:         .p2align 4
; SDAG-NEXT:  // %bb.0:
; SDAG-NEXT:    mov.u20 r12, #31
; SDAG-NEXT:    mov.u20 r13, #0
; SDAG-NEXT:    sub r12, r13, r12
; SDAG-NEXT:    ashl r12, r6, r12
; SDAG-NEXT:    xor r13, r6, r12
; SDAG-NEXT:    sub r0, r13, r12
; SDAG-NEXT:    ret lr
; SDAG-NEXT:    nop // Delay Slot 5
; SDAG-NEXT:    nop // Delay Slot 4
; SDAG-NEXT:    nop // Delay Slot 3
; SDAG-NEXT:    nop // Delay Slot 2
; SDAG-NEXT:    nop // Delay Slot 1
;
; GISEL-LABEL: abs_i8:
; GISEL:         .p2align 4
; GISEL-NEXT:  // %bb.0:
; GISEL-NEXT:    se.8 r12, r6
; GISEL-NEXT:    abs r12, r12
; GISEL-NEXT:    ze.8 r0, r12
; GISEL-NEXT:    ret lr
; GISEL-NEXT:    nop // Delay Slot 5
; GISEL-NEXT:    nop // Delay Slot 4
; GISEL-NEXT:    nop // Delay Slot 3
; GISEL-NEXT:    nop // Delay Slot 2
; GISEL-NEXT:    nop // Delay Slot 1
  %res = call i8 @llvm.abs.i8(i8 signext %arg, i1 false)
  ret i8 %res
}

define zeroext i16 @abs_i16(i16 signext %arg) {
; SDAG-LABEL: abs_i16:
; SDAG:         .p2align 4
; SDAG-NEXT:  // %bb.0:
; SDAG-NEXT:    mov.u20 r12, #31
; SDAG-NEXT:    mov.u20 r13, #0
; SDAG-NEXT:    sub r12, r13, r12
; SDAG-NEXT:    ashl r12, r6, r12
; SDAG-NEXT:    xor r13, r6, r12
; SDAG-NEXT:    sub r0, r13, r12
; SDAG-NEXT:    ret lr
; SDAG-NEXT:    nop // Delay Slot 5
; SDAG-NEXT:    nop // Delay Slot 4
; SDAG-NEXT:    nop // Delay Slot 3
; SDAG-NEXT:    nop // Delay Slot 2
; SDAG-NEXT:    nop // Delay Slot 1
;
; GISEL-LABEL: abs_i16:
; GISEL:         .p2align 4
; GISEL-NEXT:  // %bb.0:
; GISEL-NEXT:    se.16 r12, r6
; GISEL-NEXT:    abs r12, r12
; GISEL-NEXT:    ze.16 r0, r12
; GISEL-NEXT:    ret lr
; GISEL-NEXT:    nop // Delay Slot 5
; GISEL-NEXT:    nop // Delay Slot 4
; GISEL-NEXT:    nop // Delay Slot 3
; GISEL-NEXT:    nop // Delay Slot 2
; GISEL-NEXT:    nop // Delay Slot 1
  %res = call i16 @llvm.abs.i16(i16 signext %arg, i1 false)
  ret i16 %res
}

define i32 @abs_i32(i32 inreg %arg) {
; SDAG-LABEL: abs_i32:
; SDAG:         .p2align 4
; SDAG-NEXT:  // %bb.0:
; SDAG-NEXT:    mov.u20 r12, #31
; SDAG-NEXT:    mov.u20 r13, #0
; SDAG-NEXT:    sub r12, r13, r12
; SDAG-NEXT:    ashl r12, r6, r12
; SDAG-NEXT:    xor r13, r6, r12
; SDAG-NEXT:    sub r0, r13, r12
; SDAG-NEXT:    ret lr
; SDAG-NEXT:    nop // Delay Slot 5
; SDAG-NEXT:    nop // Delay Slot 4
; SDAG-NEXT:    nop // Delay Slot 3
; SDAG-NEXT:    nop // Delay Slot 2
; SDAG-NEXT:    nop // Delay Slot 1
;
; GISEL-LABEL: abs_i32:
; GISEL:         .p2align 4
; GISEL-NEXT:  // %bb.0:
; GISEL-NEXT:    abs r0, r6
; GISEL-NEXT:    ret lr
; GISEL-NEXT:    nop // Delay Slot 5
; GISEL-NEXT:    nop // Delay Slot 4
; GISEL-NEXT:    nop // Delay Slot 3
; GISEL-NEXT:    nop // Delay Slot 2
; GISEL-NEXT:    nop // Delay Slot 1
  %res = call i32 @llvm.abs.i32(i32 %arg, i1 false)
  ret i32 %res
}

define i64 @abs_i64(i64 %arg) {
; SDAG-LABEL: abs_i64:
; SDAG:         .p2align 4
; SDAG-NEXT:  // %bb.0:
; SDAG-NEXT:    mov.u20 r13, #0
; SDAG-NEXT:    ne r14, r6, r13
; SDAG-NEXT:    lt r0, r7, r13
; SDAG-NEXT:    sub r12, r13, r6
; SDAG-NEXT:    add r14, r7, r14
; SDAG-NEXT:    sub r13, r13, r14
; SDAG-NEXT:    ite_nez r12, r12, r6, r0
; SDAG-NEXT:    ite_nez r1, r13, r7, r0
; SDAG-NEXT:    mov r0, r12
; SDAG-NEXT:    ret lr
; SDAG-NEXT:    nop // Delay Slot 5
; SDAG-NEXT:    nop // Delay Slot 4
; SDAG-NEXT:    nop // Delay Slot 3
; SDAG-NEXT:    nop // Delay Slot 2
; SDAG-NEXT:    nop // Delay Slot 1
;
; GISEL-LABEL: abs_i64:
; GISEL:         .p2align 4
; GISEL-NEXT:  // %bb.0:
; GISEL-NEXT:    mov.u20 r12, #31
; GISEL-NEXT:    mov.u20 r13, #0
; GISEL-NEXT:    sub r12, r13, r12
; GISEL-NEXT:    ashl r12, r7, r12
; GISEL-NEXT:    add r13, r6, r12
; GISEL-NEXT:    ltu r14, r13, r12
; GISEL-NEXT:    add r5, r7, r12
; GISEL-NEXT:    add r14, r5, r14
; GISEL-NEXT:    xor r0, r13, r12
; GISEL-NEXT:    xor r1, r14, r12
; GISEL-NEXT:    ret lr
; GISEL-NEXT:    nop // Delay Slot 5
; GISEL-NEXT:    nop // Delay Slot 4
; GISEL-NEXT:    nop // Delay Slot 3
; GISEL-NEXT:    nop // Delay Slot 2
; GISEL-NEXT:    nop // Delay Slot 1
  %res = call i64 @llvm.abs.i64(i64 %arg, i1 false)
  ret i64 %res
}
