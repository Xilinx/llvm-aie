# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_memset_constant_data_and_size
body: |
  bb.0:
    liveins: $p0
    ; CHECK-LABEL: name: test_memset_constant_data_and_size
    ; CHECK: liveins: $p0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 64
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $p1 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $r6 = COPY [[C]](s32)
    ; CHECK-NEXT: $r7 = COPY [[C1]](s32)
    ; CHECK-NEXT: JAL &memset, csr_aie1, implicit-def $lr, implicit $p1, implicit $r6, implicit $r7, implicit-def $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    %0:_(p0) = COPY $p0
    %1:_(s8) = G_CONSTANT i8 42
    %2:_(s32) = G_CONSTANT i32 64
    %3:_(s20) = G_TRUNC %2
    G_MEMSET %0(p0), %1(s8), %3(s20), 0 :: (store (s8))
...

---
name: test_memset_constant_size
body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: test_memset_constant_size
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 64
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $p1 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $r6 = COPY [[COPY1]](s32)
    ; CHECK-NEXT: $r7 = COPY [[C]](s32)
    ; CHECK-NEXT: JAL &memset, csr_aie1, implicit-def $lr, implicit $p1, implicit $r6, implicit $r7, implicit-def $p0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %4:_(s8) = G_TRUNC %1
    %2:_(s32) = G_CONSTANT i32 64
    %3:_(s20) = G_TRUNC %2
    G_MEMSET %0(p0), %1(s32), %3(s20), 0 :: (store (s8))
...

---
name: test_memset_constant_data
body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: test_memset_constant_data
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $p0 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $r6 = COPY [[C]](s32)
    ; CHECK-NEXT: $r7 = COPY [[COPY1]](s32)
    ; CHECK-NEXT: JAL &memset, csr_aie1, implicit-def $lr, implicit $p0, implicit $r6, implicit $r7
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    %0:_(p0) = COPY $p0
    %1:_(s8) = G_CONSTANT i8 42
    %2:_(s32) = COPY $r6
    G_MEMSET %0(p0), %1(s8), %2(s32), 0 :: (store (s8))
...

---
name: test_memset_unknown_data_and_size
body: |
  bb.0:
    liveins: $p0, $r6, $r7
    ; CHECK-LABEL: name: test_memset_unknown_data_and_size
    ; CHECK: liveins: $p0, $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $p0 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $r6 = COPY [[COPY1]](s32)
    ; CHECK-NEXT: $r7 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: JAL &memset, csr_aie1, implicit-def $lr, implicit $p0, implicit $r6, implicit $r7
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %3:_(s8) = G_TRUNC %1
    %2:_(s32) = COPY $r7
    G_MEMSET %0(p0), %3(s8), %2(s32), 0 :: (store (s8))
...

---
name: test_memset_align
body: |
  bb.0:
    liveins: $p0, $r6, $r7
    ; CHECK-LABEL: name: test_memset_align
    ; CHECK: liveins: $p0, $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $p0 = COPY [[COPY]](p0)
    ; CHECK-NEXT: $r6 = COPY [[COPY1]](s32)
    ; CHECK-NEXT: $r7 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: JAL &memset, csr_aie1, implicit-def $lr, implicit $p0, implicit $r6, implicit $r7
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %3:_(s8) = G_TRUNC %1
    %2:_(s32) = COPY $r7
    G_MEMSET %0(p0), %3(s8), %2(s32), 0 :: (store (s8), align 4)
