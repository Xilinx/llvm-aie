; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc --march=aie --stop-after=prologepilog < %s | FileCheck %s

; Function Attrs: mustprogress nofree noinline nounwind
declare dso_local void @_Z5test1v() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nounwind
declare dso_local void @_Z5test2v() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nounwind
define dso_local void @_Z4testv() local_unnamed_addr #0 {
  ; CHECK-LABEL: name: _Z4testv
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   frame-setup PADDA_sp_imm 32, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   ST_SPIL_PTR killed $lr, -32, implicit $sp :: (store (s32) into %stack.0)
  ; CHECK-NEXT:   JAL @_Z5test1v, csr_aie1, implicit-def dead $lr, implicit-def $sp
  ; CHECK-NEXT:   $lr = LR_LOAD -32, implicit-def $r15, implicit $sp :: (load (s32) from %stack.0)
  ; CHECK-NEXT:   frame-destroy PADDA_sp_imm -32, implicit-def $sp, implicit $sp
  ; CHECK-NEXT:   PseudoTAIL @_Z5test2v
entry:
  call void @_Z5test1v()
  tail call void @_Z5test2v()
  ret void
}

attributes #0 = { mustprogress nofree noinline nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
