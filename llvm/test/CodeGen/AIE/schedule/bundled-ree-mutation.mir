# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py

# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates


# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates

# RUN: llc --mtriple=aie2 --issue-limit=6 --run-pass=postmisched \
# RUN:     --aie-interblock-scoreboard=false %s -o - | FileCheck %s

# Check that RegionEndEdges mutation can process bundled instructions
# without misclassifying non control flow operations as control flow ones.
# (with delay slot). When we misclassify, we can end up with instructions
# with EdgeLatency > DelaySlots, which is invalid. This test also must
# not cause a crash. In this specific case, LDA_dms_lda_idx_imm must not be
# considered with delay slot because it is bundled with JNZ.

---
name:            testRegionEdgeEndMutationWithBundle
alignment:       16
tracksRegLiveness: true
body:             |
  ; CHECK-LABEL: name: testRegionEdgeEndMutationWithBundle
  ; CHECK: bb.0:
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT:   liveins: $p0, $p1, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0 {
  ; CHECK-NEXT:     JNZ $r1, %bb.0
  ; CHECK-NEXT:   }
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   $r0 = LDA_dms_lda_idx_imm $p0, 0
  ; CHECK-NEXT:   DelayedSchedBarrier
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   liveins: $p0, $p1, $r1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   NOP
  ; CHECK-NEXT:   DelayedSchedBarrier
  bb.0:
    liveins: $p0, $p1, $r1
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    $r0 = LDA_dms_lda_idx_imm $p0, 0
    JNZ $r1, %bb.0
    DelayedSchedBarrier
  bb.1:
    liveins: $p0, $p1, $r1
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    DelayedSchedBarrier
...
