# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_xor_s32
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: test_xor_s32
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = G_XOR %0, %1
    $r0 = COPY %2
...

---
name: test_xor_s1
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: test_xor_s1
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[COPY]](s32), [[C]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[COPY1]](s32), [[C]]
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[ICMP]], [[ICMP1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s1) = G_ICMP intpred(ne), %0, %2
    %4:_(s1) = G_ICMP intpred(ne), %1, %2
    %5:_(s1) = G_XOR %3, %4
    %6:_(s32) = G_ZEXT %5
    $r0 = COPY %6
...

---
name: test_xor_s64
body: |
  bb.0:
    liveins: $r6, $r7, $r8, $r9
    ; CHECK-LABEL: name: test_xor_s64
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[XOR1:%[0-9]+]]:_(s32) = G_XOR [[COPY1]], [[COPY3]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    ; CHECK-NEXT: $r1 = COPY [[XOR1]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = COPY $r8
    %3:_(s32) = COPY $r9
    %4:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %5:_(s64) = G_MERGE_VALUES %2(s32), %3(s32)
    %6:_(s64) = G_XOR %4, %5
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %6(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
...

---
name: test_xor_s7
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: test_xor_s7
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s7) = G_TRUNC %0
    %3:_(s7) = G_TRUNC %1
    %4:_(s7) = G_XOR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_xor_s8
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: test_xor_s8
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s8) = G_TRUNC %0
    %3:_(s8) = G_TRUNC %1
    %4:_(s8) = G_XOR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_xor_s16
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_xor_s16
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0
    %3:_(s16) = G_TRUNC %1
    %4:_(s16) = G_XOR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_xor_s24
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_xor_s24
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s24) = G_TRUNC %0
    %3:_(s24) = G_TRUNC %1
    %4:_(s24) = G_XOR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...
