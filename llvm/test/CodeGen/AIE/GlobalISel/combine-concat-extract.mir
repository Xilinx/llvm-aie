# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=aie2-postlegalizer-custom-combiner %s -verify-machineinstrs -o - | FileCheck %s

---
name:            extract_concat_I512.I256
body:             |
  bb.0:
    liveins: $p0, $wl2, $wl3
    ; CHECK-LABEL: name: extract_concat_I512.I256
    ; CHECK: liveins: $p0, $wl2, $wl3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY]](<8 x s32>)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $wl0 = COPY [[COPY2]](<8 x s32>)
    ; CHECK-NEXT: $wl1 = COPY [[COPY3]](<8 x s32>)
    %95:_(<8 x s32>) = COPY $wl2
    %98:_(<8 x s32>) = COPY $wl3
    %21:_(s32) = G_CONSTANT i32 0
    %31:_(s32) = G_CONSTANT i32 1
    %209:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.concat.I512.I256), %95(<8 x s32>), %98(<8 x s32>)
    %216:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %21(s32)
    %219:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %31(s32)
    $wl0 = COPY %216:_(<8 x s32>)
    $wl1 = COPY %219:_(<8 x s32>)
...

---
name:            extract_concat_I512.I256_inverted
body:             |
  bb.0:
    liveins: $p0, $wl2, $wl3
    ; CHECK-LABEL: name: extract_concat_I512.I256_inverted
    ; CHECK: liveins: $p0, $wl2, $wl3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY]](<8 x s32>)
    ; CHECK-NEXT: $wl0 = COPY [[COPY2]](<8 x s32>)
    ; CHECK-NEXT: $wl1 = COPY [[COPY3]](<8 x s32>)
    %95:_(<8 x s32>) = COPY $wl2
    %98:_(<8 x s32>) = COPY $wl3
    %21:_(s32) = G_CONSTANT i32 0
    %31:_(s32) = G_CONSTANT i32 1
    %209:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.concat.I512.I256), %95(<8 x s32>), %98(<8 x s32>)
    %216:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %31(s32)
    %219:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %21(s32)
    $wl0 = COPY %216:_(<8 x s32>)
    $wl1 = COPY %219:_(<8 x s32>)
...

---
name:            extract_G_CONCAT_VECTORS_I512.I256
body:             |
  bb.0:
    liveins: $p0, $wl2, $wl3
    ; CHECK-LABEL: name: extract_G_CONCAT_VECTORS_I512.I256
    ; CHECK: liveins: $p0, $wl2, $wl3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<8 x s32>) = COPY $wl2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<8 x s32>) = COPY $wl3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY]](<8 x s32>)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(<8 x s32>) = COPY [[COPY1]](<8 x s32>)
    ; CHECK-NEXT: $wl0 = COPY [[COPY2]](<8 x s32>)
    ; CHECK-NEXT: $wl1 = COPY [[COPY3]](<8 x s32>)
    %95:_(<8 x s32>) = COPY $wl2
    %98:_(<8 x s32>) = COPY $wl3
    %21:_(s32) = G_CONSTANT i32 0
    %31:_(s32) = G_CONSTANT i32 1
    %209:_(<16 x s32>) = G_CONCAT_VECTORS %95(<8 x s32>), %98(<8 x s32>)
    %216:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %21(s32)
    %219:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %209(<16 x s32>), %31(s32)
    $wl0 = COPY %216:_(<8 x s32>)
    $wl1 = COPY %219:_(<8 x s32>)
...
