# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name:            fmul_float
body:             |
  bb.1:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: fmul_float
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: {{JA?L}} &__mulsf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit-def $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %0:_(s32) = G_FMUL %1, %2
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0
...
---
name:            fmul_double
body:             |
  bb.1:
    liveins: $r6, $r7, $r8, $r9

    ; CHECK-LABEL: name: fmul_double
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[COPY3]](s32)
    ; CHECK-NEXT: {{JA?L}} &__muldf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    %3:_(s32) = COPY $r6
    %4:_(s32) = COPY $r7
    %1:_(s64) = G_MERGE_VALUES %3(s32), %4(s32)
    %5:_(s32) = COPY $r8
    %6:_(s32) = COPY $r9
    %2:_(s64) = G_MERGE_VALUES %5(s32), %6(s32)
    %0:_(s64) = G_FMUL %1, %2
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %0(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...

---
name:            fdiv_float
body:             |
  bb.1:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: fdiv_float
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: {{JA?L}} &__divsf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit-def $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %0:_(s32) = G_FDIV %1, %2
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0
...
---
name:            fdiv_double
body:             |
  bb.1:
    liveins: $r6, $r7, $r8, $r9

    ; CHECK-LABEL: name: fdiv_double
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[COPY3]](s32)
    ; CHECK-NEXT: {{JA?L}} &__divdf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    %3:_(s32) = COPY $r6
    %4:_(s32) = COPY $r7
    %1:_(s64) = G_MERGE_VALUES %3(s32), %4(s32)
    %5:_(s32) = COPY $r8
    %6:_(s32) = COPY $r9
    %2:_(s64) = G_MERGE_VALUES %5(s32), %6(s32)
    %0:_(s64) = G_FDIV %1, %2
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %0(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...

---
name:            fadd_float
body:             |
  bb.1:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: fadd_float
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: {{JA?L}} &__addsf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit-def $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %0:_(s32) = G_FADD %1, %2
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0
...
---
name:            fadd_double
body:             |
  bb.1:
    liveins: $r6, $r7, $r8, $r9

    ; CHECK-LABEL: name: fadd_double
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[COPY3]](s32)
    ; CHECK-NEXT: {{JA?L}} &__adddf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    %3:_(s32) = COPY $r6
    %4:_(s32) = COPY $r7
    %1:_(s64) = G_MERGE_VALUES %3(s32), %4(s32)
    %5:_(s32) = COPY $r8
    %6:_(s32) = COPY $r9
    %2:_(s64) = G_MERGE_VALUES %5(s32), %6(s32)
    %0:_(s64) = G_FADD %1, %2
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %0(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...

---
name:            fsub_float
body:             |
  bb.1:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: fsub_float
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: {{JA?L}} &__subsf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit-def $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %0:_(s32) = G_FSUB %1, %2
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0
...
---
name:            fsub_double
body:             |
  bb.1:
    liveins: $r6, $r7, $r8, $r9

    ; CHECK-LABEL: name: fsub_double
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[COPY3]](s32)
    ; CHECK-NEXT: {{JA?L}} &__subdf3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    %3:_(s32) = COPY $r6
    %4:_(s32) = COPY $r7
    %1:_(s64) = G_MERGE_VALUES %3(s32), %4(s32)
    %5:_(s32) = COPY $r8
    %6:_(s32) = COPY $r9
    %2:_(s64) = G_MERGE_VALUES %5(s32), %6(s32)
    %0:_(s64) = G_FSUB %1, %2
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %0(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...

---
name:            frem_float
body:             |
  bb.1:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: frem_float
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: {{JA?L}} &fmodf, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit-def $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %0:_(s32) = G_FREM %1, %2
    $r0 = COPY %0(s32)
    PseudoRET implicit $lr, implicit $r0
...
---
name:            frem_double
body:             |
  bb.1:
    liveins: $r6, $r7, $r8, $r9

    ; CHECK-LABEL: name: frem_double
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[COPY3]](s32)
    ; CHECK-NEXT: {{JA?L}} &fmod, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
    ; CHECK-NEXT: $r0 = COPY [[COPY4]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY5]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit $r0, implicit $r1
    %3:_(s32) = COPY $r6
    %4:_(s32) = COPY $r7
    %1:_(s64) = G_MERGE_VALUES %3(s32), %4(s32)
    %5:_(s32) = COPY $r8
    %6:_(s32) = COPY $r9
    %2:_(s64) = G_MERGE_VALUES %5(s32), %6(s32)
    %0:_(s64) = G_FREM %1, %2
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %0(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
    PseudoRET implicit $lr, implicit $r0, implicit $r1
...
