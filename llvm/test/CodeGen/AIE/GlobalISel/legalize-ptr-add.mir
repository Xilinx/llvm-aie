# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_ptr_add_s32
body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: test_ptr_add_s32
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[COPY]], [[TRUNC]](s20)
    ; CHECK-NEXT: $p0 = COPY [[PTR_ADD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %2:_(p0) = G_PTR_ADD %0, %1
    $p0 = COPY %2
...

---
name: test_ptr_add_8
body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: test_ptr_add_8
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[SHL]], 20
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[C]](s32)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s20) = G_TRUNC [[ASHR]](s32)
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[COPY]], [[TRUNC]](s20)
    ; CHECK-NEXT: $p0 = COPY [[PTR_ADD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %2:_(s8) = G_TRUNC %1(s32)
    %3:_(p0) = G_PTR_ADD %0, %2
    $p0 = COPY %3
...

---
name: test_ptr_add_16
body: |
  bb.0:
    liveins: $p0, $r6
    ; CHECK-LABEL: name: test_ptr_add_16
    ; CHECK: liveins: $p0, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[SHL]], 20
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[C]](s32)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s20) = G_TRUNC [[ASHR]](s32)
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[COPY]], [[TRUNC]](s20)
    ; CHECK-NEXT: $p0 = COPY [[PTR_ADD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %2:_(s16) = G_TRUNC %1(s32)
    %3:_(p0) = G_PTR_ADD %0, %2
    $p0 = COPY %3
...

---
name: test_ptr_add_64
body: |
  bb.0:
    liveins: $p0, $r6, $r7
    ; CHECK-LABEL: name: test_ptr_add_64
    ; CHECK: liveins: $p0, $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[COPY]], [[TRUNC]](s20)
    ; CHECK-NEXT: $p0 = COPY [[PTR_ADD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r6
    %2:_(s32) = COPY $r7
    %3:_(s64) = G_MERGE_VALUES %1(s32), %2(s32)
    %4:_(p0) = G_PTR_ADD %0, %3
    $p0 = COPY %4
...
