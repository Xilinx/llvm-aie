# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_anyext_s32_to_s64
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s32_to_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    ; CHECK-NEXT: $r1 = COPY [[DEF]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s64) = G_ANYEXT %0
    %2:_(s32), %3:_(s32) = G_UNMERGE_VALUES %1(s64)
    $r0 = COPY %2
    $r1 = COPY %3
...

---
name: test_anyext_s16_to_s64
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s16_to_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    ; CHECK-NEXT: $r1 = COPY [[DEF]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s64) = G_ANYEXT %1
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r0 = COPY %3
    $r1 = COPY %4
...

---
name: test_anyext_s16_to_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s16_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s32) = G_ANYEXT %1
    $r0 = COPY %2
...

---
name: test_anyext_s20_to_s32
body: |
  bb.0:
    ; CHECK-LABEL: name: test_anyext_s20_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s20) = COPY $p0
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[COPY]](s20)
    ; CHECK-NEXT: $r0 = COPY [[ANYEXT]](s32)
    %0:_(s20) = COPY $p0
    %1:_(s32) = G_ANYEXT %0
    $r0 = COPY %1
...

---
name: test_anyext_s24_to_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s24_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s24) = G_TRUNC %0
    %2:_(s32) = G_ANYEXT %1
    $r0 = COPY %2
...

---
name: test_anyext_i1_to_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_i1_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s1) = G_TRUNC %0
    %2:_(s32) = G_ANYEXT %1
    $r0 = COPY %2
...

---
name: test_anyext_s8_to_s16
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s8_to_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[TRUNC]](s16)
    %0:_(s32) = COPY $r6
    %1:_(s8) = G_TRUNC %0
    %2:_(s16) = G_ANYEXT %1
    PseudoRET implicit $lr, implicit %2
...

---
name: test_anyext_s8_to_s20
body: |
  bb.0:
    ; CHECK-LABEL: name: test_anyext_s8_to_s20
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s20) = G_TRUNC [[COPY]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[TRUNC]](s20)
    %0:_(s32) = COPY $r6
    %1:_(s8) = G_TRUNC %0
    %2:_(s20) = G_ANYEXT %1
    PseudoRET implicit $lr, implicit %2
...

---
name: test_anyext_s8_to_s24
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s8_to_s24
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s24) = G_TRUNC [[COPY]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[TRUNC]](s24)
    %0:_(s32) = COPY $r6
    %1:_(s8) = G_TRUNC %0
    %2:_(s24) = G_ANYEXT %1
    PseudoRET implicit $lr, implicit %2
...

---
name: test_anyext_s7_to_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s7_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s7) = G_TRUNC %0
    %2:_(s32) = G_ANYEXT %1
   PseudoRET implicit $lr, implicit %2
...

---
name: test_anyext_s8_to_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_anyext_s8_to_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s8) = G_TRUNC %0
    %2:_(s32) = G_ANYEXT %1
    PseudoRET implicit $lr, implicit %2
...
