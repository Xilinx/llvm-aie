# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s

---
name: offset-store
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0, $r1
    ; CHECK-LABEL: name: offset-store
    ; CHECK: liveins: $p0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(s32) = COPY $r1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY2]](s32)
    ; CHECK-NEXT: G_AIE_OFFSET_STORE [[COPY1]](s32), [[COPY]](p0), [[TRUNC]](s20) :: (store (s32))
    ; CHECK-NEXT: G_AIE_OFFSET_STORE [[COPY]](p0), [[COPY]](p0), [[TRUNC]](s20) :: (store (p0), align 4)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s32) = COPY $r1
    %3:_(s20) = G_TRUNC %2
    G_AIE_OFFSET_STORE %1, %0, %3 :: (store (s32))
    G_AIE_OFFSET_STORE %0, %0, %3 :: (store (p0))
...

---
name: offset-store-hb
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: offset-store-hb
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(s32) = COPY $r1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY2]](s32)
    ; CHECK-NEXT: G_AIE_OFFSET_STORE [[COPY1]](s32), [[COPY]](p0), [[TRUNC]](s20) :: (store (s16))
    ; CHECK-NEXT: G_AIE_OFFSET_STORE [[COPY1]](s32), [[COPY]](p0), [[TRUNC]](s20) :: (store (s8))
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s32) = COPY $r1
    %3:_(s20) = G_TRUNC %2
    G_AIE_OFFSET_STORE %1, %0, %3 :: (store (s16))
    G_AIE_OFFSET_STORE %1, %0, %3 :: (store (s8))
...


# Postincrement

---
name: postinc-store
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0, $r1
    ; CHECK-LABEL: name: postinc-store
    ; CHECK: liveins: $p0, $r0, $r1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(s32) = COPY $r1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY2]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_STORE:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_STORE [[COPY1]](s32), [[COPY]], [[TRUNC]](s20) :: (store (s32))
    ; CHECK-NEXT: [[AIE_POSTINC_STORE1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_STORE [[COPY]](p0), [[AIE_POSTINC_STORE]], [[TRUNC]](s20) :: (store (p0), align 4)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s32) = COPY $r1
    %3:_(s20) = G_TRUNC %2
    %4:_(p0) = G_AIE_POSTINC_STORE %1, %0, %3 :: (store (s32))
    %5:_(p0) = G_AIE_POSTINC_STORE %0, %4, %3 :: (store (p0))
...

---
name: postinc-store-hb
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: postinc-store-hb
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gprregbank(s32) = COPY $r1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY2]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_STORE:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_STORE [[COPY1]](s32), [[COPY]], [[TRUNC]](s20) :: (store (s16))
    ; CHECK-NEXT: [[AIE_POSTINC_STORE1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_STORE [[COPY1]](s32), [[AIE_POSTINC_STORE]], [[TRUNC]](s20) :: (store (s8))
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s32) = COPY $r1
    %3:_(s20) = G_TRUNC %2
    %4:_(p0) = G_AIE_POSTINC_STORE %1, %0, %3 :: (store (s16))
    %5:_(p0) = G_AIE_POSTINC_STORE %1, %4, %3 :: (store (s8))
...
