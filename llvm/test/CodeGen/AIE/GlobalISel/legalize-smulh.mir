#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: smulh_s32
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: smulh_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[COPY]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[ASHR]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[COPY1]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[ASHR1]](s32)
    ; CHECK-NEXT: {{JA?L}} &__muldi3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0
    ; CHECK-NEXT: $r0 = COPY [[COPY2]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = G_SMULH %0, %1
    $r0 = COPY %2(s32)
...

---
name: smulh_8
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: smulh_8
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 8
    ; CHECK-NEXT: [[SEXT_INREG1:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY1]], 8
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[SEXT_INREG]], [[SEXT_INREG1]]
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[SEXT_INREG2:%[0-9]+]]:_(s32) = G_SEXT_INREG [[MUL]], 16
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG2]], [[C]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s8) = G_TRUNC %0(s32)
    %3:_(s8) = G_TRUNC %1(s32)
    %4:_(s8) = G_SMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s8)
    $r0 = COPY %5(s32)
...

---
name: smulh_16
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: smulh_16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 16
    ; CHECK-NEXT: [[SEXT_INREG1:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY1]], 16
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[SEXT_INREG]], [[SEXT_INREG1]]
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[MUL]], [[C]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0(s32)
    %3:_(s16) = G_TRUNC %1(s32)
    %4:_(s16) = G_SMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s16)
    $r0 = COPY %5(s32)
...

---
name: smulh_20
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: smulh_20
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C1]](s32)
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C1]](s32)
    ; CHECK-NEXT: ADJCALLSTACKUP 0, 0
    ; CHECK-NEXT: [[ARG0:\$r[0-9]+]] = COPY [[ASHR]](s32)
    ; CHECK-NEXT: [[ARG1:\$r[0-9]+]] = COPY [[ASHR1]](s32)
    ; CHECK-NEXT: [[ARG2:\$r[0-9]+]] = COPY [[ASHR2]](s32)
    ; CHECK-NEXT: [[ARG3:\$r[0-9]+]] = COPY [[ASHR3]](s32)
    ; CHECK-NEXT: {{JA?L}} &__muldi3, {{csr_aie.?}}, implicit-def $lr, implicit [[ARG0]], implicit [[ARG1]], implicit [[ARG2]], implicit [[ARG3]], implicit-def $r0, implicit-def $r1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r0
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r1
    ; CHECK-NEXT: ADJCALLSTACKDOWN 0, 0
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; CHECK-NEXT: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[COPY2]], [[C3]](s32)
    ; CHECK-NEXT: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[COPY3]], [[C3]](s32)
    ; CHECK-NEXT: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY2]], [[C4]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[SHL3]], [[LSHR]]
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SHL2]], [[C3]](s32)
    ; CHECK-NEXT: [[SHL4:%[0-9]+]]:_(s32) = G_SHL [[OR]], [[C4]](s32)
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s32) = G_OR [[LSHR1]], [[SHL4]]
    ; CHECK-NEXT: [[ASHR4:%[0-9]+]]:_(s32) = G_ASHR [[OR]], [[C3]](s32)
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[OR1]], [[C2]](s32)
    ; CHECK-NEXT: [[SHL5:%[0-9]+]]:_(s32) = G_SHL [[ASHR4]], [[C]](s32)
    ; CHECK-NEXT: [[OR2:%[0-9]+]]:_(s32) = G_OR [[LSHR2]], [[SHL5]]
    ; CHECK-NEXT: $r0 = COPY [[OR2]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s20) = G_TRUNC %0(s32)
    %3:_(s20) = G_TRUNC %1(s32)
    %4:_(s20) = G_SMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s20)
    $r0 = COPY %5(s32)
...
