# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: abs_s1
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s1
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; CHECK-NEXT: [[ABS:%[0-9]+]]:_(s32) = G_ABS [[ASHR]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[ABS]], [[C1]]
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s1) = G_TRUNC %0
    %2:_(s1) = G_ABS %1
    %3:_(s32) = G_ZEXT %2
    $r0 = COPY %3
...

---
name: abs_s7
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s7
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 25
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; CHECK-NEXT: [[ABS:%[0-9]+]]:_(s32) = G_ABS [[ASHR]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 127
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[ABS]], [[C1]]
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s7) = G_TRUNC %0
    %2:_(s7) = G_ABS %1
    %3:_(s32) = G_ZEXT %2
    $r0 = COPY %3
...

---
name: abs_s8
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s8
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 8
    ; CHECK-NEXT: [[ABS:%[0-9]+]]:_(s32) = G_ABS [[SEXT_INREG]]
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[ABS]], [[C]]
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s8) = G_TRUNC %0
    %2:_(s8) = G_ABS %1
    %3:_(s32) = G_ZEXT %2
    $r0 = COPY %3
...

---
name: abs_s16
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 16
    ; CHECK-NEXT: [[ABS:%[0-9]+]]:_(s32) = G_ABS [[SEXT_INREG]]
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[ABS]], [[C]]
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s16) = G_ABS %1
    %3:_(s32) = G_ZEXT %2
    $r0 = COPY %3
...

---
name: abs_s32
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ABS:%[0-9]+]]:_(s32) = G_ABS [[COPY]]
    ; CHECK-NEXT: $r0 = COPY [[ABS]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = G_ABS %0
    $r0 = COPY %1
...

---
name: abs_s48
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s48
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[SHL1]], [[LSHR]]
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SHL]], [[C]](s32)
    ; CHECK-NEXT: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[OR]], [[C]](s32)
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s32) = G_OR [[LSHR1]], [[SHL2]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[OR]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[ASHR]], [[C1]](s32)
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[OR1]], [[ASHR1]]
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[ADD]](s32), [[ASHR1]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ASHR]], [[ASHR1]]
    ; CHECK-NEXT: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[ADD1]], [[ICMP]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY [[ADD2]](s32)
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY2]], [[ASHR1]]
    ; CHECK-NEXT: [[XOR1:%[0-9]+]]:_(s32) = G_XOR [[COPY3]], [[ASHR1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 -1
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[XOR]], [[C2]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s32) = G_AND [[XOR1]], [[C3]]
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    ; CHECK-NEXT: $r1 = COPY [[AND1]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %3:_(s48) = G_TRUNC %2
    %4:_(s48) = G_ABS %3
    %5:_(s64) = G_ZEXT %4
    %6:_(s32), %7:_(s32) = G_UNMERGE_VALUES %5(s64)
    $r0 = COPY %6
    $r1 = COPY %7
...

---
name: abs_s64
body: |
  bb.0:
    ; CHECK-LABEL: name: abs_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[C]](s32)
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[COPY]], [[ASHR]]
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[ADD]](s32), [[ASHR]]
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[COPY1]], [[ASHR]]
    ; CHECK-NEXT: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[ADD1]], [[ICMP]]
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY [[ADD2]](s32)
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY2]], [[ASHR]]
    ; CHECK-NEXT: [[XOR1:%[0-9]+]]:_(s32) = G_XOR [[COPY3]], [[ASHR]]
    ; CHECK-NEXT: $r0 = COPY [[XOR]](s32)
    ; CHECK-NEXT: $r1 = COPY [[XOR1]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %3:_(s64) = G_ABS %2
    %4:_(s32), %5:_(s32) = G_UNMERGE_VALUES %3(s64)
    $r0 = COPY %4
    $r1 = COPY %5
...
