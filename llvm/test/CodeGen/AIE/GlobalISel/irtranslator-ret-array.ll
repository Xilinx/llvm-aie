; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
;
; This file is licensed under the Apache License v2.0 with LLVM Exceptions.
; See https://llvm.org/LICENSE.txt for license information.
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
;
; (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
; RUN: llc -mtriple=aie -stop-after=irtranslator -global-isel -verify-machineinstrs %s -o - 2>&1 | FileCheck %s

define [4 x i32] @test_ret_4xi32() {
  ; CHECK-LABEL: name: test_ret_4xi32
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; CHECK-NEXT:   $r0 = COPY [[C]](s32)
  ; CHECK-NEXT:   $r6 = COPY [[C]](s32)
  ; CHECK-NEXT:   $r7 = COPY [[C]](s32)
  ; CHECK-NEXT:   $r8 = COPY [[C]](s32)
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit $r0, implicit $r6, implicit $r7, implicit $r8
  ret [4 x i32] zeroinitializer
}

define [2 x i64] @test_ret_2xi64() {
  ; CHECK-LABEL: name: test_ret_2xi64
  ; CHECK: bb.1 (%ir-block.0):
  ; CHECK-NEXT:   [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; CHECK-NEXT:   [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[C]](s64)
  ; CHECK-NEXT:   [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[C]](s64)
  ; CHECK-NEXT:   $r0 = COPY [[UV]](s32)
  ; CHECK-NEXT:   $r1 = COPY [[UV1]](s32)
  ; CHECK-NEXT:   $r6 = COPY [[UV2]](s32)
  ; CHECK-NEXT:   $r7 = COPY [[UV3]](s32)
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit $r0, implicit $r1, implicit $r6, implicit $r7
  ret [2 x i64] zeroinitializer
}

define [4 x i32*] @test_ret_4xP() {
  ; CHECK-LABEL: name: test_ret_4xP
  ; CHECK: bb.1.entry:
  ; CHECK-NEXT:   [[C:%[0-9]+]]:_(p0) = G_CONSTANT i20 0
  ; CHECK-NEXT:   $p0 = COPY [[C]](p0)
  ; CHECK-NEXT:   $p1 = COPY [[C]](p0)
  ; CHECK-NEXT:   $p2 = COPY [[C]](p0)
  ; CHECK-NEXT:   $p3 = COPY [[C]](p0)
  ; CHECK-NEXT:   PseudoRET implicit $lr, implicit $p0, implicit $p1, implicit $p2, implicit $p3
entry:
  ret [4 x i32*] zeroinitializer
}
