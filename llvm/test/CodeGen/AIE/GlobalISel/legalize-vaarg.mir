# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_vaarg_64
body: |
  bb.1.entry:
    ; CHECK-LABEL: name: test_vaarg_64
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s20) = G_CONSTANT i20 -8
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD]](p0) :: (load (s32))
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s20) = G_CONSTANT i20 4
    ; CHECK-NEXT: [[PTR_ADD1:%[0-9]+]]:_(p0) = G_PTR_ADD [[PTR_ADD]], [[C1]](s20)
    ; CHECK-NEXT: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD1]](p0) :: (load (s32) from unknown-address + 4)
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: $r0 = COPY [[LOAD1]](s32)
    ; CHECK-NEXT: $r1 = COPY [[LOAD2]](s32)
    %1:_(p0) = COPY $p0
    %2:_(s64) = G_VAARG %1(p0), 4
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r0 = COPY %7
    $r1 = COPY %8
...

---
name: test_vaarg_32
body: |
  bb.1.entry:
    ; CHECK-LABEL: name: test_vaarg_32
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s20) = G_CONSTANT i20 -4
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD]](p0) :: (load (s32))
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: [[LOAD2:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[PTR_ADD1:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD2]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD1]](p0) :: (load (s32))
    ; CHECK-NEXT: G_STORE [[PTR_ADD1]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: $r0 = COPY [[LOAD1]](s32)
    ; CHECK-NEXT: $r1 = COPY [[LOAD3]](s32)
    %1:_(p0) = COPY $p0
    %2:_(s32) = G_VAARG %1(p0), 4
    %3:_(s32) = G_VAARG %1(p0), 4
    $r0 = COPY %2
    $r1 = COPY %3
...

---
name: test_vaarg_16
body: |
  bb.1.entry:
    ; CHECK-LABEL: name: test_vaarg_16
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s20) = G_CONSTANT i20 -4
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD]](p0) :: (load (s16), align 4)
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[LOAD1]], [[C1]]
    ; CHECK-NEXT: [[LOAD2:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[PTR_ADD1:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD2]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[PTR_ADD1]](p0) :: (load (s32))
    ; CHECK-NEXT: G_STORE [[PTR_ADD1]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: $r0 = COPY [[AND]](s32)
    ; CHECK-NEXT: $r1 = COPY [[LOAD3]](s32)
    %1:_(p0) = COPY $p0
    %2:_(s16) = G_VAARG %1(p0), 2
    %3:_(s32) = G_ZEXT %2
    %4:_(s32) = G_VAARG %1(p0), 4
    $r0 = COPY %3
    $r1 = COPY %4
...

---
name: test_vaarg_p0
body: |
  bb.1.entry:
    ; CHECK-LABEL: name: test_vaarg_p0
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s20) = G_CONSTANT i20 -4
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD1:%[0-9]+]]:_(p0) = G_LOAD [[PTR_ADD]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: [[LOAD2:%[0-9]+]]:_(p0) = G_LOAD [[COPY]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: [[PTR_ADD1:%[0-9]+]]:_(p0) = G_PTR_ADD [[LOAD2]], [[C]](s20)
    ; CHECK-NEXT: [[LOAD3:%[0-9]+]]:_(p0) = G_LOAD [[PTR_ADD1]](p0) :: (load (p0), align 4)
    ; CHECK-NEXT: G_STORE [[PTR_ADD1]](p0), [[COPY]](p0) :: (store (p0), align 4)
    ; CHECK-NEXT: $p0 = COPY [[LOAD1]](p0)
    ; CHECK-NEXT: $p1 = COPY [[LOAD3]](p0)
    %1:_(p0) = COPY $p0
    %2:_(p0) = G_VAARG %1(p0), 4
    %3:_(p0) = G_VAARG %1(p0), 4
    $p0 = COPY %2
    $p1 = COPY %3
...
