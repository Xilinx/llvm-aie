# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-fast %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=regbankselect -regbankselect-greedy %s -verify-machineinstrs -o - | FileCheck %s

---
name: offset-load-s32
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: offset-load-s32
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_OFFSET_LOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_LOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s32))
    ; CHECK-NEXT: $r1 = COPY [[AIE_OFFSET_LOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32) = G_AIE_OFFSET_LOAD %0, %2 :: (load (s32))
    $r1 = COPY %3
...

---
name: offset-load-p0
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: offset-load-p0
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_OFFSET_LOAD:%[0-9]+]]:ptrregbank(p0) = G_AIE_OFFSET_LOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (p0), align 4)
    ; CHECK-NEXT: $p1 = COPY [[AIE_OFFSET_LOAD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(p0) = G_AIE_OFFSET_LOAD %0, %2 :: (load (p0))
    $p1 = COPY %3
...

---
name: offset-load-s16
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: offset-load-s16
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_OFFSET_LOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_LOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: [[AIE_OFFSET_ZEXTLOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_ZEXTLOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: [[AIE_OFFSET_SEXTLOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_SEXTLOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: $r1 = COPY [[AIE_OFFSET_LOAD]](s32)
    ; CHECK-NEXT: $r2 = COPY [[AIE_OFFSET_ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r3 = COPY [[AIE_OFFSET_SEXTLOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32) = G_AIE_OFFSET_LOAD     %0, %2 :: (load (s16))
    %4:_(s32) = G_AIE_OFFSET_ZEXTLOAD %0, %2 :: (load (s16))
    %5:_(s32) = G_AIE_OFFSET_SEXTLOAD %0, %2 :: (load (s16))
    $r1 = COPY %3
    $r2 = COPY %4
    $r3 = COPY %5
...

---
name: offset-load-s8
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: offset-load-s8
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_OFFSET_LOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_LOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: [[AIE_OFFSET_ZEXTLOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_ZEXTLOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: [[AIE_OFFSET_SEXTLOAD:%[0-9]+]]:gprregbank(s32) = G_AIE_OFFSET_SEXTLOAD [[COPY]](p0), [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: $r1 = COPY [[AIE_OFFSET_LOAD]](s32)
    ; CHECK-NEXT: $r2 = COPY [[AIE_OFFSET_ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r3 = COPY [[AIE_OFFSET_SEXTLOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32) = G_AIE_OFFSET_LOAD     %0, %2 :: (load (s8))
    %4:_(s32) = G_AIE_OFFSET_ZEXTLOAD %0, %2 :: (load (s8))
    %5:_(s32) = G_AIE_OFFSET_SEXTLOAD %0, %2 :: (load (s8))
    $r1 = COPY %3
    $r2 = COPY %4
    $r3 = COPY %5
...

# Postincrement

---
name: postinc-load-s32
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: postinc-load-s32
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_LOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_LOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_LOAD [[COPY]], [[TRUNC]](s20) :: (load (s32))
    ; CHECK-NEXT: $r1 = COPY [[AIE_POSTINC_LOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32), %4:_(p0) = G_AIE_POSTINC_LOAD %0, %2 :: (load (s32))
    $r1 = COPY %3
...

---
name: postinc-load-p0
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: postinc-load-p0
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_LOAD:%[0-9]+]]:ptrregbank(p0), [[AIE_POSTINC_LOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_LOAD [[COPY]], [[TRUNC]](s20) :: (load (p0), align 4)
    ; CHECK-NEXT: $p1 = COPY [[AIE_POSTINC_LOAD]](p0)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(p0), %4:_(p0) = G_AIE_POSTINC_LOAD %0, %2 :: (load (p0))
    $p1 = COPY %3
...

---
name: postinc-load-s16
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: postinc-load-s16
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_LOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_LOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_LOAD [[COPY]], [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: [[AIE_POSTINC_ZEXTLOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_ZEXTLOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_ZEXTLOAD [[COPY]], [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: [[AIE_POSTINC_SEXTLOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_SEXTLOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_SEXTLOAD [[COPY]], [[TRUNC]](s20) :: (load (s16))
    ; CHECK-NEXT: $r1 = COPY [[AIE_POSTINC_LOAD]](s32)
    ; CHECK-NEXT: $r2 = COPY [[AIE_POSTINC_ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r3 = COPY [[AIE_POSTINC_SEXTLOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32), %13:_(p0) = G_AIE_POSTINC_LOAD     %0, %2 :: (load (s16))
    %4:_(s32), %14:_(p0) = G_AIE_POSTINC_ZEXTLOAD %0, %2 :: (load (s16))
    %5:_(s32), %15:_(p0) = G_AIE_POSTINC_SEXTLOAD %0, %2 :: (load (s16))
    $r1 = COPY %3
    $r2 = COPY %4
    $r3 = COPY %5
...

---
name: postinc-load-s8
legalized: true
body: |
  bb.0:
    liveins: $p0, $r0
    ; CHECK-LABEL: name: postinc-load-s8
    ; CHECK: liveins: $p0, $r0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:ptrregbank(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gprregbank(s32) = COPY $r0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:modregbank(s20) = G_TRUNC [[COPY1]](s32)
    ; CHECK-NEXT: [[AIE_POSTINC_LOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_LOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_LOAD [[COPY]], [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: [[AIE_POSTINC_ZEXTLOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_ZEXTLOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_ZEXTLOAD [[COPY]], [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: [[AIE_POSTINC_SEXTLOAD:%[0-9]+]]:gprregbank(s32), [[AIE_POSTINC_SEXTLOAD1:%[0-9]+]]:ptrregbank(p0) = G_AIE_POSTINC_SEXTLOAD [[COPY]], [[TRUNC]](s20) :: (load (s8))
    ; CHECK-NEXT: $r1 = COPY [[AIE_POSTINC_LOAD]](s32)
    ; CHECK-NEXT: $r2 = COPY [[AIE_POSTINC_ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r3 = COPY [[AIE_POSTINC_SEXTLOAD]](s32)
    %0:_(p0) = COPY $p0
    %1:_(s32) = COPY $r0
    %2:_(s20) = G_TRUNC %1
    %3:_(s32), %13:_(p0) = G_AIE_POSTINC_LOAD     %0, %2 :: (load (s8))
    %4:_(s32), %14:_(p0) = G_AIE_POSTINC_ZEXTLOAD %0, %2 :: (load (s8))
    %5:_(s32), %15:_(p0) = G_AIE_POSTINC_SEXTLOAD %0, %2 :: (load (s8))
    $r1 = COPY %3
    $r2 = COPY %4
    $r3 = COPY %5
...
