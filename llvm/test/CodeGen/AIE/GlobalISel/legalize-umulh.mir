# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: umulh_s32
body: |
  bb.0:
    liveins: $r6, $r7
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = G_UMULH %0, %1
    $r0 = COPY %2(s32)
...

---
name: umulh_8
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: umulh_8
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY]], [[C]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND]], [[AND1]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C1]](s32)
    ; CHECK-NEXT: $r0 = COPY [[LSHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s8) = G_TRUNC %0(s32)
    %3:_(s8) = G_TRUNC %1(s32)
    %4:_(s8) = G_UMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s8)
    $r0 = COPY %5(s32)
...

---
name: umulh_16
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: umulh_16
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY]], [[C]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND]], [[AND1]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C1]](s32)
    ; CHECK-NEXT: $r0 = COPY [[LSHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0(s32)
    %3:_(s16) = G_TRUNC %1(s32)
    %4:_(s16) = G_UMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s16)
    $r0 = COPY %5(s32)
...

---
name: umulh_20
body: |
  bb.0:
    liveins: $r6, $r7
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s20) = G_TRUNC %0(s32)
    %3:_(s20) = G_TRUNC %1(s32)
    %4:_(s20) = G_UMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s20)
    $r0 = COPY %5(s32)
...
