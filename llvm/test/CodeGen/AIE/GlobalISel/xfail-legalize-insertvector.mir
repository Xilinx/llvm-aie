# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: not --crash llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - 2>&1
# RUN: not --crash llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - 2>&1

---
name:            f_64X1
body:             |
  bb.0:
    %1:_(<64 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s1) = G_CONSTANT i1 false
    %4:_(p0) = G_IMPLICIT_DEF
    %0:_(<64 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s1)
    G_STORE %0(<64 x s1>), %4(p0) :: (store (<64 x s1>) into `<64 x i1>* undef`, align 1)
    PseudoRET implicit $lr
...

---
name:            f_16x8
body:             |
  bb.0:
    %1:_(<16 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s16) = G_CONSTANT i16 -1
    %4:_(p0) = G_IMPLICIT_DEF
    %0:_(<16 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s16)
    G_STORE %0(<16 x s8>), %4(p0) :: (store (<16 x s8>) into `<16 x i8>* undef`)
    PseudoRET implicit $lr
...

---
name:            f_8x32
body:             |
  bb.0:
    %1:_(<8 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 2147483647
    %3:_(s1) = G_CONSTANT i1 false
    %4:_(p0) = G_IMPLICIT_DEF
    %0:_(<8 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s1)
    G_STORE %0(<8 x s32>), %4(p0) :: (store (<8 x s32>) into `<8 x i32>* undef`)
    PseudoRET implicit $lr
...

---
name:            f_2x64
body:             |
  bb.0:
    %1:_(<2 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 2147483647
    %3:_(s1) = G_CONSTANT i1 false
    %4:_(p0) = G_IMPLICIT_DEF
    %0:_(<2 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %3(s1)
    G_STORE %0(<2 x s64>), %4(p0) :: (store (<2 x s64>) into `<2 x i64>* undef`, align 32)
    PseudoRET implicit $lr
...

---
name:            f_64Xfloat
body:             |
  bb.0:
    %1:_(<4 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_FCONSTANT float 1.000000e+00
    %3:_(s32) = G_CONSTANT i32 1
    %4:_(p0) = G_IMPLICIT_DEF
    %0:_(<4 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s32)
    G_STORE %0(<4 x s32>), %4(p0) :: (store (<4 x s32>) into `<4 x float>* undef`, align 1)
    PseudoRET implicit $lr

...
