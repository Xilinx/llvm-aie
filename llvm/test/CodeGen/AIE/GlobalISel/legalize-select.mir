# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_select_s32
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s32
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s32) = G_CONSTANT i32 1
    %4:_(s32) = G_CONSTANT i32 2
    %5:_(s32) = G_SELECT %2, %3, %4
    $r0 = COPY %5
...

---
name: test_select_s64
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s64
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C]], [[C]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    ; CHECK-NEXT: $r1 = COPY [[SELECT1]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s64) = G_CONSTANT i64 1
    %4:_(s64) = G_CONSTANT i64 2
    %5:_(s64) = G_SELECT %2, %3, %4
    %6:_(s32), %7:_(s32) = G_UNMERGE_VALUES %5(s64)
    $r0 = COPY %6
    $r1 = COPY %7
...

---
name: test_select_s48
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s48
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C]], [[C]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    ; CHECK-NEXT: $r1 = COPY [[SELECT1]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s48) = G_CONSTANT i48 1
    %4:_(s48) = G_CONSTANT i48 2
    %5:_(s48) = G_SELECT %2, %3, %4
    %6:_(s64) = G_ANYEXT %5
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %6(s64)
    $r0 = COPY %7
    $r1 = COPY %8
...

---
name: test_select_s16
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s16
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s16) = G_CONSTANT i16 1
    %4:_(s16) = G_CONSTANT i16 2
    %5:_(s16) = G_SELECT %2, %3, %4
    %6:_(s32) = G_ANYEXT %5
    $r0 = COPY %6
...

---
name: test_select_s8
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s8
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s8) = G_CONSTANT i8 1
    %4:_(s8) = G_CONSTANT i8 2
    %5:_(s8) = G_SELECT %2, %3, %4
    %6:_(s32) = G_ANYEXT %5
    $r0 = COPY %6
...

---
name: test_select_s7
body: |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: test_select_s7
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[C1]], [[C2]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT]](s32)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6

    %2:_(s1) = G_ICMP intpred(ne), %0, %1
    %3:_(s7) = G_CONSTANT i7 1
    %4:_(s7) = G_CONSTANT i7 2
    %5:_(s7) = G_SELECT %2, %3, %4
    %6:_(s32) = G_ANYEXT %5
    $r0 = COPY %6
...

---
name: test_select_p0
body: |
  bb.0:
    liveins: $p0, $p1, $r6
    ; CHECK-LABEL: name: test_select_p0
    ; CHECK: liveins: $p0, $p1, $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $p0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(p0) = COPY $p1
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[C]](s32), [[COPY]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(p0) = G_SELECT [[ICMP]](s32), [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: $p0 = COPY [[SELECT]](p0)
    %0:_(s32) = G_CONSTANT i32 0
    %1:_(s32) = COPY $r6
    %2:_(p0) = COPY $p0
    %3:_(p0) = COPY $p1

    %4:_(s1) = G_ICMP intpred(ne), %0, %1
    %5:_(p0) = G_SELECT %4, %2, %3
    $p0 = COPY %5
...
