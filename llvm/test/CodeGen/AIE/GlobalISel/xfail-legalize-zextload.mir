# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: not --crash llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - 2>&1 | FileCheck %s

# REQUIRES: asserts

# The legalizer currently asserts when trying to lower a non-power of 2 memory sized zero extending load,
# as its artifact combiner does not handle the G_ASSERT_ZEXT instruction introduced in the process.
# This case isn't super interesting, but crashing isn't nice either.
# TODO: properly implement lowering of non-power of 2 memory sized zero extending loads

---
name: test_load_s64_s33
body: |
  bb.0:
    liveins: $p0
    ; CHECK: Assertion `(TmpDef->getOpcode() == TargetOpcode::COPY || isArtifactCast(TmpDef->getOpcode())) && "Expecting copy or artifact cast here"' failed
    %0:_(p0) = COPY $p0
    %1:_(s64) = G_ZEXTLOAD %0 :: (load (s33), align 4)
    %2:_(s32), %3:_(s32) = G_UNMERGE_VALUES %1
    $r0 = COPY %2
    $r1 = COPY %3
...

---
name: test_load_s32_s20
body: |
  bb.0:
    liveins: $p0
    %0:_(p0) = COPY $p0
    %1:_(s32) = G_ZEXTLOAD %0 :: (load (s20), align 4)
    $r0 = COPY %1
...
