# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s
# RUN: llc -mtriple aie2 -run-pass=legalizer %s -verify-machineinstrs -o - | FileCheck %s

---
name: test_ashr_s32_s32
body: |
  bb.0:
    liveins: $r6, $r7
    ; CHECK-LABEL: name: test_ashr_s32_s32
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY]], [[COPY1]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = G_ASHR %0, %1
    $r0 = COPY %2
...
---
name: test_ashr_s64_s64
body: |
  bb.0:
    liveins: $r6, $r7, $r8, $r9
    ; CHECK-LABEL: name: test_ashr_s64_s64
    ; CHECK: liveins: $r6, $r7, $r8, $r9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(s32) = COPY $r9
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 32
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY2]], [[C]]
    ; CHECK-NEXT: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[C]], [[COPY2]]
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[COPY3]](s32), [[C1]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(s32) = G_ICMP intpred(eq), [[COPY3]](s32), [[C1]]
    ; CHECK-NEXT: [[ICMP2:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[COPY2]](s32), [[C]]
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP1]](s32), [[ICMP2]], [[ICMP]]
    ; CHECK-NEXT: [[XOR:%[0-9]+]]:_(s32) = G_XOR [[COPY2]], [[C1]]
    ; CHECK-NEXT: [[XOR1:%[0-9]+]]:_(s32) = G_XOR [[COPY3]], [[C1]]
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[XOR]], [[XOR1]]
    ; CHECK-NEXT: [[ICMP3:%[0-9]+]]:_(s32) = G_ICMP intpred(eq), [[OR]](s32), [[C1]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[COPY2]](s32)
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[COPY2]](s32)
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[SUB1]](s32)
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s32) = G_OR [[LSHR]], [[SHL]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[C2]](s32)
    ; CHECK-NEXT: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[SUB]](s32)
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s32) = G_SELECT [[SELECT]](s32), [[OR1]], [[ASHR2]]
    ; CHECK-NEXT: [[SELECT2:%[0-9]+]]:_(s32) = G_SELECT [[ICMP3]](s32), [[COPY]], [[SELECT1]]
    ; CHECK-NEXT: [[SELECT3:%[0-9]+]]:_(s32) = G_SELECT [[SELECT]](s32), [[ASHR]], [[ASHR1]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT2]](s32)
    ; CHECK-NEXT: $r1 = COPY [[SELECT3]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = COPY $r8
    %3:_(s32) = COPY $r9
    %4:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %5:_(s64) = G_MERGE_VALUES %2(s32), %3(s32)
    %6:_(s64) = G_ASHR %4, %5
    %7:_(s32), %8:_(s32) = G_UNMERGE_VALUES %6(s64)
    $r0 = COPY %7(s32)
    $r1 = COPY %8(s32)
...
---
name: test_ashr_s64_s32
body: |
  bb.0:
    liveins: $r6, $r7, $r8
    ; CHECK-LABEL: name: test_ashr_s64_s32
    ; CHECK: liveins: $r6, $r7, $r8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(s32) = COPY $r8
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY2]], [[C]]
    ; CHECK-NEXT: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[C]], [[COPY2]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[COPY2]](s32), [[C]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C1]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[COPY2]](s32)
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[COPY2]](s32)
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[SUB1]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[LSHR]], [[SHL]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[C2]](s32)
    ; CHECK-NEXT: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[COPY1]], [[SUB]](s32)
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[OR]], [[ASHR2]]
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:_(s32) = G_SELECT [[ICMP1]](s32), [[COPY]], [[SELECT]]
    ; CHECK-NEXT: [[SELECT2:%[0-9]+]]:_(s32) = G_SELECT [[ICMP]](s32), [[ASHR]], [[ASHR1]]
    ; CHECK-NEXT: $r0 = COPY [[SELECT1]](s32)
    ; CHECK-NEXT: $r1 = COPY [[SELECT2]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = COPY $r8
    %3:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %4:_(s64) = G_ASHR %3, %2
    %5:_(s32), %6:_(s32) = G_UNMERGE_VALUES %4(s64)
    $r0 = COPY %5(s32)
    $r1 = COPY %6(s32)
...
---
name: test_ashr_s64_s16
body: |
  bb.0:
    liveins: $r6, $r7, $r8
    ; CHECK-LABEL: name: test_ashr_s64_s16
    ; CHECK: liveins: $r6, $r7, $r8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: $r0 = COPY [[COPY]](s32)
    ; CHECK-NEXT: $r1 = COPY [[COPY1]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s32) = COPY $r8
    %3:_(s64) = G_MERGE_VALUES %0(s32), %1(s32)
    %4:_(s16) = G_TRUNC %2
    %5:_(s64) = G_ASHR %3, %4
    %6:_(s32), %7:_(s32) = G_UNMERGE_VALUES %3(s64)
    $r0 = COPY %6(s32)
    $r1 = COPY %7(s32)
...

---
name: test_ashr_s16_s32
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s16_s32
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 16
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[COPY1]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0
    %3:_(s16) = G_ASHR %2, %1
    %4:_(s32) = G_ANYEXT %3
    $r0 = COPY %4
...

---
name: test_ashr_s16_s16
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s16_s16
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 16
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0
    %3:_(s16) = G_TRUNC %1
    %4:_(s16) = G_ASHR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_ashr_s16_s8
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s16_s8
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 16
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s16) = G_TRUNC %0
    %3:_(s8) = G_TRUNC %1
    %4:_(s16) = G_ASHR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_ashr_s8_s8
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s8_s8
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 8
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s8) = G_TRUNC %0
    %3:_(s8) = G_TRUNC %1
    %4:_(s8) = G_ASHR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_ashr_s7_s7
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s7_s7
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 127
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s7) = G_TRUNC %0
    %3:_(s7) = G_TRUNC %1
    %4:_(s7) = G_ASHR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_ashr_s24_s24
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s24_s24
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY]], 24
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16777215
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT_INREG]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s24) = G_TRUNC %0
    %3:_(s24) = G_TRUNC %1
    %4:_(s24) = G_ASHR %2, %3
    %5:_(s32) = G_ANYEXT %4
    $r0 = COPY %5
...

---
name: test_ashr_s32_s24
body: |
  bb.0:
    liveins: $r6, $r7

    ; CHECK-LABEL: name: test_ashr_s32_s24
    ; CHECK: liveins: $r6, $r7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $r7
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16777215
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY]], [[AND]](s32)
    ; CHECK-NEXT: $r0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $r6
    %1:_(s32) = COPY $r7
    %2:_(s24) = G_TRUNC %1
    %3:_(s32) = G_ASHR %0, %2
    $r0 = COPY %3
...
