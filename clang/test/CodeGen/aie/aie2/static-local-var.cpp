// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
//===- static-local-var.cpp -------------------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// RUN: %clang --target=aie2 -nostdlibinc -S -emit-llvm %s -o - | FileCheck %s
//

int f();

// CHECK-LABEL: @_Z1gv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr @_ZGVZ1gvE1a, align 1
// CHECK-NEXT:    [[GUARD_UNINITIALIZED:%.*]] = icmp eq i8 [[TMP0]], 0
// CHECK-NEXT:    br i1 [[GUARD_UNINITIALIZED]], label [[INIT_CHECK:%.*]], label [[INIT_END:%.*]], !prof [[PROF2:![0-9]+]]
// CHECK:       init.check:
// CHECK-NEXT:    [[CALL:%.*]] = call noundef i32 @_Z1fv()
// CHECK-NEXT:    store i32 [[CALL]], ptr @_ZZ1gvE1a, align 4
// CHECK-NEXT:    store i8 1, ptr @_ZGVZ1gvE1a, align 1
// CHECK-NEXT:    br label [[INIT_END]]
// CHECK:       init.end:
// CHECK-NEXT:    ret void
//
void g() {
  static int a = f();
}
