// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 4
//===- aie2-TargetAS-to-DefaultAS-assignment.cpp-----------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// Test expression where pointer with AS is assigned to pointer with Default AS.
// RUN: %clang -O1 --target=aie2 -nostdlibinc -S -emit-llvm %s -o - | FileCheck %s

// CHECK-LABEL: define dso_local noundef i32 @_Z29check_assignment_toDefault_ASPU3AS6iPi(
// CHECK-SAME: ptr addrspace(6) nocapture readonly [[NUM:%.*]], ptr nocapture writeonly [[MEM:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(6) [[NUM]], align 4, !tbaa [[TBAA2:![0-9]+]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    store i32 [[MUL]], ptr [[MEM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int check_assignment_toDefault_AS(int __aie_dm_resource_b *num, int *mem) {
    *mem = (*num) * (*num);
    return *mem;
}
//.
// CHECK: [[TBAA2]] = !{[[META3:![0-9]+]], [[META3]], i64 0}
// CHECK: [[META3]] = !{!"int", [[META4:![0-9]+]], i64 0}
// CHECK: [[META4]] = !{!"omnipotent char", [[META5:![0-9]+]], i64 0}
// CHECK: [[META5]] = !{!"Simple C++ TBAA"}
//.
