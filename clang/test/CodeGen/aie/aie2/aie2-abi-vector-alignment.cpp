// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature --return-type --skip-function-body
//===- aie2-abi-vector-alignment.cpp ----------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// RUN: %clang -target aie2  -fsyntax-only %s -o -

#define VECTOR_ALIGN_16 16
#define VECTOR_ALIGN_32 32

// 128-bit vector
_Static_assert(__alignof(v4int32) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v4uint32) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v8int16) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v8uint16) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v16int8) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v16uint8) == VECTOR_ALIGN_16);

_Static_assert(__alignof(v4float) == VECTOR_ALIGN_16);
_Static_assert(__alignof(v8bfloat16) == VECTOR_ALIGN_16);


// 256-bit vector
_Static_assert(__alignof(v4int64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v4uint64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v8int32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v8uint32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16int16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16uint16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32int8) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32uint8) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v8acc32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v4acc64) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v8float) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v8accfloat) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16bfloat16) == VECTOR_ALIGN_32);


// 512-bit vector
_Static_assert(__alignof(v8int64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v8uint64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16int32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16uint32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32int16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32uint16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v64int8) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v64uint8) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v16acc32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v8acc64) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v16float) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16accfloat) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32bfloat16) == VECTOR_ALIGN_32);

// 1024-bit vector
_Static_assert(__alignof(v16int64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16uint64) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32int32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32uint32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v64int16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v64uint16) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v128int8) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v128uint8) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v32acc32) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v16acc64) == VECTOR_ALIGN_32);

_Static_assert(__alignof(v32float) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v32accfloat) == VECTOR_ALIGN_32);
_Static_assert(__alignof(v64bfloat16) == VECTOR_ALIGN_32);
