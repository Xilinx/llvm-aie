// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature --return-type --skip-function-body
//===- aie2-abi-accumulator-float.cpp ---------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// RUN: %clang --target=aie2 -nostdlibinc -S -emit-llvm %s -o - | FileCheck %s

#include <stdint.h>

extern "C" {

/****** accumulator float vector ******/

// CHECK-LABEL: define {{[^@]*}}<4 x i64> @ret_v8accfloat
// CHECK-SAME: () #[[ATTR0:[0-9]+]] {
v8accfloat ret_v8accfloat(void) {
  volatile v8accfloat ret;
  return ret;
}
// CHECK-LABEL: define {{[^@]*}}void @pass_v8accfloat
// CHECK-SAME: (<4 x i64> noundef [[TMP0:%.*]]) #[[ATTR0:[0-9]+]] {
void pass_v8accfloat(v8accfloat) {}

// CHECK-LABEL: define {{[^@]*}}<8 x i64> @ret_v16accfloat
// CHECK-SAME: () #[[ATTR0:[0-9]+]] {
v16accfloat ret_v16accfloat(void) {
  volatile v16accfloat ret;
  return ret;
}
// CHECK-LABEL: define {{[^@]*}}void @pass_v16accfloat
// CHECK-SAME: (<8 x i64> noundef [[TMP0:%.*]]) #[[ATTR0:[0-9]+]] {
void pass_v16accfloat(v16accfloat) {}

// CHECK-LABEL: define {{[^@]*}}<16 x i64> @ret_v32accfloat
// CHECK-SAME: () #[[ATTR0:[0-9]+]] {
v32accfloat ret_v32accfloat(void) {
  volatile v32accfloat ret;
  return ret;
}
// CHECK-LABEL: define {{[^@]*}}void @pass_v32accfloat
// CHECK-SAME: (<16 x i64> noundef [[TMP0:%.*]]) #[[ATTR0:[0-9]+]] {
void pass_v32accfloat(v32accfloat) {}

}
