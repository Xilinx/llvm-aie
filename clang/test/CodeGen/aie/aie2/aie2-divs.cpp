// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates

// RUN: %clang -O2 %s --target=aie2 -nostdlibinc -S -emit-llvm -o - | FileCheck %s
// CHECK-LABEL: @_Z3divii(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call { i32, i32 } @llvm.aie2.divs(i32 [[A:%.*]], i32 0, i32 [[B:%.*]])
// CHECK-NEXT:    [[TMP1:%.*]] = extractvalue { i32, i32 } [[TMP0]], 1
// CHECK-NEXT:    ret i32 [[TMP1]]
//
unsigned div(int a, int b) {
  unsigned int dividend = a;
  unsigned int remainder = 0;
  __builtin_aiev2_divstep(dividend, remainder, b);
  return dividend;
}

// CHECK-LABEL: @_Z3remii(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call { i32, i32 } @llvm.aie2.divs(i32 [[A:%.*]], i32 0, i32 [[B:%.*]])
// CHECK-NEXT:    [[TMP1:%.*]] = extractvalue { i32, i32 } [[TMP0]], 0
// CHECK-NEXT:    ret i32 [[TMP1]]
//
unsigned rem(int a, int b) {
  unsigned int dividend = a;
  unsigned int remainder = 0;
  __builtin_aiev2_divstep(dividend, remainder, b);
  return remainder;
}
