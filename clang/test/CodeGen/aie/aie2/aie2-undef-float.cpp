// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
//===- aie2-undef-float.cpp -------------------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// RUN: %clang -O2 %s --target=aie2 -S -emit-llvm -o - | FileCheck %s

// CHECK-LABEL: @_Z18test_undef_v8floatv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call noundef <8 x float> @llvm.aie2.v8float()
// CHECK-NEXT:    ret <8 x float> [[TMP0]]
//
v8float test_undef_v8float() {
  return undef_v8float();
}

// CHECK-LABEL: @_Z19test_undef_v16floatv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call noundef <16 x float> @llvm.aie2.v16float()
// CHECK-NEXT:    ret <16 x float> [[TMP0]]
//
v16float test_undef_v16float() {
  return undef_v16float();
}

// CHECK-LABEL: @_Z19test_undef_v32floatv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = tail call noundef <32 x float> @llvm.aie2.v32float()
// CHECK-NEXT:    ret <32 x float> [[TMP0]]
//
v32float test_undef_v32float() {
  return undef_v32float();
}
