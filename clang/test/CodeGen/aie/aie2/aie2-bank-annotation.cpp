// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 4
//===- aie2-bank-annotation.cpp----------------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//
// Test to check the bank annotation for AIE2, specifically the translation of __aie_dm_resource_* to the correct address space.
// Test expression where pointer with AS is assigned to pointer with Default AS.
// RUN: %clang -O1 --target=aie2 -S -emit-llvm %s -o - | FileCheck %s

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS5iS0_(
// CHECK-SAME: ptr addrspace(5) nocapture readonly [[NUM:%.*]], ptr addrspace(5) nocapture writeonly [[MEM:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(5) [[NUM]], align 4, !tbaa [[TBAA2:![0-9]+]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    store i32 [[MUL]], ptr addrspace(5) [[MEM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_a *num, int __aie_dm_resource_a *mem) {
    *mem = (*num) * (*num);
    return *mem;
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS6iS0_(
// CHECK-SAME: ptr addrspace(6) nocapture readonly [[NUM:%.*]], ptr addrspace(6) nocapture writeonly [[MEM:%.*]]) local_unnamed_addr #[[ATTR0]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(6) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    store i32 [[MUL]], ptr addrspace(6) [[MEM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_b *num, int __aie_dm_resource_b *mem) {
    *mem = (*num) * (*num);
    return *mem;
}


// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS6iPi(
// CHECK-SAME: ptr addrspace(6) nocapture readonly [[NUM:%.*]], ptr nocapture writeonly [[MEM:%.*]]) local_unnamed_addr #[[ATTR0]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(6) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    store i32 [[MUL]], ptr [[MEM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_b *num, int *mem) {
    *mem = (*num) * (*num);
    return *mem;
}


// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS7i(
// CHECK-SAME: ptr addrspace(7) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(7) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_c *num) {
    return (*num) * (*num);
}


// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS8i(
// CHECK-SAME: ptr addrspace(8) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(8) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_d *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU3AS9i(
// CHECK-SAME: ptr addrspace(9) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(9) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_ab *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS10i(
// CHECK-SAME: ptr addrspace(10) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(10) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_ac *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS11i(
// CHECK-SAME: ptr addrspace(11) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(11) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_ad *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS12i(
// CHECK-SAME: ptr addrspace(12) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(12) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_bc *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS13i(
// CHECK-SAME: ptr addrspace(13) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(13) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_bd *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS14i(
// CHECK-SAME: ptr addrspace(14) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(14) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_cd *num) {
    return (*num) * (*num);
}

// CHECK-LABEL: define dso_local noundef i32 @_Z6squarePU4AS15i(
// CHECK-SAME: ptr addrspace(15) nocapture readonly [[NUM:%.*]]) local_unnamed_addr #[[ATTR1]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr addrspace(15) [[NUM]], align 4, !tbaa [[TBAA2]]
// CHECK-NEXT:    [[MUL:%.*]] = mul nsw i32 [[TMP0]], [[TMP0]]
// CHECK-NEXT:    ret i32 [[MUL]]
//
int square(int __aie_dm_resource_TM *num) {
    return (*num) * (*num);
}

//.
// CHECK: [[TBAA2]] = !{[[META3:![0-9]+]], [[META3]], i64 0}
// CHECK: [[META3]] = !{!"int", [[META4:![0-9]+]], i64 0}
// CHECK: [[META4]] = !{!"omnipotent char", [[META5:![0-9]+]], i64 0}
// CHECK: [[META5]] = !{!"Simple C++ TBAA"}
//.
