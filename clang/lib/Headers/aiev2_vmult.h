//===- aiev2_vmult.h --------------------------------------------*- C++ -*-===//
//
// This file is licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// (c) Copyright 2023-2024 Advanced Micro Devices, Inc. or its affiliates
//
//===----------------------------------------------------------------------===//

//* Automatically generated file, do not edit! *
//
#ifndef __AIEV2MULT_H
#define __AIEV2MULT_H
static inline int aiev2_compute_control(int sgn_x, int sgn_y, int amode,
                                        int bmode, int variant, int zero_acc,
                                        int shift16, int sub0, int sub1,
                                        int sub2, int sub_mask) {
  return ((unsigned)sub_mask << 16) | ((unsigned)shift16 << 10) |
         ((unsigned)sub0 << 11) | ((unsigned)sub1 << 12) |
         ((unsigned)sub2 << 13) | ((unsigned)amode << 1) |
         ((unsigned)bmode << 3) | ((unsigned)variant << 5) |
         (((unsigned)sgn_x << 9) | ((unsigned)sgn_y << 8)) |
         ((unsigned)zero_acc << 0);
}
INTRINSIC(v32acc32) mul_4x16_16x8(v64uint8 a, v128uint4 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64uint8 a, v128uint4 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x16_16x8_conf(v64uint8 a, v128uint4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, v128uint4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64uint8 a, v128int4 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64uint8 a, v128int4 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x16_16x8_conf(v64uint8 a, v128int4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8_conf(v64uint8 a, v128int4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64int8 a, v128uint4 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64int8 a, v128uint4 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x16_16x8_conf(v64int8 a, v128uint4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8_conf(v64int8 a, v128uint4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, v128uint4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64int8 a, v128int4 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64int8 a, v128int4 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x16_16x8_conf(v64int8 a, v128int4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8_conf(v64int8 a, v128int4 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, v128int4 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int4 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_4x8_8x8(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x8_8x8(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x8_8x8(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x8_8x8(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x8_8x8_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x8_8x8_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x8_8x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_elem_32_2(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32_2(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32_2(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32_2(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_2_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_2_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_2_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_conv_4x4_8ch(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_4x4_8ch(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_4x4_8ch(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_4x4_8ch(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_4x4_8ch(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_4x4_8ch(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_4x4_8ch(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_4x4_8ch(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_4x4_8ch_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_4x4_8ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_conv_8x8_4ch(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_8x8_4ch(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_8x8_4ch(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_8x8_4ch(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_8x8_4ch(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_8x8_4ch(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_8x8_4ch(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_8x8_4ch(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_8x8_4ch_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                         int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                         int zero_acc1, int sub_mul, int sub_acc1,
                         int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 3, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, int zero_acc1, int sub_mul,
                         int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_8x8_4ch_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y,
                         v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                         int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_conv_32x8(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8(v64uint8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8_conf(v64uint8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64uint8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_32x8(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8(v64uint8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8_conf(v64uint8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64uint8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64uint8 a, int sgn_x, v64int8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_32x8(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8(v64int8 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8_conf(v64int8 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64int8 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 4, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64int8 a, int sgn_x, v64uint8 b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_conv_32x8(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8(v64int8 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_conv_32x8_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_conv_32x8_conf(v64int8 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64int8 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 4, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_conv_32x8_conf(v64int8 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_4x4_4x8(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x8(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x8(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x8(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x8_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x8_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_4x4_4x4_2ch(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x4_2ch(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32uint16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                     int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x4_2ch(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x4_2ch(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32uint16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                     int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x4_2ch(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x4_2ch(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                   v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32int16 a, v64uint8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                     int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                     v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x4_4x4_2ch(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x4_4x4_2ch(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                   v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                     int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, int zero_acc1,
                        int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32int16 a, v64int8 b, v32acc32 acc1, v32acc32 acc2,
                        int zero_acc1, int sub_mul, int sub_acc1,
                        int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 2, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                     int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v32acc32 acc1,
                     int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, int zero_acc1, int sub_mul,
                        int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int shift16, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x4_4x4_2ch_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y,
                        v32acc32 acc1, v32acc32 acc2, int zero_acc1,
                        int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x8_8x8_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_4x8_8x4(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4(v32uint16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4_conf(v32uint16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32uint16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64uint8 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x8_8x4(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4(v32uint16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4_conf(v32uint16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32uint16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32uint16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x8_8x4(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4(v32int16 a, v64uint8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4_conf(v32int16 a, v64uint8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32int16 a, v64uint8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64uint8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x8_8x4(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4(v32int16 a, v64int8 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x8_8x4_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x8_8x4_conf(v32int16 a, v64int8 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32int16 a, v64int8 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x8_8x4_conf(v32int16 a, int sgn_x, v64int8 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_4x2_2x8(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x2_2x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_elem_32(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32uint16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32uint16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32int16 a, v32uint16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32) mac_elem_32(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) msc_elem_32(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmac_elem_32(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32) negmsc_elem_32(v32int16 a, v32int16 b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
               v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32) mul_elem_32_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32) negmul_elem_32_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32int16 a, v32int16 b, v32acc32 acc1, v32acc32 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 3, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmul_conf(a, b, conf);
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc32_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_elem_32_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                    v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc32_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_2x4_4x8(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x4_4x8_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_4x4_4x4(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x4_4x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_elem_16_2(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_elem_16_2_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_elem_16_2(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_elem_16_2_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_elem_16_2(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_elem_16_2_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_elem_16_2(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_elem_16_2_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_elem_16_2_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_elem_16_2_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_conv_16x4(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_conv_16x4(v32uint16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_conv_16x4_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32uint16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32uint16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_conv_16x4(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_conv_16x4(v32uint16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_conv_16x4_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32uint16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32uint16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32uint16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_conv_16x4(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_conv_16x4(v32int16 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_conv_16x4_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32int16 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32int16 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 3, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32int16 a, int sgn_x, v32uint16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_conv_16x4(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_conv_16x4(v32int16 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_conv_16x4_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_conv_16x4_conf(v32int16 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                      int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32int16 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                      int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 3, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_conv_16x4_conf(v32int16 a, int sgn_x, v32int16 b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 3, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_4x2_2x4(v16uint32 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16uint32 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16uint32 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16uint32 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16uint32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16uint32 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16uint32 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16uint32 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16uint32 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16uint32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16uint32 a, int sgn_x, v32int16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16int32 a, v32uint16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16int32 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16int32 a, v32uint16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16int32 a, v32uint16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 0, 0, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32uint16 b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16int32 a, v32int16 b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmac_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64) negmsc_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
               v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16int32 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16int32 a, v32int16 b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16int32 a, v32int16 b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 0, 0, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
negmac_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v16acc64)
addmac_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_4x2_2x4_conf(v16int32 a, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}

#if 1 // sparse Type

INTRINSIC(v32acc32) mul_4x32_32x8(v128uint8 a, v256uint4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32) negmul_4x32_32x8(v128uint8 a, v256uint4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                 v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128uint8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x32_32x8(v128uint8 a, v256int4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32) negmul_4x32_32x8(v128uint8 a, v256int4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128uint8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128uint8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128uint8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x32_32x8(v128int8 a, v256uint4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32) negmul_4x32_32x8(v128int8 a, v256uint4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128int8 a, v256uint4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128int8 a, v256uint4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 0, 1, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256uint4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x32_32x8(v128int8 a, v256int4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32) negmul_4x32_32x8(v128int8 a, v256int4_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128int8 a, v256int4_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128int8 a, v256int4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128int8 a, v256int4_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128int8 a, v256int4_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 0, 1, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                            conf);
}
INTRINSIC(v32acc32)
negmul_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmul_conf(a, b.data,
                                                               b.mask, conf);
}
INTRINSIC(v32acc32)
mac_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                            acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmsc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_acc32_negmac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x32_32x8_conf(v128int8 a, int sgn_x, v256int4_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
;

INTRINSIC(v32acc32) mul_4x16_16x8(v64uint8 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64uint8 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64uint8 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64uint8 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64uint8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64int8 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64int8 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, v128uint8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, v128uint8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 0, 1, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v32acc32) mul_4x16_16x8(v64int8 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32) negmul_4x16_16x8(v64int8 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32) mac_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32) msc_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, v128int8_sparse b, v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, v128int8_sparse b, v32acc32 acc1,
                      v32acc32 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 0, 1, 5, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
mul_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v32acc32)
negmul_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v32acc32)
mac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
msc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v32acc32 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v32acc32)
negmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
negmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc32_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v32acc32)
addmac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
addmsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submac_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v32acc32)
submsc_4x16_16x8_conf(v64int8 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v32acc32 acc1, v32acc32 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 0, 1, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc32_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_2x16_16x8(v32uint16 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x16_16x8(v32uint16 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                 v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                   int zero_acc1, int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32uint16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x16_16x8(v32uint16 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x16_16x8(v32uint16 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32uint16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32uint16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32uint16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x16_16x8(v32int16 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x16_16x8(v32int16 a, v128uint8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32int16 a, v128uint8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32int16 a, v128uint8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 2, 2, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128uint8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x16_16x8(v32int16 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x16_16x8(v32int16 a, v128int8_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32int16 a, v128int8_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
              v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                 v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32int16 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32int16 a, v128int8_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1, int zero_acc1,
                   int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32int16 a, v128int8_sparse b, v16acc64 acc1,
                      v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                      int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 2, 2, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                   int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                      int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x16_16x8_conf(v32int16 a, int sgn_x, v128int8_sparse b, int sgn_y,
                      v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 2, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
;

INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, v64uint16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32uint16 a, v64uint16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                            zero_acc1, shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                            zero_acc1, 0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32uint16 a, v64int16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32uint16 a, v64int16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, v64int16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_UNSIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32uint16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, v64uint16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32int16 a, v64uint16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, v64uint16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, 0,
                                   0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int shift16, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, v64uint16_sparse b, v16acc64 acc1,
                    v16acc64 acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_UNSIGNED, 1, 3, 5, zero_acc1,
                            0, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64uint16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
INTRINSIC(v16acc64) mul_2x8_8x8(v32int16 a, v64int16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64) negmul_2x8_8x8(v32int16 a, v64int16_sparse b) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64) mac_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64) msc_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
            v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
               v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, v64int16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, v64int16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, 0, 0,
                                   sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                 int shift16, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, shift16, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, int zero_acc1,
                    int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5,
                                   zero_acc1, 0, sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int shift16, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1,
                            shift16, sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, v64int16_sparse b, v16acc64 acc1, v16acc64 acc2,
                    int zero_acc1, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf =
      aiev2_compute_control(__SIGN_SIGNED, __SIGN_SIGNED, 1, 3, 5, zero_acc1, 0,
                            sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
mul_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mul_conf(a, b.data, b.mask,
                                                           conf);
}
INTRINSIC(v16acc64)
negmul_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    int sub_mul) {
  int conf =
      aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmul_conf(a, b.data, b.mask,
                                                              conf);
}
INTRINSIC(v16acc64)
mac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_mac_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
msc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int shift16, int sub_mul,
                 int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_msc_conf(a, b.data, b.mask,
                                                           acc1, conf);
}
INTRINSIC(v16acc64)
negmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmsc_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
negmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_acc64_negmac_conf(a, b.data, b.mask,
                                                              acc1, conf);
}
INTRINSIC(v16acc64)
addmac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
addmsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
                    int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submac_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16acc64)
submsc_2x8_8x8_conf(v32int16 a, int sgn_x, v64int16_sparse b, int sgn_y,
                    v16acc64 acc1, v16acc64 acc2, int zero_acc1, int sub_mul,
                    int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 5, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I512_I1024_ACC1024_ACC1024_acc64_submsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
;

INTRINSIC(v16accfloat) mul_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_mul_conf(a, b.data,
                                                                  b.mask, conf);
}
INTRINSIC(v16accfloat) negmul_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_negmul_conf(
      a, b.data, b.mask, conf);
}
INTRINSIC(v16accfloat)
mac_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_mac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_msc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
                 v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_accfloat_bf_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_4x16_16x4(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
                 v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_accfloat_bf_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
mul_4x16_16x4_conf(v64bfloat16 a, v64bfloat16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_mul_conf(a, b.data,
                                                                  b.mask, conf);
}
INTRINSIC(v16accfloat)
negmul_4x16_16x4_conf(v64bfloat16 a, v64bfloat16_sparse b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_negmul_conf(
      a, b.data, b.mask, conf);
}
INTRINSIC(v16accfloat)
mac_4x16_16x4_conf(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_mac_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_4x16_16x4_conf(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_accfloat_bf_msc_conf(
      a, b.data, b.mask, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_²4_conf(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
               v16accfloat acc2, int zero_acc1, int sub_mul, int sub_acc1,
               int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_accfloat_bf_addmac_conf(
      a, b.data, b.mask, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_4x16_16x4_conf(v64bfloat16 a, v64bfloat16_sparse b, v16accfloat acc1,
                      v16accfloat acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 2, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_I1024_I1024_ACC1024_ACC1024_accfloat_bf_addmsc_conf(
      a, b.data, b.mask, acc1, acc2, conf);
};
#endif // End sparse

#if 0 // Complex Type
INTRINSIC(v8cacc64) mul_elem_8_2(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_2(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmac_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmsc_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
mul_elem_8_2_conf(v16cint16 a, v16cint16 b, int sub_mask, int sub_mul) {
  int conf =
      aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, sub_mul, 0, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
negmul_elem_8_2_conf(v16cint16 a, v16cint16 b, int sub_mask, int sub_mul) {
  int conf =
      aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, sub_mul, 0, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
mac_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                  int shift16, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, shift16, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
msc_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                  int shift16, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, shift16, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                     int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                     int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                     int zero_acc1, int shift16, int sub_mask, int sub_mul,
                     int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, shift16, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                     int zero_acc1, int shift16, int sub_mask, int sub_mul,
                     int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, shift16, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                     int zero_acc1, int sub_mask, int sub_mul, int sub_acc1,
                     int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2_conf(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                     int zero_acc1, int sub_mask, int sub_mul, int sub_acc1,
                     int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
mul_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y, int sub_mask,
                  int sub_mul) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, 0, 0, sub_mul, 0, 0,
                                   sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
negmul_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     int sub_mask, int sub_mul) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, 0, 0, sub_mul, 0, 0,
                                   sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
mac_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                  int zero_acc1, int shift16, int sub_mask, int sub_mul,
                  int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
msc_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                  int zero_acc1, int shift16, int sub_mask, int sub_mul,
                  int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, int zero_acc1, int sub_mask, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, int zero_acc1, int sub_mask, int sub_mul,
                     int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int shift16,
                     int sub_mask, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int shift16,
                     int sub_mask, int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int sub_mask,
                     int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2_conf(v16cint16 a, int sgn_x, v16cint16 b, int sgn_y,
                     v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int sub_mask,
                     int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 3, 4, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_2_cc(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_2_cc(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2_cc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_2_cn(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_2_cn(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2_cn(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_2_nc(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_2_nc(v16cint16 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_2_nc(v16cint16 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 3, 4, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmac_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmsc_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 10);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
mul_elem_8_conf(v8cint32 a, v16cint16 b, int sub_mask, int sub_mul) {
  int conf =
      aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, sub_mul, 0, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
negmul_elem_8_conf(v8cint32 a, v16cint16 b, int sub_mask, int sub_mul) {
  int conf =
      aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, sub_mul, 0, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
mac_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                int shift16, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, shift16, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
msc_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                int shift16, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, shift16, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                   int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, int zero_acc1,
                   int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                   int zero_acc1, int shift16, int sub_mask, int sub_mul,
                   int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, shift16, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                   int zero_acc1, int shift16, int sub_mask, int sub_mul,
                   int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, shift16, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                   int zero_acc1, int sub_mask, int sub_mul, int sub_acc1,
                   int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_conf(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2,
                   int zero_acc1, int sub_mask, int sub_mul, int sub_acc1,
                   int sub_acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
mul_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, int sub_mask,
                int sub_mul) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, 0, 0, sub_mul, 0, 0,
                                   sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
negmul_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, int sub_mask,
                   int sub_mul) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, 0, 0, sub_mul, 0, 0,
                                   sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64)
mac_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                int zero_acc1, int shift16, int sub_mask, int sub_mul,
                int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
msc_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                int zero_acc1, int shift16, int sub_mask, int sub_mul,
                int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmsc_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   int zero_acc1, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
negmac_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   int zero_acc1, int sub_mask, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   v8cacc64 acc2, int zero_acc1, int shift16, int sub_mask,
                   int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   v8cacc64 acc2, int zero_acc1, int shift16, int sub_mask,
                   int sub_mul, int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, shift16,
                                   sub_mul, sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   v8cacc64 acc2, int zero_acc1, int sub_mask, int sub_mul,
                   int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_conf(v8cint32 a, int sgn_x, v16cint16 b, int sgn_y, v8cacc64 acc1,
                   v8cacc64 acc2, int zero_acc1, int sub_mask, int sub_mul,
                   int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(sgn_x, sgn_y, 1, 0, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, sub_mask);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_cc(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_cc(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmac_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmsc_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_cc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_cn(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_cn(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmac_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmsc_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_cn(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_X);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
};

INTRINSIC(v8cacc64) mul_elem_8_nc(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) negmul_elem_8_nc(v8cint32 a, v16cint16 b) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmul_conf(a, b, conf);
}
INTRINSIC(v8cacc64) mac_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_mac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) msc_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_msc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmac_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmac_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64) negmsc_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_acc64_negmsc_conf(a, b, acc1, conf);
}
INTRINSIC(v8cacc64)
addmac_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
addmsc_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_addmsc_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submac_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submac_conf(
      a, b, acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
submsc_elem_8_nc(v8cint32 a, v16cint16 b, v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
                                   OP_TERM_NEG_COMPLEX_CONJUGATE_Y);
  return __builtin_aiev2_I512_I512_ACC1024_ACC1024_acc64_submsc_conf(
      a, b, acc1, acc2, conf);
}

#endif // Complex Type

INTRINSIC(v16accfloat) mul_4x8_8x4(v32bfloat16 a, v32bfloat16 b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_mul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat) negmul_4x8_8x4(v32bfloat16 a, v32bfloat16 b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_negmul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
mac_4x8_8x4(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_mac16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_4x8_8x4(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_msc16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_4x8_8x4(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
               v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_addmac16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_4x8_8x4(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
               v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_addmsc16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
mul_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_bf_mul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
negmul_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_bf_negmul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
mac_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_bf_mac16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_bf_msc16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                    v16accfloat acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_bf_addmac16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_4x8_8x4_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                    v16accfloat acc2, int zero_acc1, int sub_mul, int sub_acc1,
                    int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 0, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_bf_addmsc16_conf(a, b, acc1, acc2, conf);
};

INTRINSIC(v16accfloat) mul_elem_16_2(v32bfloat16 a, v32bfloat16 b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_mul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat) negmul_elem_16_2(v32bfloat16 a, v32bfloat16 b) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_negmul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
mac_elem_16_2(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_mac16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_elem_16_2(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_msc16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_elem_16_2(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                 v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_addmac16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_elem_16_2(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                 v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_bf_addmsc16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
mul_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_bf_mul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
negmul_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, int sub_mul) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, 0, 0, sub_mul, 0, 0, 0);
  return __builtin_aiev2_bf_negmul16_conf(a, b, conf);
}
INTRINSIC(v16accfloat)
mac_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_bf_mac16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
msc_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, 0, 0);
  return __builtin_aiev2_bf_msc16_conf(a, b, acc1, conf);
}
INTRINSIC(v16accfloat)
addmac_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                      v16accfloat acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_bf_addmac16_conf(a, b, acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
addmsc_elem_16_2_conf(v32bfloat16 a, v32bfloat16 b, v16accfloat acc1,
                      v16accfloat acc2, int zero_acc1, int sub_mul,
                      int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, 3, 1, zero_acc1, 0, sub_mul,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_bf_addmsc16_conf(a, b, acc1, acc2, conf);
};

INTRINSIC(v32acc32) add(v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32) sub(v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32) negadd(v32acc32 acc1, v32acc32 acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32) neg(v32acc32 acc) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_ACC1024_acc32_neg_conf(acc, conf);
}
#if 0
//This is already present in aiev2_scl2vec.h
// Keeping it here in case we want to remove from aiev2_scl2vec?
[[deprecated("Function 'clr' is deprecated. Please use the 'broadcast_zero_to' "
             "variant instead.")]] INTRINSIC(v32acc32) clr32() {
  return __builtin_aiev2_vbroadcast_zero_acc1024();
}
INTRINSIC(v32acc32) broadcast_zero_to_v32acc32() {
  return __builtin_aiev2_vbroadcast_zero_acc1024();
}
#endif
INTRINSIC(v32acc32)
add_conf(v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32)
sub_conf(v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32)
negadd_conf(v32acc32 acc1, v32acc32 acc2, int zero_acc1, int shift16,
            int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v32acc32)
neg_conf(v32acc32 acc, int zero_acc1, int shift16, int sub_acc) {
  int conf = aiev2_compute_control(0, 0, 0, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc, 0, 0);
  return __builtin_aiev2_ACC1024_acc32_neg_conf(acc, conf);
}
#if 0
//standalone operator+ won't work, here is type is not
// and object
INTRINSIC(v32acc32) operator+(v32acc32 acc1, v32acc32 acc2) {
  return add(acc1, acc2);
}
INTRINSIC(v32acc32) operator-(v32acc32 acc1, v32acc32 acc2) {
  return sub(acc1, acc2);
}
INTRINSIC(v32acc32) operator-(v32acc32 acc) { return neg(acc); }
#endif
INTRINSIC(v16acc64) add(v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64) sub(v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64) negadd(v16acc64 acc1, v16acc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64) neg(v16acc64 acc) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_ACC1024_acc64_neg_conf(acc, conf);
}
#if 0
[[deprecated("Function 'clr' is deprecated. Please use the 'broadcast_zero_to' "
             "variant instead.")]] INTRINSIC(v16acc64) clr16() {
  return __builtin_aiev2_clr16_conf();
}
INTRINSIC(v16acc64) broadcast_zero_to_v16acc64() {
  return __builtin_aiev2_clr16_conf();
}
#endif
INTRINSIC(v16acc64)
add_conf(v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64)
sub_conf(v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64)
negadd_conf(v16acc64 acc1, v16acc64 acc2, int zero_acc1, int shift16,
            int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v16acc64)
neg_conf(v16acc64 acc, int zero_acc1, int shift16, int sub_acc) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc, 0, 0);
  return __builtin_aiev2_ACC1024_acc64_neg_conf(acc, conf);
}
#if 0
INTRINSIC(v16acc64) operator+(v16acc64 acc1, v16acc64 acc2) {
  return add(acc1, acc2);
}
INTRINSIC(v16acc64) operator-(v16acc64 acc1, v16acc64 acc2) {
  return sub(acc1, acc2);
}
INTRINSIC(v16acc64) operator-(v16acc64 acc) { return neg(acc); }
#endif
#if 0  // Complex Type
INTRINSIC(v8cacc64) add(v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64) sub(v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64) negadd(v8cacc64 acc1, v8cacc64 acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64) neg(v8cacc64 acc) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_ACC1024_acc64_neg_conf(acc, conf);
}
[[deprecated("Function 'clr' is deprecated. Please use the 'broadcast_zero_to' "
             "variant instead.")]] INTRINSIC(v8cacc64) clr16c() {
  return __builtin_aiev2_clr16c_conf();
}
INTRINSIC(v8cacc64) broadcast_zero_to_v8cacc64() {
  return __builtin_aiev2_clr16c_conf();
}
INTRINSIC(v8cacc64)
add_conf(v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_add_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
sub_conf(v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int shift16, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_sub_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
negadd_conf(v8cacc64 acc1, v8cacc64 acc2, int zero_acc1, int shift16,
            int sub_acc1, int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc1, sub_acc2, 0);
  return __builtin_aiev2_negadd_acc(acc1, acc2, conf);
}
INTRINSIC(v8cacc64)
neg_conf(v8cacc64 acc, int zero_acc1, int shift16, int sub_acc) {
  int conf = aiev2_compute_control(0, 0, 1, (0), 0, zero_acc1, shift16, 0,
                                   sub_acc, 0, 0);
  return __builtin_aiev2_ACC1024_acc64_neg_conf(acc, conf);
}
INTRINSIC(v8cacc64) operator+(v8cacc64 acc1, v8cacc64 acc2) {
  return add(acc1, acc2);
}
INTRINSIC(v8cacc64) operator-(v8cacc64 acc1, v8cacc64 acc2) {
  return sub(acc1, acc2);
}
INTRINSIC(v8cacc64) operator-(v8cacc64 acc) { return neg(acc); }
#endif // End Complex Type

#if 0 // add,sub,negadd defined below
INTRINSIC(v16accfloat) add(v16accfloat acc1, v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_add_accfloat(acc1, acc2, conf);
}
INTRINSIC(v16accfloat) sub(v16accfloat acc1, v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_sub_accfloat(acc1, acc2, conf);
}
INTRINSIC(v16accfloat) negadd(v16accfloat acc1, v16accfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_negsub_accfloat(acc1, acc2, conf);
}
#endif
INTRINSIC(v16accfloat) neg(v16accfloat acc) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_ACC512_accfloat_neg_conf(acc, conf);
}

INTRINSIC(v16accfloat) broadcast_zero_to_v16accfloat() {
  return __builtin_aiev2_clr16f_conf();
}

[[deprecated("Function 'clr' is deprecated. Please use the 'broadcast_zero_to' "
             "variant instead.")]] INTRINSIC(v16accfloat) clr16f() {
  return broadcast_zero_to_v16accfloat();
}
INTRINSIC(v16accfloat)
add_conf(v16accfloat acc1, v16accfloat acc2, int zero_acc1, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_add_accfloat(acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
sub_conf(v16accfloat acc1, v16accfloat acc2, int zero_acc1, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_sub_accfloat(acc1, acc2, conf);
}
INTRINSIC(v16accfloat)
negadd_conf(v16accfloat acc1, v16accfloat acc2, int zero_acc1, int sub_acc1,
            int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_negsub_accfloat(acc1, acc2, conf);
}
INTRINSIC(v16accfloat) add(v16accfloat acc1, v16accfloat acc2) {
  return add_conf(acc1, acc2, 0, 0, 0);
}
INTRINSIC(v16accfloat) sub(v16accfloat acc1, v16accfloat acc2) {
  return sub_conf(acc1, acc2, 0, 0, 0);
}
INTRINSIC(v16accfloat) negadd(v16accfloat acc1, v16accfloat acc2) {
  return negadd_conf(acc1, acc2, 0, 0, 0);
}
INTRINSIC(v16accfloat) neg_conf(v16accfloat acc, int zero_acc1, int sub_acc) {
  int conf =
      aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc, 0, 0);
  return __builtin_aiev2_ACC512_accfloat_neg_conf(acc, conf);
}
#if 0 // To be removed
INTRINSIC(v16accfloat) operator+(v16accfloat acc1, v16accfloat acc2) {
  return add(acc1, acc2);
}
INTRINSIC(v16accfloat) operator-(v16accfloat acc1, v16accfloat acc2) {
  return sub(acc1, acc2);
}
INTRINSIC(v16accfloat) operator-(v16accfloat acc) { return neg(acc); }
#endif
#if 0  // Complex float
INTRINSIC(v8caccfloat) add(v8caccfloat acc1, v8caccfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_v8caccfloat_bf_add_conf(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat) sub(v8caccfloat acc1, v8caccfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_v8caccfloat_bf_sub_conf(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat) negadd(v8caccfloat acc1, v8caccfloat acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_negadd_accfloat(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat) neg(v8caccfloat acc) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, 0, 0, 0, 0, 0, 0);
  return __builtin_aiev2_v8caccfloat_bf_neg_conf(acc, conf);
}
INTRINSIC(v8caccfloat)
add_conf(v8caccfloat acc1, v8caccfloat acc2, int zero_acc1, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_v8caccfloat_bf_add_conf(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat)
sub_conf(v8caccfloat acc1, v8caccfloat acc2, int zero_acc1, int sub_acc1,
         int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_v8caccfloat_bf_sub_conf(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat)
negadd_conf(v8caccfloat acc1, v8caccfloat acc2, int zero_acc1, int sub_acc1,
            int sub_acc2) {
  int conf = aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc1,
                                   sub_acc2, 0);
  return __builtin_aiev2_negadd_accfloat(acc1, acc2, conf);
}
INTRINSIC(v8caccfloat) neg_conf(v8caccfloat acc, int zero_acc1, int sub_acc) {
  int conf =
      aiev2_compute_control(0, 0, 2, (3), 0, zero_acc1, 0, 0, sub_acc, 0, 0);
  return __builtin_aiev2_v8caccfloat_bf_neg_conf(acc, conf);
}
INTRINSIC(v8caccfloat) operator+(v8caccfloat acc1, v8caccfloat acc2) {
  return add(acc1, acc2);
}
INTRINSIC(v8caccfloat) operator-(v8caccfloat acc1, v8caccfloat acc2) {
  return sub(acc1, acc2);
}
INTRINSIC(v8caccfloat) operator-(v8caccfloat acc) { return neg(acc); }
inline v16caccfloat add(v16caccfloat acc1, v16caccfloat acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = add(x0, y0);

  v8caccfloat z1 = add(x1, y1);

  return concat(z0, z1);
}

inline v16caccfloat sub(v16caccfloat acc1, v16caccfloat acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = sub(x0, y0);

  v8caccfloat z1 = sub(x1, y1);

  return concat(z0, z1);
}

inline v16caccfloat negadd(v16caccfloat acc1, v16caccfloat acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = negadd(x0, y0);

  v8caccfloat z1 = negadd(x1, y1);

  return concat(z0, z1);
}

inline v16caccfloat neg(v16caccfloat acc) {
  v8caccfloat x0 = extract_v8caccfloat(acc, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc, 1);

  v8caccfloat z0 = neg(x0);

  v8caccfloat z1 = neg(x1);

  return concat(z0, z1);
}
inline v16caccfloat add_conf(v16caccfloat acc1, v16caccfloat acc2,
                             int zero_acc1, int sub_acc1, int sub_acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = add_conf(x0, y0, zero_acc1, sub_acc1, sub_acc2);

  v8caccfloat z1 = add_conf(x1, y1, zero_acc1, sub_acc1, sub_acc2);

  return concat(z0, z1);
}
inline v16caccfloat sub_conf(v16caccfloat acc1, v16caccfloat acc2,
                             int zero_acc1, int sub_acc1, int sub_acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = sub_conf(x0, y0, zero_acc1, sub_acc1, sub_acc2);

  v8caccfloat z1 = sub_conf(x1, y1, zero_acc1, sub_acc1, sub_acc2);

  return concat(z0, z1);
}
inline v16caccfloat negadd_conf(v16caccfloat acc1, v16caccfloat acc2,
                                int zero_acc1, int sub_acc1, int sub_acc2) {
  v8caccfloat x0 = extract_v8caccfloat(acc1, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc1, 1);

  v8caccfloat y0 = extract_v8caccfloat(acc2, 0);

  v8caccfloat y1 = extract_v8caccfloat(acc2, 1);

  v8caccfloat z0 = negadd_conf(x0, y0, zero_acc1, sub_acc1, sub_acc2);

  v8caccfloat z1 = negadd_conf(x1, y1, zero_acc1, sub_acc1, sub_acc2);

  return concat(z0, z1);
}
inline v16caccfloat neg_conf(v16caccfloat acc, int zero_acc1, int sub_acc) {
  v8caccfloat x0 = extract_v8caccfloat(acc, 0);

  v8caccfloat x1 = extract_v8caccfloat(acc, 1);

  v8caccfloat z0 = neg_conf(x0, zero_acc1, sub_acc);

  v8caccfloat z1 = neg_conf(x1, zero_acc1, sub_acc);

  return concat(z0, z1);
}
inline v4caccfloat add(v4caccfloat acc1, v4caccfloat acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = add(x, y);

  return extract_v4caccfloat(z, 0);
}

inline v4caccfloat sub(v4caccfloat acc1, v4caccfloat acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = sub(x, y);

  return extract_v4caccfloat(z, 0);
}

inline v4caccfloat negadd(v4caccfloat acc1, v4caccfloat acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = negadd(x, y);

  return extract_v4caccfloat(z, 0);
}

inline v4caccfloat neg(v4caccfloat acc) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc, x0);

  v8caccfloat z = neg(x);

  return extract_v4caccfloat(z, 0);
}
inline v4caccfloat add_conf(v4caccfloat acc1, v4caccfloat acc2, int zero_acc1,
                            int sub_acc1, int sub_acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = add_conf(x, y, zero_acc1, sub_acc1, sub_acc2);

  return extract_v4caccfloat(z, 0);
}
inline v4caccfloat sub_conf(v4caccfloat acc1, v4caccfloat acc2, int zero_acc1,
                            int sub_acc1, int sub_acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = sub_conf(x, y, zero_acc1, sub_acc1, sub_acc2);

  return extract_v4caccfloat(z, 0);
}
inline v4caccfloat negadd_conf(v4caccfloat acc1, v4caccfloat acc2,
                               int zero_acc1, int sub_acc1, int sub_acc2) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc1, x0);

  v8caccfloat y = concat(acc2, x0);

  v8caccfloat z = negadd_conf(x, y, zero_acc1, sub_acc1, sub_acc2);

  return extract_v4caccfloat(z, 0);
}
inline v4caccfloat neg_conf(v4caccfloat acc, int zero_acc1, int sub_acc) {
  v4caccfloat x0 = undef_v4caccfloat();

  v8caccfloat x = concat(acc, x0);

  v8caccfloat z = neg_conf(x, zero_acc1, sub_acc);

  return extract_v4caccfloat(z, 0);
}
#endif // Complex float

inline v16accfloat mul_elem_16(v16float v1, v16float v2);

inline v16accfloat mul_elem_16_accuracy_low(v16float v1, v16float v2);

inline v16accfloat mul_elem_16_accuracy_fast(v16float v1, v16float v2);

inline v16accfloat mul_elem_16_accuracy_safe(v16float v1, v16float v2);

#if 0
inline v8caccfloat mul_elem_8(v8float v1, v8cfloat v2);

inline v8caccfloat mul_elem_8(v8cfloat v1, v8float v2);

inline v8caccfloat mul_elem_8(v8cfloat v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_low(v8float v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_low(v8cfloat v1, v8float v2);

inline v8caccfloat mul_elem_8_accuracy_low(v8cfloat v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_fast(v8float v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_fast(v8cfloat v1, v8float v2);

inline v8caccfloat mul_elem_8_accuracy_fast(v8cfloat v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_safe(v8float v1, v8cfloat v2);

inline v8caccfloat mul_elem_8_accuracy_safe(v8cfloat v1, v8float v2);

inline v8caccfloat mul_elem_8_accuracy_safe(v8cfloat v1, v8cfloat v2);

inline v16accfloat negmul_elem_16(v16float v1, v16float v2);

inline v8caccfloat negmul_elem_8(v8float v1, v8cfloat v2);

inline v8caccfloat negmul_elem_8(v8cfloat v1, v8float v2);

inline v8caccfloat negmul_elem_8(v8cfloat v1, v8cfloat v2);

inline v16accfloat negmul_elem_16_accuracy_low(v16float v1, v16float v2);

inline v8caccfloat negmul_elem_8_accuracy_low(v8float v1, v8cfloat v2);

inline v8caccfloat negmul_elem_8_accuracy_low(v8cfloat v1, v8float v2);

inline v8caccfloat negmul_elem_8_accuracy_low(v8cfloat v1, v8cfloat v2);

inline v16accfloat negmul_elem_16_accuracy_fast(v16float v1, v16float v2);

inline v8caccfloat negmul_elem_8_accuracy_fast(v8float v1, v8cfloat v2);

inline v8caccfloat negmul_elem_8_accuracy_fast(v8cfloat v1, v8float v2);

inline v8caccfloat negmul_elem_8_accuracy_fast(v8cfloat v1, v8cfloat v2);

inline v16accfloat negmul_elem_16_accuracy_safe(v16float v1, v16float v2);

inline v8caccfloat negmul_elem_8_accuracy_safe(v8float v1, v8cfloat v2);

inline v8caccfloat negmul_elem_8_accuracy_safe(v8cfloat v1, v8float v2);

inline v8caccfloat negmul_elem_8_accuracy_safe(v8cfloat v1, v8cfloat v2);

inline v16accfloat mac_elem_16(v16float v1, v16float v2, v16accfloat acc);

inline v8caccfloat mac_elem_8(v8float v1, v8cfloat v2, v8caccfloat acc);

inline v8caccfloat mac_elem_8(v8cfloat v1, v8float v2, v8caccfloat acc);

inline v8caccfloat mac_elem_8(v8cfloat v1, v8cfloat v2, v8caccfloat acc);

inline v16accfloat mac_elem_16_accuracy_safe(v16float v1, v16float v2,
                                             v16accfloat acc);

inline v8caccfloat mac_elem_8_accuracy_safe(v8float v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_safe(v8cfloat v1, v8float v2,
                                            v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_safe(v8cfloat v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v16accfloat mac_elem_16_accuracy_fast(v16float v1, v16float v2,
                                             v16accfloat acc);

inline v8caccfloat mac_elem_8_accuracy_fast(v8float v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_fast(v8cfloat v1, v8float v2,
                                            v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_fast(v8cfloat v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v16accfloat mac_elem_16_accuracy_low(v16float v1, v16float v2,
                                            v16accfloat acc);

inline v8caccfloat mac_elem_8_accuracy_low(v8float v1, v8cfloat v2,
                                           v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_low(v8cfloat v1, v8float v2,
                                           v8caccfloat acc);

inline v8caccfloat mac_elem_8_accuracy_low(v8cfloat v1, v8cfloat v2,
                                           v8caccfloat acc);

inline v16accfloat addmac_elem_16(v16float v1, v16float v2, v16accfloat acc1,
                                  v16accfloat acc2);

inline v16accfloat addmac_elem_16_accuracy_safe(v16float v1, v16float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmac_elem_16_accuracy_fast(v16float v1, v16float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmac_elem_16_accuracy_low(v16float v1, v16float v2,
                                               v16accfloat acc1,
                                               v16accfloat acc2);

inline v16accfloat msc_elem_16(v16float v1, v16float v2, v16accfloat acc);

inline v8caccfloat msc_elem_8(v8float v1, v8cfloat v2, v8caccfloat acc);

inline v8caccfloat msc_elem_8(v8cfloat v1, v8float v2, v8caccfloat acc);

inline v8caccfloat msc_elem_8(v8cfloat v1, v8cfloat v2, v8caccfloat acc);

inline v16accfloat msc_elem_16_accuracy_safe(v16float v1, v16float v2,
                                             v16accfloat acc);

inline v8caccfloat msc_elem_8_accuracy_safe(v8float v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_safe(v8cfloat v1, v8float v2,
                                            v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_safe(v8cfloat v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v16accfloat msc_elem_16_accuracy_fast(v16float v1, v16float v2,
                                             v16accfloat acc);

inline v8caccfloat msc_elem_8_accuracy_fast(v8float v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_fast(v8cfloat v1, v8float v2,
                                            v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_fast(v8cfloat v1, v8cfloat v2,
                                            v8caccfloat acc);

inline v16accfloat msc_elem_16_accuracy_low(v16float v1, v16float v2,
                                            v16accfloat acc);

inline v8caccfloat msc_elem_8_accuracy_low(v8float v1, v8cfloat v2,
                                           v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_low(v8cfloat v1, v8float v2,
                                           v8caccfloat acc);

inline v8caccfloat msc_elem_8_accuracy_low(v8cfloat v1, v8cfloat v2,
                                           v8caccfloat acc);

inline v16accfloat addmsc_elem_16(v16float v1, v16float v2, v16accfloat acc1,
                                  v16accfloat acc2);

inline v16accfloat addmsc_elem_16_accuracy_safe(v16float v1, v16float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmsc_elem_16_accuracy_fast(v16float v1, v16float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmsc_elem_16_accuracy_low(v16float v1, v16float v2,
                                               v16accfloat acc1,
                                               v16accfloat acc2);

inline v16accfloat mul_4x8_8x4(v32float v1, v32float v2);

inline v4caccfloat mul_2x8_8x2(v16float v1, v16cfloat v2);

inline v16accfloat mul_4x8_8x4_accuracy_safe(v32float v1, v32float v2);

inline v4caccfloat mul_2x8_8x2_accuracy_safe(v16float v1, v16cfloat v2);

inline v16accfloat mul_4x8_8x4_accuracy_fast(v32float v1, v32float v2);

inline v4caccfloat mul_2x8_8x2_accuracy_fast(v16float v1, v16cfloat v2);

inline v16accfloat mul_4x8_8x4_accuracy_low(v32float v1, v32float v2);

inline v4caccfloat mul_2x8_8x2_accuracy_low(v16float v1, v16cfloat v2);

inline v16accfloat negmul_4x8_8x4(v32float v1, v32float v2);

inline v16accfloat negmul_4x8_8x4_accuracy_safe(v32float v1, v32float v2);

inline v16accfloat negmul_4x8_8x4_accuracy_fast(v32float v1, v32float v2);

inline v16accfloat negmul_4x8_8x4_accuracy_low(v32float v1, v32float v2);

inline v16accfloat mac_4x8_8x4(v32float v1, v32float v2, v16accfloat acc);

inline v16accfloat mac_4x8_8x4_accuracy_safe(v32float v1, v32float v2,
                                             v16accfloat acc);

inline v16accfloat mac_4x8_8x4_accuracy_fast(v32float v1, v32float v2,
                                             v16accfloat acc);

inline v16accfloat mac_4x8_8x4_accuracy_low(v32float v1, v32float v2,
                                            v16accfloat acc);

inline v16accfloat addmac_4x8_8x4(v32float v1, v32float v2, v16accfloat acc1,
                                  v16accfloat acc2);

inline v16accfloat addmac_4x8_8x4_accuracy_safe(v32float v1, v32float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmac_4x8_8x4_accuracy_fast(v32float v1, v32float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmac_4x8_8x4_accuracy_low(v32float v1, v32float v2,
                                               v16accfloat acc1,
                                               v16accfloat acc2);

inline v16accfloat msc_4x8_8x4(v32float v1, v32float v2, v16accfloat acc);

inline v16accfloat msc_4x8_8x4_accuracy_safe(v32float v1, v32float v2,
                                             v16accfloat acc);

inline v16accfloat msc_4x8_8x4_accuracy_fast(v32float v1, v32float v2,
                                             v16accfloat acc);

inline v16accfloat msc_4x8_8x4_accuracy_low(v32float v1, v32float v2,
                                            v16accfloat acc);

inline v16accfloat addmsc_4x8_8x4(v32float v1, v32float v2, v16accfloat acc1,
                                  v16accfloat acc2);

inline v16accfloat addmsc_4x8_8x4_accuracy_safe(v32float v1, v32float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmsc_4x8_8x4_accuracy_fast(v32float v1, v32float v2,
                                                v16accfloat acc1,
                                                v16accfloat acc2);

inline v16accfloat addmsc_4x8_8x4_accuracy_low(v32float v1, v32float v2,
                                               v16accfloat acc1,
                                               v16accfloat acc2);
#endif
INTRINSIC(v16acc64) mul_2x4_4x8(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = msc_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_2x4_4x8(v16uint32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = addmac_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_2x4_4x8(v16uint32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = msc_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_2x4_4x8(v16uint32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = addmac_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_2x4_4x8(v16uint32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_2x4_4x8(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = msc_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_2x4_4x8(v16int32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = addmac_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_2x4_4x8(v16int32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_2x4_4x8(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = msc_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_2x4_4x8(v16int32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, b);
  acc = addmac_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_2x4_4x8(v16int32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, b);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_2x4_4x8_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, b, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v32acc32) mul_4x2_2x8(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = msc_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v16uint32 a0, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = addmac_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v16uint32 a0, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, v32uint16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, v32uint16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = msc_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v16uint32 a0, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = addmac_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v16uint32 a0, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, v32int16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, v32int16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = msc_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v16int32 a0, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = addmac_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v16int32 a0, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, v32uint16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, v32uint16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, v32uint16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = msc_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v16int32 a0, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, b);
  acc = addmac_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v16int32 a0, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, b);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, v32int16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, v32int16 b, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, v32int16 b, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, b, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_4x4_4x4(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v16uint32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = msc_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v16uint32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = addmac_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v16uint32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v16uint32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v16uint32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = msc_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v16uint32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = addmac_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v16uint32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v16uint32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16uint32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(a0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v16int32 a0, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = msc_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v16int32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = addmac_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v16int32 a0, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v16int32 a0, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, v32uint16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, int sgn_x, v32uint16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v16int32 a0, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = msc_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v16int32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, b);
  acc = addmac_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v16int32 a0, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, b);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v16int32 a0, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(hi, sgn_x, b, sgn_y);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v16int32 a0, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, v32int16 b, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, b, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v16int32 a0, int sgn_x, v32int16 b, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a0, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(a0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v32acc32) mul_elem_32(v16uint32 a0, v16uint32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v16uint32 a0, v16uint32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = msc_elem_32_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = addmac_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = addmsc_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v16uint32 a0, v16uint32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v16uint32 a0, v16uint32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = msc_elem_32_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = addmac_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = addmsc_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v16int32 a0, v16int32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v16int32 a0, v16int32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = msc_elem_32_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = addmac_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = addmsc_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, v32uint16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v16int32 a0, v16int32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v16int32 a0, v16int32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = msc_elem_32_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, b);
  acc = addmac_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, b);
  acc = addmsc_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, v32int16 b, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, b, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::mul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_elem_16_2(v16uint32 a0, v16uint32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v16uint32 a0, v16uint32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = msc_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = addmac_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = addmsc_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                 int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                   int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                   int sgn_y, v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                   int sgn_y, v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32uint16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                   int sgn_y, v16acc64 acc1, int zero_acc1, int sub_mul,
                   int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32uint16 b,
                   int sgn_y, v16acc64 acc1, int zero_acc1, int sub_mul,
                   int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v16uint32 a0, v16uint32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v16uint32 a0, v16uint32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = msc_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = addmac_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = addmsc_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v32int16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 hi = (v32uint16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v16int32 a0, v16int32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v16int32 a0, v16int32 a1, v32uint16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = msc_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = addmac_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = addmsc_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, 0, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v32uint16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 0, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32uint16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v16int32 a0, v16int32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v16int32 a0, v16int32 a1, v32int16 b) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = msc_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, b);
  acc = addmac_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, b);
  acc = addmsc_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2(hi, sgn_x, b, sgn_y);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, 1, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(lo, false, b, sgn_y, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v32int16 b, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, b, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, 1, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v32int16 b, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 hi = (v32int16)shuffle(a0, a1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(hi, sgn_x, b, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(lo, false, b, sgn_y, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_4x2_2x4(v16uint32 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16uint32 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = msc_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16uint32 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = addmac_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16uint32 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = addmsc_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16uint32 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16uint32 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = msc_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16uint32 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16uint32 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = msc_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16uint32 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = addmac_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16uint32 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = addmsc_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16uint32 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16uint32 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = msc_4x2_2x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16uint32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16int32 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = msc_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16int32 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = addmac_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16int32 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = addmsc_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16int32 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16int32 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = msc_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4(v16int32 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = msc_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x2_2x4(v16int32 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, hi);
  acc = addmac_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x2_2x4(v16int32 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, hi);
  acc = addmsc_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x2_2x4(v16int32 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4(v16int32 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x2_2x4_conf(v16int32 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x2_2x4_conf(v16int32 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = msc_4x2_2x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x2_2x4_conf(v16int32 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x2_2x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                 v16uint32 b1, int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                   int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                      int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                      v16uint32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                 v16int32 b1, int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                   int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                      int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                      v16int32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 0, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16uint32 a0, v16uint32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32uint16 a_hi = (v32uint16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                 v16uint32 b1, int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0, v16uint32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                   int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                      int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                      v16uint32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v16uint32 b0, v16uint32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 0, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16uint32 b0,
                   v16uint32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 b_hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, b_hi);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
              v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, b_hi);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0, v16int32 b1,
                 int sgn_y) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0, v16int32 b1,
              int sgn_y, v16acc64 acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a_hi, sgn_x, b_hi, sgn_y);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, 0, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, 0, 0);
  acc =
      addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                   int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                      int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                      v16int32 b1, int sgn_y, int sub_mul) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmac_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int sub_mul,
                   int sub_acc1) {
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = addmsc_elem_16_2_conf(a_lo, false, b_lo, false, acc, acc1, 0, 1,
                              sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, v16int32 b0, v16int32 b1,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, b_hi, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, 1, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, 1, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = mac_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v16int32 a0, v16int32 a1, int sgn_x, v16int32 b0,
                   v16int32 b1, int sgn_y, v16acc64 acc1, int zero_acc1,
                   int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a0, a1, sgn_x, b0, b1, sgn_y, acc1, sub_mul,
                              sub_acc1);
  }
  v32uint16 a_lo = (v32uint16)shuffle(a0, a1, 2);
  v32int16 a_hi = (v32int16)shuffle(a0, a1, 3);
  v32uint16 b_lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 b_hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a_hi, sgn_x, b_hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a_hi, sgn_x, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_hi, sgn_y, acc, 0, 0, sub_mul, 0);
  acc = msc_elem_16_2_conf(a_lo, false, b_lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_2x4_4x8(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = msc_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = addmac_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = addmsc_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = msc_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmac_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = msc_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = addmac_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = addmsc_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = msc_2x4_4x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmac_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = msc_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = addmac_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = addmsc_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = msc_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmac_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_2x4_4x8(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_2x4_4x8(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = msc_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, hi);
  acc = addmac_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, hi);
  acc = addmsc_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = msc_2x4_4x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmac_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_2x4_4x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, hi, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_2x4_4x8_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_2x4_4x8_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_2x4_4x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_2x4_4x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v32acc32) mul_4x2_2x8(v32uint16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32uint16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = msc_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32uint16 a, v16uint32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = addmac_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32uint16 a, v16uint32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = addmsc_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32uint16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32uint16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = msc_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v16uint32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v16uint32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v16uint32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v16uint32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32uint16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32uint16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = msc_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32uint16 a, v16int32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = addmac_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32uint16 a, v16int32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = addmsc_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32uint16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32uint16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = msc_4x2_2x8_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v16int32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v16int32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, v16int32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, v16int32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32int16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = msc_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32int16 a, v16uint32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = addmac_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32int16 a, v16uint32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = addmsc_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32int16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32int16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = msc_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v16uint32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v16uint32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v16uint32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v16uint32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8(v32int16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = msc_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mac_4x2_2x8(v32int16 a, v16int32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, hi);
  acc = addmac_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) msc_4x2_2x8(v32int16 a, v16int32 b0, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, hi);
  acc = addmsc_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8(v32int16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8(v32int16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) mul_4x2_2x8_conf(v32int16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_4x2_2x8_conf(v32int16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = msc_4x2_2x8_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v16int32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmac_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v16int32 b0, v32acc32 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x2_2x8_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, v16int32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, v16int32 b0, v32acc32 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, hi, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::mul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_4x2_2x8_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x2_2x8_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v32acc32 acc = ::negmul_4x2_2x8_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x2_2x8_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_4x4_4x4(v32uint16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32uint16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = msc_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32uint16 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = addmac_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32uint16 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = addmsc_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32uint16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32uint16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = msc_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmac_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32uint16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32uint16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = msc_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32uint16 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = addmac_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32uint16 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = addmsc_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32uint16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32uint16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = msc_4x4_4x4_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmac_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32uint16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32int16 a, v16uint32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = msc_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32int16 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = addmac_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32int16 a, v16uint32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = addmsc_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32int16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32int16 a, v16uint32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = msc_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmac_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v16uint32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v16uint32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v16uint32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16uint32(), 2);
  v32uint16 hi = (v32uint16)shuffle(b0, undef_v16uint32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4(v32int16 a, v16int32 b0) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = msc_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mac_4x4_4x4(v32int16 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, hi);
  acc = addmac_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) msc_4x4_4x4(v32int16 a, v16int32 b0, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, hi);
  acc = addmsc_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4(v32int16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4(v32int16 a, int sgn_x, v16int32 b0, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4(a, sgn_x, hi, sgn_y);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) mul_4x4_4x4_conf(v32int16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_4x4_4x4_conf(v32int16 a, v16int32 b0, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = msc_4x4_4x4_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmac_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v16int32 b0, v16acc64 acc1, int sub_mul,
                 int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_4x4_4x4_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, v16int32 b0, v16acc64 acc1, int zero_acc1,
                 int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, b0, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, hi, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::mul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_4x4_4x4_conf(v32int16 a, int sgn_x, v16int32 b0, int sgn_y, v16acc64 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_4x4_4x4_conf(a, sgn_x, b0, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, undef_v16int32(), 2);
  v32int16 hi = (v32int16)shuffle(b0, undef_v16int32(), 3);
  v16acc64 acc = ::negmul_4x4_4x4_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_4x4_4x4_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v32acc32) mul_elem_32(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = mac_elem_32_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = msc_elem_32_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = addmac_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = addmsc_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = mac_elem_32_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = msc_elem_32_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = addmac_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = addmsc_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = mac_elem_32_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = msc_elem_32_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = addmac_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = addmsc_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = mac_elem_32_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = msc_elem_32_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = addmac_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = addmsc_elem_32_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = mac_elem_32_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = msc_elem_32_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = addmac_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = addmsc_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = mac_elem_32_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = msc_elem_32_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = addmac_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = addmsc_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                    int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v32acc32) mul_elem_32(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = mac_elem_32_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32) negmul_elem_32(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = msc_elem_32_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, hi);
  acc = addmac_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, hi);
  acc = addmsc_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
            v32acc32 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = mac_elem_32_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = msc_elem_32_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = addmac_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = addmsc_elem_32_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mul_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
negmul_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                    int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_32_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                            sub_acc1);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, v16int32 b0, v16int32 b1, v32acc32 acc1,
                 int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, hi, sub_mul);
  acc = ::mac_elem_32_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
mac_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::mul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v32acc32)
msc_elem_32_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                 v32acc32 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_32_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v32acc32 acc = ::negmul_elem_32_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_32_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v16acc64) mul_elem_16_2(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32uint16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = msc_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = addmac_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = addmsc_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                 int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = msc_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmac_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmsc_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                   int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                   int sgn_y, v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                   int sgn_y, v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                   int sgn_y, v16acc64 acc1, int zero_acc1, int sub_mul,
                   int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                   int sgn_y, v16acc64 acc1, int zero_acc1, int sub_mul,
                   int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32uint16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = msc_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = addmac_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = addmsc_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = msc_elem_16_2_conf(a, 0, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmac_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmsc_elem_16_2_conf(a, 0, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 0, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32uint16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32int16 a, v16uint32 b0, v16uint32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = msc_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = addmac_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = addmsc_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = msc_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmac_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmsc_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v16uint32 b0, v16uint32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v16uint32 b0, v16uint32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32uint16 hi = (v32uint16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};
INTRINSIC(v16acc64) mul_elem_16_2(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64) negmul_elem_16_2(v32int16 a, v16int32 b0, v16int32 b1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = msc_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, hi);
  acc = addmac_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, hi);
  acc = addmsc_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
              v16acc64 acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2(a, sgn_x, hi, sgn_y);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, 0, 0, 0);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = msc_elem_16_2_conf(a, 1, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmac_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = addmsc_elem_16_2_conf(a, 1, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mul_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
negmul_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1,
                      int sgn_y, int sub_mul) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = msc_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmac_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int sub_mul, int sub_acc1) {
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = addmsc_elem_16_2_conf(a, sgn_x, lo, false, acc, acc1, 0, 1, sub_mul, 0,
                              sub_acc1);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, v16int32 b0, v16int32 b1, v16acc64 acc1,
                   int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, b0, b1, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, hi, sub_mul);
  acc = ::mac_elem_16_2_conf(a, 1, lo, false, acc, 0, 0x01, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
mac_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::mul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v16acc64)
msc_elem_16_2_conf(v32int16 a, int sgn_x, v16int32 b0, v16int32 b1, int sgn_y,
                   v16acc64 acc1, int zero_acc1, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_16_2_conf(a, sgn_x, b0, b1, sgn_y, acc1, sub_mul, sub_acc1);
  }
  v32uint16 lo = (v32uint16)shuffle(b0, b1, 2);
  v32int16 hi = (v32int16)shuffle(b0, b1, 3);
  v16acc64 acc = ::negmul_elem_16_2_conf(a, sgn_x, hi, sgn_y, sub_mul);
  acc = ::mac_elem_16_2_conf(a, sgn_x, lo, false, acc, 0, 1, sub_mul, 0);
  acc = ::sub_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

#if 0 // Complex Type
INTRINSIC(v8cacc64) mul_elem_8(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8(a, hi);
  acc = mac_elem_8_conf(a, 1, lo, false, acc, 0, 1, OP_TERM_NEG_COMPLEX, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) negmul_elem_8(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::negmul_elem_8(a, hi);
  acc = msc_elem_8_conf(a, 1, lo, false, acc, 0, 1, OP_TERM_NEG_COMPLEX, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) mac_elem_8(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8(a, hi);
  acc = addmac_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, 0, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) msc_elem_8(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::negmul_elem_8(a, hi);
  acc = addmsc_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, 0, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) mul_elem_8_conf(v8cint32 a, v8cint32 b, int sub_mul) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX, sub_mul);
  acc = mac_elem_8_conf(a, 1, lo, false, acc, 0, 1, OP_TERM_NEG_COMPLEX,
                        sub_mul, 0);
  return acc;
}
INTRINSIC(v8cacc64) negmul_elem_8_conf(v8cint32 a, v8cint32 b, int sub_mul) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX, sub_mul);
  acc = msc_elem_8_conf(a, 1, lo, false, acc, 0, 1, OP_TERM_NEG_COMPLEX,
                        sub_mul, 0);
  return acc;
}
INTRINSIC(v8cacc64)
mac_elem_8_conf(v8cint32 a, v8cint32 b, v8cacc64 acc1, int sub_mul,
                int sub_acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX, sub_mul);
  acc = addmac_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v8cacc64)
msc_elem_8_conf(v8cint32 a, v8cint32 b, v8cacc64 acc1, int sub_mul,
                int sub_acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX, sub_mul);
  acc = addmsc_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, sub_mul, 0, sub_acc1);
  return acc;
}
INTRINSIC(v8cacc64)
mac_elem_8_conf(v8cint32 a, v8cint32 b, v8cacc64 acc1, int zero_acc1,
                int sub_mask, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return mac_elem_8_conf(a, b, acc1, sub_mul, sub_acc1);
  }
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, sub_mask, sub_mul);
  acc = ::mac_elem_8_conf(a, 1, lo, 0, acc, 0, 1, sub_mask, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
}
INTRINSIC(v8cacc64)
msc_elem_8_conf(v8cint32 a, v8cint32 b, v8cacc64 acc1, int zero_acc1,
                int sub_mask, int sub_mul, int sub_acc1) {
  if (__builtin_constant_p(zero_acc1) && (zero_acc1 == 0)) {
    return msc_elem_8_conf(a, b, acc1, sub_mul, sub_acc1);
  }
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, sub_mask, sub_mul);
  acc = ::msc_elem_8_conf(a, 1, lo, 0, acc, 0, 1, sub_mask, sub_mul, 0);
  acc = ::add_conf(acc1, acc, zero_acc1, 0, sub_acc1, 0);
  return acc;
};

INTRINSIC(v8cacc64) mul_elem_8_cc(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0);
  acc = mac_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) negmul_elem_8_cc(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0);
  acc = msc_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) mac_elem_8_cc(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0);
  acc = addmac_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) msc_elem_8_cc(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X_Y, 0);
  acc = addmsc_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, 0, 0, 0);
  return acc;
};

INTRINSIC(v8cacc64) mul_elem_8_cn(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0);
  acc = mac_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) negmul_elem_8_cn(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0);
  acc = msc_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) mac_elem_8_cn(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0);
  acc = addmac_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) msc_elem_8_cn(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_X, 0);
  acc = addmsc_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, 0, 0, 0);
  return acc;
};

INTRINSIC(v8cacc64) mul_elem_8_nc(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0);
  acc = mac_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) negmul_elem_8_nc(v8cint32 a, v8cint32 b) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0);
  acc = msc_elem_8_conf(a, 1, lo, false, acc, 0, 1,
                        OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) mac_elem_8_nc(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc = ::mul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0);
  acc = addmac_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0, 0, 0);
  return acc;
}
INTRINSIC(v8cacc64) msc_elem_8_nc(v8cint32 a, v8cint32 b, v8cacc64 acc1) {
  v16cint16 lo = (v16cint16)shuffle(b, undef_v8cint32(), 2);
  v16cint16 hi = (v16cint16)shuffle(b, undef_v8cint32(), 3);
  v8cacc64 acc =
      ::negmul_elem_8_conf(a, hi, OP_TERM_NEG_COMPLEX_CONJUGATE_Y, 0);
  acc = addmsc_elem_8_conf(a, 1, lo, false, acc, acc1, 0, 1,
                           OP_TERM_NEG_COMPLEX, 0, 0, 0);
  return acc;
}

#endif // End Complex Type

#endif /*__AIEV2MULT_H*/
